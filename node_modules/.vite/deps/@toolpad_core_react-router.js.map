{
  "version": 3,
  "sources": ["../../@toolpad/core/react-router/ReactRouterAppProvider.js"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport { useSearchParams, useLocation, useNavigate } from 'react-router';\nimport { AppProvider } from \"../AppProvider/AppProvider.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ReactRouterAppProvider(props) {\n  const {\n    pathname\n  } = useLocation();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const navigateImpl = React.useCallback((url, {\n    history = 'auto'\n  } = {}) => {\n    if (history === 'auto' || history === 'push') {\n      return navigate(url);\n    }\n    if (history === 'replace') {\n      return navigate(url, {\n        replace: true\n      });\n    }\n    throw new Error(`Invalid history option: ${history}`);\n  }, [navigate]);\n  const routerImpl = React.useMemo(() => ({\n    pathname,\n    searchParams,\n    navigate: navigateImpl\n  }), [pathname, searchParams, navigateImpl]);\n  return /*#__PURE__*/_jsx(AppProvider, {\n    router: routerImpl,\n    ...props\n  });\n}\nexport { ReactRouterAppProvider, /** TODO: Old usage, remove export from v0.14.0 */\n/** @deprecated Import `ReactRouterAppProvider` instead. */\nReactRouterAppProvider as AppProvider };"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,YAAuB;AAGvB,yBAA4B;AAC5B,SAAS,uBAAuB,OAAO;AACrC,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,YAAY;AAChB,QAAM,CAAC,YAAY,IAAI,gBAAgB;AACvC,QAAM,WAAW,YAAY;AAC7B,QAAM,eAAqB,kBAAY,CAAC,KAAK;AAAA,IAC3C,UAAU;AAAA,EACZ,IAAI,CAAC,MAAM;AACT,QAAI,YAAY,UAAU,YAAY,QAAQ;AAC5C,aAAO,SAAS,GAAG;AAAA,IACrB;AACA,QAAI,YAAY,WAAW;AACzB,aAAO,SAAS,KAAK;AAAA,QACnB,SAAS;AAAA,MACX,CAAC;AAAA,IACH;AACA,UAAM,IAAI,MAAM,2BAA2B,OAAO,EAAE;AAAA,EACtD,GAAG,CAAC,QAAQ,CAAC;AACb,QAAM,aAAmB,cAAQ,OAAO;AAAA,IACtC;AAAA,IACA;AAAA,IACA,UAAU;AAAA,EACZ,IAAI,CAAC,UAAU,cAAc,YAAY,CAAC;AAC1C,aAAoB,mBAAAA,KAAK,aAAa;AAAA,IACpC,QAAQ;AAAA,IACR,GAAG;AAAA,EACL,CAAC;AACH;",
  "names": ["_jsx"]
}
