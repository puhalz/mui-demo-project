{
  "version": 3,
  "sources": ["../../chance/chance.js", "../../@mui/x-data-grid-generator/renderer/renderAvatar.js", "../../@mui/x-data-grid-generator/renderer/renderCountry.js", "../../@mui/x-data-grid-generator/renderer/renderEmail.js", "../../@mui/x-data-grid-generator/renderer/renderLink.js", "../../@mui/x-data-grid-generator/renderer/renderIncoterm.js", "../../@mui/x-data-grid-generator/renderer/renderPnl.js", "../../@mui/x-data-grid-generator/renderer/renderProgress.js", "../../@mui/x-data-grid-generator/renderer/renderRating.js", "../../@mui/x-data-grid-generator/renderer/renderStatus.js", "../../@mui/x-data-grid-generator/renderer/renderTotalPrice.js", "../../@mui/x-data-grid-generator/renderer/renderEditCurrency.js", "../../@mui/x-license/encoding/md5.js", "../../@mui/x-license/encoding/base64.js", "../../@mui/x-license/utils/plan.js", "../../@mui/x-license/utils/licenseModel.js", "../../@mui/x-license/utils/licenseErrorMessageUtils.js", "../../@mui/x-license/utils/licenseInfo.js", "../../@mui/x-license/utils/licenseStatus.js", "../../@mui/x-license/verifyLicense/verifyLicense.js", "../../@mui/x-license/useLicenseVerifier/useLicenseVerifier.js", "../../@mui/x-license/Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js", "../../@mui/x-license/Watermark/Watermark.js", "../../@mui/x-license/Unstable_LicenseInfoProvider/LicenseInfoProvider.js", "../../@mui/x-data-grid-pro/esm/components/GridTreeDataGroupingCell.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridRootProps.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridApiContext.js", "../../@mui/x-data-grid-pro/esm/components/GridColumnMenuPinningItem.js", "../../@mui/x-data-grid-pro/esm/components/GridDetailPanelToggleCell.js", "../../@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/gridDetailPanelSelector.js", "../../@mui/x-data-grid-pro/esm/components/GridRowReorderCell.js", "../../@mui/x-data-grid-pro/esm/material/icons.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterMenuContainer.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterCell.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterClearButton.js", "../../@mui/x-data-grid-pro/esm/components/headerFiltering/GridHeaderFilterMenu.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnReorder/columnReorderSelector.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowReorder/gridRowReorderColDef.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/gridTreeDataGroupColDef.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/gridDetailPanelToggleColDef.js", "../../@mui/x-data-grid-pro/esm/hooks/features/dataSource/cache.js", "../../@mui/x-data-grid-pro/esm/utils/tree/utils.js", "../../@mui/x-data-grid-premium/esm/DataGridPremium/DataGridPremium.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/DataGridPro.js", "../../@mui/x-data-grid-pro/esm/hooks/features/infiniteLoader/useGridInfiniteLoader.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnReorder/useGridColumnReorder.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/useGridTreeData.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/useGridTreeDataPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/treeData/gridTreeDataUtils.js", "../../@mui/x-data-grid-pro/esm/utils/tree/insertDataRowInTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/createRowTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/sortRowTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/removeDataRowFromTree.js", "../../@mui/x-data-grid-pro/esm/utils/tree/updateRowTree.js", "../../@mui/x-data-grid-pro/esm/hooks/features/serverSideTreeData/useGridDataSourceTreeDataPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/serverSideTreeData/utils.js", "../../@mui/x-data-grid-pro/esm/components/GridDataSourceTreeDataGroupingCell.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridPrivateApiContext.js", "../../@mui/x-data-grid-pro/esm/hooks/features/dataSource/gridDataSourceSelector.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnPinning/useGridColumnPinning.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnPinning/useGridColumnPinningPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/useGridDetailPanel.js", "../../@mui/x-data-grid-pro/esm/hooks/features/detailPanel/useGridDetailPanelPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowReorder/useGridRowReorder.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowReorder/useGridRowReorderPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/lazyLoader/useGridLazyLoader.js", "../../@mui/x-data-grid-pro/esm/hooks/features/lazyLoader/useGridLazyLoaderPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowPinning/useGridRowPinning.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rowPinning/useGridRowPinningPreProcessors.js", "../../@mui/x-data-grid-pro/esm/hooks/features/dataSource/useGridDataSource.js", "../../@mui/x-data-grid-pro/esm/hooks/features/dataSource/utils.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/useDataGridProComponent.js", "../../@mui/x-data-grid-pro/esm/DataGridPro/useDataGridProProps.js", "../../@mui/x-data-grid-pro/esm/components/GridProColumnMenu.js", "../../@mui/x-data-grid-pro/esm/components/GridColumnHeaders.js", "../../@mui/x-data-grid-pro/esm/hooks/features/columnHeaders/useGridColumnHeaders.js", "../../@mui/x-data-grid-pro/esm/components/GridDetailPanels.js", "../../@mui/x-data-grid-pro/esm/components/GridDetailPanel.js", "../../@mui/x-internals/esm/useResizeObserver/useResizeObserver.js", "../../@mui/x-data-grid-pro/esm/components/GridPinnedRows.js", "../../@mui/x-data-grid-pro/esm/material/index.js", "../../@mui/x-data-grid-pro/esm/constants/dataGridProDefaultSlotsComponents.js", "../../@mui/x-data-grid-pro/esm/utils/releaseInfo.js", "../../@mui/x-data-grid-pro/esm/internals/propValidation.js", "../../@mui/x-data-grid-pro/esm/hooks/utils/useGridAriaAttributes.js", "../../@mui/x-data-grid-pro/esm/hooks/features/rows/useGridRowAriaAttributes.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/useGridAggregation.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/gridAggregationSelectors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/gridAggregationUtils.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/createAggregationLookup.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/useGridAggregationPreProcessors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/wrapColumnWithAggregation.js", "../../@mui/x-data-grid-premium/esm/components/GridFooterCell.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useGridRootProps.js", "../../@mui/x-data-grid-premium/esm/components/GridAggregationHeader.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useGridApiContext.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/useGridRowGrouping.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/gridRowGroupingSelector.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/gridRowGroupingUtils.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/useGridRowGroupingPreProcessors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/createGroupingColDef.js", "../../@mui/x-data-grid-premium/esm/components/GridGroupingColumnFooterCell.js", "../../@mui/x-data-grid-premium/esm/components/GridGroupingCriteriaCell.js", "../../@mui/x-data-grid-premium/esm/components/GridDataSourceGroupingCriteriaCell.js", "../../@mui/x-data-grid-premium/esm/components/GridGroupingColumnLeafCell.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rowGrouping/useGridDataSourceRowGroupingPreProcessors.js", "../../@mui/x-data-grid-premium/esm/hooks/features/export/useGridExcelExport.js", "../../@mui/x-data-grid-premium/esm/hooks/features/export/serializer/utils.js", "../../@mui/x-data-grid-premium/esm/hooks/features/export/serializer/excelSerializer.js", "../../@mui/x-data-grid-premium/esm/components/GridExcelExportMenuItem.js", "../../@mui/x-data-grid-premium/esm/material/icons.js", "../../@mui/x-data-grid-premium/esm/components/GridColumnMenuAggregationItem.js", "../../@mui/x-data-grid-premium/esm/components/GridPremiumColumnMenu.js", "../../@mui/x-data-grid-premium/esm/components/GridColumnMenuRowGroupItem.js", "../../@mui/x-data-grid-premium/esm/components/GridColumnMenuRowUngroupItem.js", "../../@mui/x-data-grid-premium/esm/hooks/features/cellSelection/useGridCellSelection.js", "../../@mui/x-data-grid-premium/esm/hooks/features/cellSelection/gridCellSelectionSelector.js", "../../@mui/x-data-grid-premium/esm/hooks/features/clipboard/useGridClipboardImport.js", "../../@mui/x-data-grid-premium/esm/DataGridPremium/useDataGridPremiumComponent.js", "../../@mui/x-data-grid-premium/esm/DataGridPremium/useDataGridPremiumProps.js", "../../@mui/x-data-grid-premium/esm/hooks/features/aggregation/gridAggregationFunctions.js", "../../@mui/x-data-grid-premium/esm/material/index.js", "../../@mui/x-data-grid-premium/esm/constants/dataGridPremiumDefaultSlotsComponents.js", "../../@mui/x-data-grid-premium/esm/utils/releaseInfo.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useGridPrivateApiContext.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useGridAriaAttributes.js", "../../@mui/x-data-grid-premium/esm/hooks/features/rows/useGridRowAriaAttributes.js", "../../@mui/x-data-grid-premium/esm/hooks/utils/useKeepGroupedColumnsHidden.js", "../../@mui/x-data-grid-generator/services/static-data.js", "../../@mui/x-data-grid-generator/renderer/renderEditProgress.js", "../../@mui/x-data-grid-generator/renderer/renderEditStatus.js", "../../@mui/x-data-grid-generator/renderer/renderEditIncoterm.js", "../../@mui/x-data-grid-generator/renderer/renderEditRating.js", "../../@mui/x-data-grid-generator/renderer/renderEditCountry.js", "../../@mui/x-data-grid-generator/services/random-generator.js", "../../@mui/x-data-grid-generator/services/asyncWorker.js", "../../@mui/x-data-grid-generator/services/real-data-service.js", "../../@mui/x-data-grid-generator/services/basic-data-service.js", "../../@mui/x-data-grid-generator/columns/commodities.columns.js", "../../@mui/x-data-grid-generator/columns/employees.columns.js", "../../@mui/x-data-grid-generator/hooks/useDemoData.js", "../../@mui/x-data-grid-generator/node_modules/lru-cache/src/index.ts", "../../@mui/x-data-grid-generator/services/tree-data-generator.js", "../../@mui/x-data-grid-generator/hooks/useBasicDemoData.js", "../../@mui/x-data-grid-generator/hooks/useMovieData.js", "../../@mui/x-data-grid-generator/hooks/useQuery.js", "../../@mui/x-data-grid-generator/hooks/serverUtils.js", "../../@mui/x-data-grid-generator/hooks/useMockServer.js"],
  "sourcesContent": ["//  Chance.js 1.1.12\n//  https://chancejs.com\n//  (c) 2013 Victor Quinn\n//  Chance may be freely distributed or modified under the MIT license.\n\n(function () {\n\n    // Constants\n    var MAX_INT = 9007199254740992;\n    var MIN_INT = -MAX_INT;\n    var NUMBERS = '0123456789';\n    var CHARS_LOWER = 'abcdefghijklmnopqrstuvwxyz';\n    var CHARS_UPPER = CHARS_LOWER.toUpperCase();\n    var HEX_POOL = NUMBERS + \"abcdef\";\n\n    // Errors\n    function UnsupportedError(message) {\n        this.name = 'UnsupportedError';\n        this.message = message || 'This feature is not supported on this platform';\n    }\n\n    UnsupportedError.prototype = new Error();\n    UnsupportedError.prototype.constructor = UnsupportedError;\n\n    // Cached array helpers\n    var slice = Array.prototype.slice;\n\n    // Constructor\n    function Chance (seed) {\n        if (!(this instanceof Chance)) {\n            if (!seed) { seed = null; } // handle other non-truthy seeds, as described in issue #322\n            return seed === null ? new Chance() : new Chance(seed);\n        }\n\n        // if user has provided a function, use that as the generator\n        if (typeof seed === 'function') {\n            this.random = seed;\n            return this;\n        }\n\n        if (arguments.length) {\n            // set a starting value of zero so we can add to it\n            this.seed = 0;\n        }\n\n        // otherwise, leave this.seed blank so that MT will receive a blank\n\n        for (var i = 0; i < arguments.length; i++) {\n            var seedling = 0;\n            if (Object.prototype.toString.call(arguments[i]) === '[object String]') {\n                for (var j = 0; j < arguments[i].length; j++) {\n                    // create a numeric hash for each argument, add to seedling\n                    var hash = 0;\n                    for (var k = 0; k < arguments[i].length; k++) {\n                        hash = arguments[i].charCodeAt(k) + (hash << 6) + (hash << 16) - hash;\n                    }\n                    seedling += hash;\n                }\n            } else {\n                seedling = arguments[i];\n            }\n            this.seed += (arguments.length - i) * seedling;\n        }\n\n        // If no generator function was provided, use our MT\n        this.mt = this.mersenne_twister(this.seed);\n        this.bimd5 = this.blueimp_md5();\n        this.random = function () {\n            return this.mt.random(this.seed);\n        };\n\n        return this;\n    }\n\n    Chance.prototype.VERSION = \"1.1.12\";\n\n    // Random helper functions\n    function initOptions(options, defaults) {\n        options = options || {};\n\n        if (defaults) {\n            for (var i in defaults) {\n                if (typeof options[i] === 'undefined') {\n                    options[i] = defaults[i];\n                }\n            }\n        }\n\n        return options;\n    }\n\n    function range(size) {\n        return Array.apply(null, Array(size)).map(function (_, i) {return i;});\n    }\n\n    function testRange(test, errorMessage) {\n        if (test) {\n            throw new RangeError(errorMessage);\n        }\n    }\n\n    /**\n     * Encode the input string with Base64.\n     */\n    var base64 = function() {\n        throw new Error('No Base64 encoder available.');\n    };\n\n    // Select proper Base64 encoder.\n    (function determineBase64Encoder() {\n        if (typeof btoa === 'function') {\n            base64 = btoa;\n        } else if (typeof Buffer === 'function') {\n            base64 = function(input) {\n                return new Buffer(input).toString('base64');\n            };\n        }\n    })();\n\n    // -- Basics --\n\n    /**\n     *  Return a random bool, either true or false\n     *\n     *  @param {Object} [options={ likelihood: 50 }] alter the likelihood of\n     *    receiving a true or false value back.\n     *  @throws {RangeError} if the likelihood is out of bounds\n     *  @returns {Bool} either true or false\n     */\n    Chance.prototype.bool = function (options) {\n        // likelihood of success (true)\n        options = initOptions(options, {likelihood : 50});\n\n        // Note, we could get some minor perf optimizations by checking range\n        // prior to initializing defaults, but that makes code a bit messier\n        // and the check more complicated as we have to check existence of\n        // the object then existence of the key before checking constraints.\n        // Since the options initialization should be minor computationally,\n        // decision made for code cleanliness intentionally. This is mentioned\n        // here as it's the first occurrence, will not be mentioned again.\n        testRange(\n            options.likelihood < 0 || options.likelihood > 100,\n            \"Chance: Likelihood accepts values from 0 to 100.\"\n        );\n\n        return this.random() * 100 < options.likelihood;\n    };\n\n    Chance.prototype.falsy = function (options) {\n        // return a random falsy value\n        options = initOptions(options, {pool: [false, null, 0, NaN, '', undefined]})\n        var pool = options.pool,\n            index = this.integer({min: 0, max: pool.length - 1}),\n            value = pool[index];\n\n        return value;\n    }\n\n    Chance.prototype.animal = function (options){\n      //returns a random animal\n      options = initOptions(options);\n\n      if(typeof options.type !== 'undefined'){\n        //if user does not put in a valid animal type, user will get an error\n        testRange(\n           !this.get(\"animals\")[options.type.toLowerCase()],\n           \"Please pick from desert, ocean, grassland, forest, zoo, pets, farm.\"\n         );\n         //if user does put in valid animal type, will return a random animal of that type\n          return this.pick(this.get(\"animals\")[options.type.toLowerCase()]);\n      }\n       //if user does not put in any animal type, will return a random animal regardless\n      var animalTypeArray = [\"desert\",\"forest\",\"ocean\",\"zoo\",\"farm\",\"pet\",\"grassland\"];\n      return this.pick(this.get(\"animals\")[this.pick(animalTypeArray)]);\n    };\n\n    /**\n     *  Return a random character.\n     *\n     *  @param {Object} [options={}] can specify a character pool or alpha,\n     *    numeric, symbols and casing (lower or upper)\n     *  @returns {String} a single random character\n     */\n    Chance.prototype.character = function (options) {\n        options = initOptions(options);\n\n        var symbols = \"!@#$%^&*()[]\",\n            letters, pool;\n\n        if (options.casing === 'lower') {\n            letters = CHARS_LOWER;\n        } else if (options.casing === 'upper') {\n            letters = CHARS_UPPER;\n        } else {\n            letters = CHARS_LOWER + CHARS_UPPER;\n        }\n\n        if (options.pool) {\n            pool = options.pool;\n        } else {\n            pool = '';\n            if (options.alpha) {\n                pool += letters;\n            }\n            if (options.numeric) {\n                pool += NUMBERS;\n            }\n            if (options.symbols) {\n                pool += symbols;\n            }\n            if (!pool) {\n                pool = letters + NUMBERS + symbols;\n            }\n        }\n\n        return pool.charAt(this.natural({max: (pool.length - 1)}));\n    };\n\n    // Note, wanted to use \"float\" or \"double\" but those are both JS reserved words.\n\n    // Note, fixed means N OR LESS digits after the decimal. This because\n    // It could be 14.9000 but in JavaScript, when this is cast as a number,\n    // the trailing zeroes are dropped. Left to the consumer if trailing zeroes are\n    // needed\n    /**\n     *  Return a random floating point number\n     *\n     *  @param {Object} [options={}] can specify a fixed precision, min, max\n     *  @returns {Number} a single floating point number\n     *  @throws {RangeError} Can only specify fixed or precision, not both. Also\n     *    min cannot be greater than max\n     */\n    Chance.prototype.floating = function (options) {\n        options = initOptions(options, {fixed : 4});\n        testRange(\n            options.fixed && options.precision,\n            \"Chance: Cannot specify both fixed and precision.\"\n        );\n\n        var num;\n        var fixed = Math.pow(10, options.fixed);\n\n        var max = MAX_INT / fixed;\n        var min = -max;\n\n        testRange(\n            options.min && options.fixed && options.min < min,\n            \"Chance: Min specified is out of range with fixed. Min should be, at least, \" + min\n        );\n        testRange(\n            options.max && options.fixed && options.max > max,\n            \"Chance: Max specified is out of range with fixed. Max should be, at most, \" + max\n        );\n\n        options = initOptions(options, { min : min, max : max });\n\n        // Todo - Make this work!\n        // options.precision = (typeof options.precision !== \"undefined\") ? options.precision : false;\n\n        num = this.integer({min: options.min * fixed, max: options.max * fixed});\n        var num_fixed = (num / fixed).toFixed(options.fixed);\n\n        return parseFloat(num_fixed);\n    };\n\n    /**\n     *  Return a random integer\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.integer({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.integer = function (options) {\n        // 9007199254740992 (2^53) is the max integer number in JavaScript\n        // See: http://vq.io/132sa2j\n        options = initOptions(options, {min: MIN_INT, max: MAX_INT});\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return Math.floor(this.random() * (options.max - options.min + 1) + options.min);\n    };\n\n    /**\n     *  Return a random natural\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.natural({min: 1, max: 3});\n     *  would return either 1, 2, or 3.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max or a numerals count.\n     *  @returns {Number} a single random integer number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.natural = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT});\n        if (typeof options.numerals === 'number'){\n          testRange(options.numerals < 1, \"Chance: Numerals cannot be less than one.\");\n          options.min = Math.pow(10, options.numerals - 1);\n          options.max = Math.pow(10, options.numerals) - 1;\n        }\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\n        if (options.exclude) {\n            testRange(!Array.isArray(options.exclude), \"Chance: exclude must be an array.\")\n\n            for (var exclusionIndex in options.exclude) {\n                testRange(!Number.isInteger(options.exclude[exclusionIndex]), \"Chance: exclude must be numbers.\")\n            }\n\n            var random = options.min + this.natural({max: options.max - options.min - options.exclude.length})\n            var sortedExclusions = options.exclude.sort();\n            for (var sortedExclusionIndex in sortedExclusions) {\n                if (random < sortedExclusions[sortedExclusionIndex]) {\n                    break\n                }\n                random++\n            }\n            return random\n        }\n        return this.integer(options);\n    };\n\n    /**\n     *  Return a random prime number\n     *\n     *  NOTE the max and min are INCLUDED in the range.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max\n     *  @returns {Number} a single random prime number\n     *  @throws {RangeError} min cannot be greater than max nor negative\n     */\n    Chance.prototype.prime = function (options) {\n        options = initOptions(options, {min: 0, max: 10000});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var lastPrime = data.primes[data.primes.length - 1];\n        if (options.max > lastPrime) {\n            for (var i = lastPrime + 2; i <= options.max; ++i) {\n                if (this.is_prime(i)) {\n                    data.primes.push(i);\n                }\n            }\n        }\n        var targetPrimes = data.primes.filter(function (prime) {\n            return prime >= options.min && prime <= options.max;\n        });\n        return this.pick(targetPrimes);\n    };\n\n    /**\n     * Determine whether a given number is prime or not.\n     */\n    Chance.prototype.is_prime = function (n) {\n        if (n % 1 || n < 2) {\n            return false;\n        }\n        if (n % 2 === 0) {\n            return n === 2;\n        }\n        if (n % 3 === 0) {\n            return n === 3;\n        }\n        var m = Math.sqrt(n);\n        for (var i = 5; i <= m; i += 6) {\n            if (n % i === 0 || n % (i + 2) === 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     *  Return a random hex number as string\n     *\n     *  NOTE the max and min are INCLUDED in the range. So:\n     *  chance.hex({min: '9', max: 'B'});\n     *  would return either '9', 'A' or 'B'.\n     *\n     *  @param {Object} [options={}] can specify a min and/or max and/or casing\n     *  @returns {String} a single random string hex number\n     *  @throws {RangeError} min cannot be greater than max\n     */\n    Chance.prototype.hex = function (options) {\n        options = initOptions(options, {min: 0, max: MAX_INT, casing: 'lower'});\n        testRange(options.min < 0, \"Chance: Min cannot be less than zero.\");\n\t\tvar integer = this.natural({min: options.min, max: options.max});\n\t\tif (options.casing === 'upper') {\n\t\t\treturn integer.toString(16).toUpperCase();\n\t\t}\n\t\treturn integer.toString(16);\n    };\n\n    Chance.prototype.letter = function(options) {\n        options = initOptions(options, {casing: 'lower'});\n        var pool = \"abcdefghijklmnopqrstuvwxyz\";\n        var letter = this.character({pool: pool});\n        if (options.casing === 'upper') {\n            letter = letter.toUpperCase();\n        }\n        return letter;\n    }\n\n    /**\n     *  Return a random string\n     *\n     *  @param {Object} [options={}] can specify a length or min and max\n     *  @returns {String} a string of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.string = function (options) {\n        options = initOptions(options, { min: 5, max: 20 });\n\n        if (options.length !== 0 && !options.length) {\n            options.length = this.natural({ min: options.min, max: options.max })\n        }\n\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length,\n            text = this.n(this.character, length, options);\n\n        return text.join(\"\");\n    };\n\n    function CopyToken(c) {\n        this.c = c\n    }\n\n    CopyToken.prototype = {\n        substitute: function () {\n            return this.c\n        }\n    }\n\n    function EscapeToken(c) {\n        this.c = c\n    }\n\n    EscapeToken.prototype = {\n        substitute: function () {\n            if (!/[{}\\\\]/.test(this.c)) {\n                throw new Error('Invalid escape sequence: \"\\\\' + this.c + '\".')\n            }\n            return this.c\n        }\n    }\n\n    function ReplaceToken(c) {\n        this.c = c\n    }\n\n    ReplaceToken.prototype = {\n        replacers: {\n            '#': function (chance) { return chance.character({ pool: NUMBERS }) },\n            'A': function (chance) { return chance.character({ pool: CHARS_UPPER }) },\n            'a': function (chance) { return chance.character({ pool: CHARS_LOWER }) },\n        },\n\n        substitute: function (chance) {\n            var replacer = this.replacers[this.c]\n            if (!replacer) {\n                throw new Error('Invalid replacement character: \"' + this.c + '\".')\n            }\n            return replacer(chance)\n        }\n    }\n\n    function parseTemplate(template) {\n        var tokens = []\n        var mode = 'identity'\n        for (var i = 0; i<template.length; i++) {\n            var c = template[i]\n            switch (mode) {\n                case 'escape':\n                    tokens.push(new EscapeToken(c))\n                    mode = 'identity'\n                    break\n                case 'identity':\n                    if (c === '{') {\n                        mode = 'replace'\n                    } else if (c === '\\\\') {\n                        mode = 'escape'\n                    } else {\n                        tokens.push(new CopyToken(c))\n                    }\n                    break\n                case 'replace':\n                    if (c === '}') {\n                        mode = 'identity'\n                    } else {\n                        tokens.push(new ReplaceToken(c))\n                    }\n                    break\n            }\n        }\n        return tokens\n    }\n\n    /**\n     *  Return a random string matching the given template.\n     *\n     *  The template consists of any number of \"character replacement\" and\n     *  \"character literal\" sequences. A \"character replacement\" sequence\n     *  starts with a left brace, has any number of special replacement\n     *  characters, and ends with a right brace. A character literal can be any\n     *  character except a brace or a backslash. A literal brace or backslash\n     *  character can be included in the output by escaping with a backslash.\n     *\n     *  The following replacement characters can be used in a replacement\n     *  sequence:\n     *\n     *      \"#\": a random digit\n     *      \"a\": a random lower case letter\n     *      \"A\": a random upper case letter\n     *\n     *  Example: chance.template('{AA###}-{##}')\n     *\n     *  @param {String} template string.\n     *  @returns {String} a random string matching the template.\n     */\n    Chance.prototype.template = function (template) {\n        if (!template) {\n            throw new Error('Template string is required')\n        }\n        var self = this\n        return parseTemplate(template)\n            .map(function (token) { return token.substitute(self) })\n            .join('');\n    };\n\n\n    /**\n     *  Return a random buffer\n     *\n     *  @param {Object} [options={}] can specify a length\n     *  @returns {Buffer} a buffer of random length\n     *  @throws {RangeError} length cannot be less than zero\n     */\n    Chance.prototype.buffer = function (options) {\n        if (typeof Buffer === 'undefined') {\n            throw new UnsupportedError('Sorry, the buffer() function is not supported on your platform');\n        }\n        options = initOptions(options, { length: this.natural({min: 5, max: 20}) });\n        testRange(options.length < 0, \"Chance: Length cannot be less than zero.\");\n        var length = options.length;\n        var content = this.n(this.character, length, options);\n\n        return Buffer.from(content);\n    };\n\n    // -- End Basics --\n\n    // -- Helpers --\n\n    Chance.prototype.capitalize = function (word) {\n        return word.charAt(0).toUpperCase() + word.substr(1);\n    };\n\n    Chance.prototype.mixin = function (obj) {\n        for (var func_name in obj) {\n            this[func_name] = obj[func_name];\n        }\n        return this;\n    };\n\n    /**\n     *  Given a function that generates something random and a number of items to generate,\n     *    return an array of items where none repeat.\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} num number of terms to generate\n     *  @param {Object} options any options to pass on to the generator function\n     *  @returns {Array} an array of length `num` with every item generated by `fn` and unique\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.unique = function(fn, num, options) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        var comparator = function(arr, val) { return arr.indexOf(val) !== -1; };\n\n        if (options) {\n            comparator = options.comparator || comparator;\n        }\n\n        var arr = [], count = 0, result, MAX_DUPLICATES = num * 50, params = slice.call(arguments, 2);\n\n        while (arr.length < num) {\n            var clonedParams = JSON.parse(JSON.stringify(params));\n            result = fn.apply(this, clonedParams);\n            if (!comparator(arr, result)) {\n                arr.push(result);\n                // reset count when unique found\n                count = 0;\n            }\n\n            if (++count > MAX_DUPLICATES) {\n                throw new RangeError(\"Chance: num is likely too large for sample set\");\n            }\n        }\n        return arr;\n    };\n\n    /**\n     *  Gives an array of n random terms\n     *\n     *  @param {Function} fn the function that generates something random\n     *  @param {Number} n number of terms to generate\n     *  @returns {Array} an array of length `n` with items generated by `fn`\n     *\n     *  There can be more parameters after these. All additional parameters are provided to the given function\n     */\n    Chance.prototype.n = function(fn, n) {\n        testRange(\n            typeof fn !== \"function\",\n            \"Chance: The first argument must be a function.\"\n        );\n\n        if (typeof n === 'undefined') {\n            n = 1;\n        }\n        var i = n, arr = [], params = slice.call(arguments, 2);\n\n        // Providing a negative count should result in a noop.\n        i = Math.max( 0, i );\n\n        for (null; i--; null) {\n            arr.push(fn.apply(this, params));\n        }\n\n        return arr;\n    };\n\n    // H/T to SO for this one: http://vq.io/OtUrZ5\n    Chance.prototype.pad = function (number, width, pad) {\n        // Default pad to 0 if none provided\n        pad = pad || '0';\n        // Convert number to a string\n        number = number + '';\n        return number.length >= width ? number : new Array(width - number.length + 1).join(pad) + number;\n    };\n\n    // DEPRECATED on 2015-10-01\n    Chance.prototype.pick = function (arr, count) {\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pick() from an empty array\");\n        }\n        if (!count || count === 1) {\n            return arr[this.natural({max: arr.length - 1})];\n        } else {\n            return this.shuffle(arr).slice(0, count);\n        }\n    };\n\n    // Given an array, returns a single random element\n    Chance.prototype.pickone = function (arr) {\n        if (arr.length === 0) {\n          throw new RangeError(\"Chance: Cannot pickone() from an empty array\");\n        }\n        return arr[this.natural({max: arr.length - 1})];\n    };\n\n    // Given an array, returns a random set with 'count' elements\n    Chance.prototype.pickset = function (arr, count) {\n        if (count === 0) {\n            return [];\n        }\n        if (arr.length === 0) {\n            throw new RangeError(\"Chance: Cannot pickset() from an empty array\");\n        }\n        if (count < 0) {\n            throw new RangeError(\"Chance: Count must be a positive number\");\n        }\n        if (!count || count === 1) {\n            return [ this.pickone(arr) ];\n        } else {\n            var array = arr.slice(0);\n            var end = array.length;\n\n            return this.n(function () {\n                var index = this.natural({max: --end});\n                var value = array[index];\n                array[index] = array[end];\n                return value;\n            }, Math.min(end, count));\n        }\n    };\n\n    Chance.prototype.shuffle = function (arr) {\n        var new_array = [],\n            j = 0,\n            length = Number(arr.length),\n            source_indexes = range(length),\n            last_source_index = length - 1,\n            selected_source_index;\n\n        for (var i = 0; i < length; i++) {\n            // Pick a random index from the array\n            selected_source_index = this.natural({max: last_source_index});\n            j = source_indexes[selected_source_index];\n\n            // Add it to the new array\n            new_array[i] = arr[j];\n\n            // Mark the source index as used\n            source_indexes[selected_source_index] = source_indexes[last_source_index];\n            last_source_index -= 1;\n        }\n\n        return new_array;\n    };\n\n    // Returns a single item from an array with relative weighting of odds\n    Chance.prototype.weighted = function (arr, weights, trim) {\n        if (arr.length !== weights.length) {\n            throw new RangeError(\"Chance: Length of array and weights must match\");\n        }\n\n        // scan weights array and sum valid entries\n        var sum = 0;\n        var val;\n        for (var weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            if (isNaN(val)) {\n                throw new RangeError(\"Chance: All weights must be numbers\");\n            }\n\n            if (val > 0) {\n                sum += val;\n            }\n        }\n\n        if (sum === 0) {\n            throw new RangeError(\"Chance: No valid entries in array weights\");\n        }\n\n        // select a value within range\n        var selected = this.random() * sum;\n\n        // find array entry corresponding to selected value\n        var total = 0;\n        var lastGoodIdx = -1;\n        var chosenIdx;\n        for (weightIndex = 0; weightIndex < weights.length; ++weightIndex) {\n            val = weights[weightIndex];\n            total += val;\n            if (val > 0) {\n                if (selected <= total) {\n                    chosenIdx = weightIndex;\n                    break;\n                }\n                lastGoodIdx = weightIndex;\n            }\n\n            // handle any possible rounding error comparison to ensure something is picked\n            if (weightIndex === (weights.length - 1)) {\n                chosenIdx = lastGoodIdx;\n            }\n        }\n\n        var chosen = arr[chosenIdx];\n        trim = (typeof trim === 'undefined') ? false : trim;\n        if (trim) {\n            arr.splice(chosenIdx, 1);\n            weights.splice(chosenIdx, 1);\n        }\n\n        return chosen;\n    };\n\n    // -- End Helpers --\n\n    // -- Text --\n\n    Chance.prototype.paragraph = function (options) {\n        options = initOptions(options);\n\n        var sentences = options.sentences || this.natural({min: 3, max: 7}),\n            sentence_array = this.n(this.sentence, sentences),\n            separator = options.linebreak === true ? '\\n' : ' ';\n\n        return sentence_array.join(separator);\n    };\n\n    // Could get smarter about this than generating random words and\n    // chaining them together. Such as: http://vq.io/1a5ceOh\n    Chance.prototype.sentence = function (options) {\n        options = initOptions(options);\n\n        var words = options.words || this.natural({min: 12, max: 18}),\n            punctuation = options.punctuation,\n            text, word_array = this.n(this.word, words);\n\n        text = word_array.join(' ');\n\n        // Capitalize first letter of sentence\n        text = this.capitalize(text);\n\n        // Make sure punctuation has a usable value\n        if (punctuation !== false && !/^[.?;!:]$/.test(punctuation)) {\n            punctuation = '.';\n        }\n\n        // Add punctuation mark\n        if (punctuation) {\n            text += punctuation;\n        }\n\n        return text;\n    };\n\n    Chance.prototype.syllable = function (options) {\n        options = initOptions(options);\n\n        var length = options.length || this.natural({min: 2, max: 3}),\n            consonants = 'bcdfghjklmnprstvwz', // consonants except hard to speak ones\n            vowels = 'aeiou', // vowels\n            all = consonants + vowels, // all\n            text = '',\n            chr;\n\n        // I'm sure there's a more elegant way to do this, but this works\n        // decently well.\n        for (var i = 0; i < length; i++) {\n            if (i === 0) {\n                // First character can be anything\n                chr = this.character({pool: all});\n            } else if (consonants.indexOf(chr) === -1) {\n                // Last character was a vowel, now we want a consonant\n                chr = this.character({pool: consonants});\n            } else {\n                // Last character was a consonant, now we want a vowel\n                chr = this.character({pool: vowels});\n            }\n\n            text += chr;\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    Chance.prototype.word = function (options) {\n        options = initOptions(options);\n\n        testRange(\n            options.syllables && options.length,\n            \"Chance: Cannot specify both syllables AND length.\"\n        );\n\n        var syllables = options.syllables || this.natural({min: 1, max: 3}),\n            text = '';\n\n        if (options.length) {\n            // Either bound word by length\n            do {\n                text += this.syllable();\n            } while (text.length < options.length);\n            text = text.substring(0, options.length);\n        } else {\n            // Or by number of syllables\n            for (var i = 0; i < syllables; i++) {\n                text += this.syllable();\n            }\n        }\n\n        if (options.capitalize) {\n            text = this.capitalize(text);\n        }\n\n        return text;\n    };\n\n    Chance.prototype.emoji = function (options) {\n        options = initOptions(options, { category: \"all\", length: 1 });\n\n        testRange(\n            options.length < 1 || BigInt(options.length) > BigInt(MAX_INT),\n            \"Chance: length must be between 1 and \" + String(MAX_INT)\n        );\n\n        var emojis = this.get(\"emojis\");\n\n        if (options.category === \"all\") {\n            options.category = this.pickone(Object.keys(emojis));\n        }\n\n        var emojisForCategory = emojis[options.category];\n\n        testRange(\n            emojisForCategory === undefined,\n            \"Chance: Unrecognised emoji category: [\" + options.category + \"].\"\n        );\n\n        return this.pickset(emojisForCategory, options.length)\n            .map(function (codePoint) {\n                return String.fromCodePoint(codePoint);\n            }).join(\"\");\n    };\n\n    // -- End Text --\n\n    // -- Person --\n\n    Chance.prototype.age = function (options) {\n        options = initOptions(options);\n        var ageRange;\n\n        switch (options.type) {\n            case 'child':\n                ageRange = {min: 0, max: 12};\n                break;\n            case 'teen':\n                ageRange = {min: 13, max: 19};\n                break;\n            case 'adult':\n                ageRange = {min: 18, max: 65};\n                break;\n            case 'senior':\n                ageRange = {min: 65, max: 100};\n                break;\n            case 'all':\n                ageRange = {min: 0, max: 100};\n                break;\n            default:\n                ageRange = {min: 18, max: 65};\n                break;\n        }\n\n        return this.natural(ageRange);\n    };\n\n    Chance.prototype.birthday = function (options) {\n        var age = this.age(options);\n        var now = new Date()\n        var currentYear = now.getFullYear();\n\n        if (options && options.type) {\n            var min = new Date();\n            var max = new Date();\n            min.setFullYear(currentYear - age - 1);\n            max.setFullYear(currentYear - age);\n\n            options = initOptions(options, {\n                min: min,\n                max: max\n            });\n        } else if (options && ((options.minAge !== undefined) || (options.maxAge !== undefined))) {\n            testRange(options.minAge < 0, \"Chance: MinAge cannot be less than zero.\");\n            testRange(options.minAge > options.maxAge, \"Chance: MinAge cannot be greater than MaxAge.\");\n\n            var minAge = options.minAge !== undefined ? options.minAge : 0;\n            var maxAge = options.maxAge !== undefined ? options.maxAge : 100;\n\n            var minDate = new Date(currentYear - maxAge - 1, now.getMonth(), now.getDate());\n            var maxDate = new Date(currentYear - minAge, now.getMonth(), now.getDate());\n\n            minDate.setDate(minDate.getDate() +1);\n\n            maxDate.setDate(maxDate.getDate() +1);\n            maxDate.setMilliseconds(maxDate.getMilliseconds() -1);\n\n            options = initOptions(options, {\n                min: minDate,\n                max: maxDate\n          });\n        } else {\n            options = initOptions(options, {\n                year: currentYear - age\n            });\n        }\n\n        return this.date(options);\n    };\n\n    // CPF; ID to identify taxpayers in Brazil\n    Chance.prototype.cpf = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 9, { max: 9 });\n        var d1 = n[8]*2+n[7]*3+n[6]*4+n[5]*5+n[4]*6+n[3]*7+n[2]*8+n[1]*9+n[0]*10;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[8]*3+n[7]*4+n[6]*5+n[5]*6+n[4]*7+n[3]*8+n[2]*9+n[1]*10+n[0]*11;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10) {\n            d2 = 0;\n        }\n        var cpf = ''+n[0]+n[1]+n[2]+'.'+n[3]+n[4]+n[5]+'.'+n[6]+n[7]+n[8]+'-'+d1+d2;\n        return options.formatted ? cpf : cpf.replace(/\\D/g,'');\n    };\n\n    // CNPJ: ID to identify companies in Brazil\n    Chance.prototype.cnpj = function (options) {\n        options = initOptions(options, {\n            formatted: true\n        });\n\n        var n = this.n(this.natural, 12, { max: 12 });\n        var d1 = n[11]*2+n[10]*3+n[9]*4+n[8]*5+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1<2) {\n            d1 = 0;\n        }\n        var d2 = d1*2+n[11]*3+n[10]*4+n[9]*5+n[8]*6+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2<2) {\n            d2 = 0;\n        }\n        var cnpj = ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/'+n[8]+n[9]+n[10]+n[11]+'-'+d1+d2;\n        return options.formatted ? cnpj : cnpj.replace(/\\D/g,'');\n    };\n\n    Chance.prototype.first = function (options) {\n        options = initOptions(options, {gender: this.gender(), nationality: 'en'});\n        return this.pick(this.get(\"firstNames\")[options.gender.toLowerCase()][options.nationality.toLowerCase()]);\n    };\n\n    Chance.prototype.profession = function (options) {\n        options = initOptions(options);\n        if(options.rank){\n            return this.pick(['Apprentice ', 'Junior ', 'Senior ', 'Lead ']) + this.pick(this.get(\"profession\"));\n        } else{\n            return this.pick(this.get(\"profession\"));\n        }\n    };\n\n    Chance.prototype.company = function (){\n        return this.pick(this.get(\"company\"));\n    };\n\n    Chance.prototype.gender = function (options) {\n        options = initOptions(options, {extraGenders: []});\n        return this.pick(['Male', 'Female'].concat(options.extraGenders));\n    };\n\n    Chance.prototype.last = function (options) {\n      options = initOptions(options, {nationality: '*'});\n      if (options.nationality === \"*\") {\n        var allLastNames = []\n        var lastNames = this.get(\"lastNames\")\n        Object.keys(lastNames).forEach(function(key){\n          allLastNames = allLastNames.concat(lastNames[key])\n        })\n        return this.pick(allLastNames)\n      }\n      else {\n        return this.pick(this.get(\"lastNames\")[options.nationality.toLowerCase()]);\n      }\n\n    };\n\n    Chance.prototype.israelId=function(){\n        var x=this.string({pool: '0123456789',length:8});\n        var y=0;\n        for (var i=0;i<x.length;i++){\n            var thisDigit=  x[i] *  (i/2===parseInt(i/2) ? 1 : 2);\n            thisDigit=this.pad(thisDigit,2).toString();\n            thisDigit=parseInt(thisDigit[0]) + parseInt(thisDigit[1]);\n            y=y+thisDigit;\n        }\n        x=x+(10-parseInt(y.toString().slice(-1))).toString().slice(-1);\n        return x;\n    };\n\n    Chance.prototype.mrz = function (options) {\n        var checkDigit = function (input) {\n            var alpha = \"<ABCDEFGHIJKLMNOPQRSTUVWXYXZ\".split(''),\n                multipliers = [ 7, 3, 1 ],\n                runningTotal = 0;\n\n            if (typeof input !== 'string') {\n                input = input.toString();\n            }\n\n            input.split('').forEach(function(character, idx) {\n                var pos = alpha.indexOf(character);\n\n                if(pos !== -1) {\n                    character = pos === 0 ? 0 : pos + 9;\n                } else {\n                    character = parseInt(character, 10);\n                }\n                character *= multipliers[idx % multipliers.length];\n                runningTotal += character;\n            });\n            return runningTotal % 10;\n        };\n        var generate = function (opts) {\n            var pad = function (length) {\n                return new Array(length + 1).join('<');\n            };\n            var number = [ 'P<',\n                           opts.issuer,\n                           opts.last.toUpperCase(),\n                           '<<',\n                           opts.first.toUpperCase(),\n                           pad(39 - (opts.last.length + opts.first.length + 2)),\n                           opts.passportNumber,\n                           checkDigit(opts.passportNumber),\n                           opts.nationality,\n                           opts.dob,\n                           checkDigit(opts.dob),\n                           opts.gender,\n                           opts.expiry,\n                           checkDigit(opts.expiry),\n                           pad(14),\n                           checkDigit(pad(14)) ].join('');\n\n            return number +\n                (checkDigit(number.substr(44, 10) +\n                            number.substr(57, 7) +\n                            number.substr(65, 7)));\n        };\n\n        var that = this;\n\n        options = initOptions(options, {\n            first: this.first(),\n            last: this.last(),\n            passportNumber: this.integer({min: 100000000, max: 999999999}),\n            dob: (function () {\n                var date = that.birthday({type: 'adult'});\n                return [date.getFullYear().toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            expiry: (function () {\n                var date = new Date();\n                return [(date.getFullYear() + 5).toString().substr(2),\n                        that.pad(date.getMonth() + 1, 2),\n                        that.pad(date.getDate(), 2)].join('');\n            }()),\n            gender: this.gender() === 'Female' ? 'F': 'M',\n            issuer: 'GBR',\n            nationality: 'GBR'\n        });\n        return generate (options);\n    };\n\n    Chance.prototype.name = function (options) {\n        options = initOptions(options);\n\n        var first = this.first(options),\n            last = this.last(options),\n            name;\n\n        if (options.middle) {\n            name = first + ' ' + this.first(options) + ' ' + last;\n        } else if (options.middle_initial) {\n            name = first + ' ' + this.character({alpha: true, casing: 'upper'}) + '. ' + last;\n        } else {\n            name = first + ' ' + last;\n        }\n\n        if (options.prefix) {\n            name = this.prefix(options) + ' ' + name;\n        }\n\n        if (options.suffix) {\n            name = name + ' ' + this.suffix(options);\n        }\n\n        return name;\n    };\n\n    // Return the list of available name prefixes based on supplied gender.\n    // @todo introduce internationalization\n    Chance.prototype.name_prefixes = function (gender) {\n        gender = gender || \"all\";\n        gender = gender.toLowerCase();\n\n        var prefixes = [\n            { name: 'Doctor', abbreviation: 'Dr.' }\n        ];\n\n        if (gender === \"male\" || gender === \"all\") {\n            prefixes.push({ name: 'Mister', abbreviation: 'Mr.' });\n        }\n\n        if (gender === \"female\" || gender === \"all\") {\n            prefixes.push({ name: 'Miss', abbreviation: 'Miss' });\n            prefixes.push({ name: 'Misses', abbreviation: 'Mrs.' });\n        }\n\n        return prefixes;\n    };\n\n    // Alias for name_prefix\n    Chance.prototype.prefix = function (options) {\n        return this.name_prefix(options);\n    };\n\n    Chance.prototype.name_prefix = function (options) {\n        options = initOptions(options, { gender: \"all\" });\n        return options.full ?\n            this.pick(this.name_prefixes(options.gender)).name :\n            this.pick(this.name_prefixes(options.gender)).abbreviation;\n    };\n    //Hungarian ID number\n    Chance.prototype.HIDN= function(){\n     //Hungarian ID nuber structure: XXXXXXYY (X=number,Y=Capital Latin letter)\n      var idn_pool=\"0123456789\";\n      var idn_chrs=\"ABCDEFGHIJKLMNOPQRSTUVWXYXZ\";\n      var idn=\"\";\n        idn+=this.string({pool:idn_pool,length:6});\n        idn+=this.string({pool:idn_chrs,length:2});\n        return idn;\n    };\n\n\n    Chance.prototype.ssn = function (options) {\n        options = initOptions(options, {ssnFour: false, dashes: true});\n        var ssn_pool = \"1234567890\",\n            ssn,\n            dash = options.dashes ? '-' : '';\n\n        if(!options.ssnFour) {\n            ssn = this.string({pool: ssn_pool, length: 3}) + dash +\n            this.string({pool: ssn_pool, length: 2}) + dash +\n            this.string({pool: ssn_pool, length: 4});\n        } else {\n            ssn = this.string({pool: ssn_pool, length: 4});\n        }\n        return ssn;\n    };\n\n    // Aadhar is similar to ssn, used in India to uniquely identify a person\n    Chance.prototype.aadhar = function (options) {\n        options = initOptions(options, {onlyLastFour: false, separatedByWhiteSpace: true});\n        var aadhar_pool = \"1234567890\",\n            aadhar,\n            whiteSpace = options.separatedByWhiteSpace ? ' ' : '';\n\n        if(!options.onlyLastFour) {\n            aadhar = this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\n            this.string({pool: aadhar_pool, length: 4}) + whiteSpace +\n            this.string({pool: aadhar_pool, length: 4});\n        } else {\n            aadhar = this.string({pool: aadhar_pool, length: 4});\n        }\n        return aadhar;\n    };\n\n    // Return the list of available name suffixes\n    // @todo introduce internationalization\n    Chance.prototype.name_suffixes = function () {\n        var suffixes = [\n            { name: 'Doctor of Osteopathic Medicine', abbreviation: 'D.O.' },\n            { name: 'Doctor of Philosophy', abbreviation: 'Ph.D.' },\n            { name: 'Esquire', abbreviation: 'Esq.' },\n            { name: 'Junior', abbreviation: 'Jr.' },\n            { name: 'Juris Doctor', abbreviation: 'J.D.' },\n            { name: 'Master of Arts', abbreviation: 'M.A.' },\n            { name: 'Master of Business Administration', abbreviation: 'M.B.A.' },\n            { name: 'Master of Science', abbreviation: 'M.S.' },\n            { name: 'Medical Doctor', abbreviation: 'M.D.' },\n            { name: 'Senior', abbreviation: 'Sr.' },\n            { name: 'The Third', abbreviation: 'III' },\n            { name: 'The Fourth', abbreviation: 'IV' },\n            { name: 'Bachelor of Engineering', abbreviation: 'B.E' },\n            { name: 'Bachelor of Technology', abbreviation: 'B.TECH' }\n        ];\n        return suffixes;\n    };\n\n    // Alias for name_suffix\n    Chance.prototype.suffix = function (options) {\n        return this.name_suffix(options);\n    };\n\n    Chance.prototype.name_suffix = function (options) {\n        options = initOptions(options);\n        return options.full ?\n            this.pick(this.name_suffixes()).name :\n            this.pick(this.name_suffixes()).abbreviation;\n    };\n\n    Chance.prototype.nationalities = function () {\n        return this.get(\"nationalities\");\n    };\n\n    // Generate random nationality based on json list\n    Chance.prototype.nationality = function () {\n        var nationality = this.pick(this.nationalities());\n        return nationality.name;\n    };\n\n     // Generate random zodiac sign\n     Chance.prototype.zodiac = function () {\n        const zodiacSymbols = [\"Aries\",\"Taurus\",\"Gemini\",\"Cancer\",\"Leo\",\"Virgo\",\"Libra\",\"Scorpio\",\"Sagittarius\",\"Capricorn\",\"Aquarius\",\"Pisces\"];\n        return this.pickone(zodiacSymbols);\n    };\n\n\n    // -- End Person --\n\n    // -- Mobile --\n    // Android GCM Registration ID\n    Chance.prototype.android_id = function () {\n        return \"APA91\" + this.string({ pool: \"0123456789abcefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_\", length: 178 });\n    };\n\n    // Apple Push Token\n    Chance.prototype.apple_token = function () {\n        return this.string({ pool: \"abcdef1234567890\", length: 64 });\n    };\n\n    // Windows Phone 8 ANID2\n    Chance.prototype.wp8_anid2 = function () {\n        return base64( this.hash( { length : 32 } ) );\n    };\n\n    // Windows Phone 7 ANID\n    Chance.prototype.wp7_anid = function () {\n        return 'A=' + this.guid().replace(/-/g, '').toUpperCase() + '&E=' + this.hash({ length:3 }) + '&W=' + this.integer({ min:0, max:9 });\n    };\n\n    // BlackBerry Device PIN\n    Chance.prototype.bb_pin = function () {\n        return this.hash({ length: 8 });\n    };\n\n    // -- End Mobile --\n\n    // -- Web --\n    Chance.prototype.avatar = function (options) {\n        var url = null;\n        var URL_BASE = '//www.gravatar.com/avatar/';\n        var PROTOCOLS = {\n            http: 'http',\n            https: 'https'\n        };\n        var FILE_TYPES = {\n            bmp: 'bmp',\n            gif: 'gif',\n            jpg: 'jpg',\n            png: 'png'\n        };\n        var FALLBACKS = {\n            '404': '404', // Return 404 if not found\n            mm: 'mm', // Mystery man\n            identicon: 'identicon', // Geometric pattern based on hash\n            monsterid: 'monsterid', // A generated monster icon\n            wavatar: 'wavatar', // A generated face\n            retro: 'retro', // 8-bit icon\n            blank: 'blank' // A transparent png\n        };\n        var RATINGS = {\n            g: 'g',\n            pg: 'pg',\n            r: 'r',\n            x: 'x'\n        };\n        var opts = {\n            protocol: null,\n            email: null,\n            fileExtension: null,\n            size: null,\n            fallback: null,\n            rating: null\n        };\n\n        if (!options) {\n            // Set to a random email\n            opts.email = this.email();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.email = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if (options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if (!opts.email) {\n            // Set to a random email\n            opts.email = this.email();\n        }\n\n        // Safe checking for params\n        opts.protocol = PROTOCOLS[opts.protocol] ? opts.protocol + ':' : '';\n        opts.size = parseInt(opts.size, 0) ? opts.size : '';\n        opts.rating = RATINGS[opts.rating] ? opts.rating : '';\n        opts.fallback = FALLBACKS[opts.fallback] ? opts.fallback : '';\n        opts.fileExtension = FILE_TYPES[opts.fileExtension] ? opts.fileExtension : '';\n\n        url =\n            opts.protocol +\n            URL_BASE +\n            this.bimd5.md5(opts.email) +\n            (opts.fileExtension ? '.' + opts.fileExtension : '') +\n            (opts.size || opts.rating || opts.fallback ? '?' : '') +\n            (opts.size ? '&s=' + opts.size.toString() : '') +\n            (opts.rating ? '&r=' + opts.rating : '') +\n            (opts.fallback ? '&d=' + opts.fallback : '')\n            ;\n\n        return url;\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate random color value base on color type:\n     * -> hex\n     * -> rgb\n     * -> rgba\n     * -> 0x\n     * -> named color\n     *\n     * #Examples:\n     * ===============================================\n     * * Geerate random hex color\n     * chance.color() => '#79c157' / 'rgb(110,52,164)' / '0x67ae0b' / '#e2e2e2' / '#29CFA7'\n     *\n     * * Generate Hex based color value\n     * chance.color({format: 'hex'})    => '#d67118'\n     *\n     * * Generate simple rgb value\n     * chance.color({format: 'rgb'})    => 'rgb(110,52,164)'\n     *\n     * * Generate Ox based color value\n     * chance.color({format: '0x'})     => '0x67ae0b'\n     *\n     * * Generate graiscale based value\n     * chance.color({grayscale: true})  => '#e2e2e2'\n     *\n     * * Return valide color name\n     * chance.color({format: 'name'})   => 'red'\n     *\n     * * Make color uppercase\n     * chance.color({casing: 'upper'})  => '#29CFA7'\n     *\n     * * Min Max values for RGBA\n     * var light_red = chance.color({format: 'hex', min_red: 200, max_red: 255, max_green: 0, max_blue: 0, min_alpha: .2, max_alpha: .3});\n     *\n     * @param  [object] options\n     * @return [string] color value\n     */\n    Chance.prototype.color = function (options) {\n        function gray(value, delimiter) {\n            return [value, value, value].join(delimiter || '');\n        }\n\n        function rgb(hasAlpha) {\n            var rgbValue     = (hasAlpha)    ? 'rgba' : 'rgb';\n            var alphaChannel = (hasAlpha)    ? (',' + this.floating({min:min_alpha, max:max_alpha})) : \"\";\n            var colorValue   = (isGrayscale) ? (gray(this.natural({min: min_rgb, max: max_rgb}), ',')) : (this.natural({min: min_green, max: max_green}) + ',' + this.natural({min: min_blue, max: max_blue}) + ',' + this.natural({max: 255}));\n            return rgbValue + '(' + colorValue + alphaChannel + ')';\n        }\n\n        function hex(start, end, withHash) {\n            var symbol = (withHash) ? \"#\" : \"\";\n            var hexstring = \"\";\n\n            if (isGrayscale) {\n                hexstring = gray(this.pad(this.hex({min: min_rgb, max: max_rgb}), 2));\n                if (options.format === \"shorthex\") {\n                    hexstring = gray(this.hex({min: 0, max: 15}));\n                }\n            }\n            else {\n                if (options.format === \"shorthex\") {\n                    hexstring = this.pad(this.hex({min: Math.floor(min_red / 16), max: Math.floor(max_red / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_green / 16), max: Math.floor(max_green / 16)}), 1) + this.pad(this.hex({min: Math.floor(min_blue / 16), max: Math.floor(max_blue / 16)}), 1);\n                }\n                else if (min_red !== undefined || max_red !== undefined || min_green !== undefined || max_green !== undefined || min_blue !== undefined || max_blue !== undefined) {\n                    hexstring = this.pad(this.hex({min: min_red, max: max_red}), 2) + this.pad(this.hex({min: min_green, max: max_green}), 2) + this.pad(this.hex({min: min_blue, max: max_blue}), 2);\n                }\n                else {\n                    hexstring = this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2) + this.pad(this.hex({min: min_rgb, max: max_rgb}), 2);\n                }\n            }\n\n            return symbol + hexstring;\n        }\n\n        options = initOptions(options, {\n            format: this.pick(['hex', 'shorthex', 'rgb', 'rgba', '0x', 'name']),\n            grayscale: false,\n            casing: 'lower',\n            min: 0,\n            max: 255,\n            min_red: undefined,\n            max_red: undefined,\n            min_green: undefined,\n            max_green: undefined,\n            min_blue: undefined,\n            max_blue: undefined,\n            min_alpha: 0,\n            max_alpha: 1\n        });\n\n        var isGrayscale = options.grayscale;\n        var min_rgb = options.min;\n        var max_rgb = options.max;\n        var min_red = options.min_red;\n        var max_red = options.max_red;\n        var min_green = options.min_green;\n        var max_green = options.max_green;\n        var min_blue = options.min_blue;\n        var max_blue = options.max_blue;\n        var min_alpha = options.min_alpha;\n        var max_alpha = options.max_alpha;\n        if (options.min_red === undefined) { min_red = min_rgb; }\n        if (options.max_red === undefined) { max_red = max_rgb; }\n        if (options.min_green === undefined) { min_green = min_rgb; }\n        if (options.max_green === undefined) { max_green = max_rgb; }\n        if (options.min_blue === undefined) { min_blue = min_rgb; }\n        if (options.max_blue === undefined) { max_blue = max_rgb; }\n        if (options.min_alpha === undefined) { min_alpha = 0; }\n        if (options.max_alpha === undefined) { max_alpha = 1; }\n        if (isGrayscale && min_rgb === 0 && max_rgb === 255 && min_red !== undefined && max_red !== undefined) {\n            min_rgb = ((min_red + min_green + min_blue) / 3);\n            max_rgb = ((max_red + max_green + max_blue) / 3);\n        }\n        var colorValue;\n\n        if (options.format === 'hex') {\n            colorValue = hex.call(this, 2, 6, true);\n        }\n        else if (options.format === 'shorthex') {\n            colorValue = hex.call(this, 1, 3, true);\n        }\n        else if (options.format === 'rgb') {\n            colorValue = rgb.call(this, false);\n        }\n        else if (options.format === 'rgba') {\n            colorValue = rgb.call(this, true);\n        }\n        else if (options.format === '0x') {\n            colorValue = '0x' + hex.call(this, 2, 6);\n        }\n        else if(options.format === 'name') {\n            return this.pick(this.get(\"colorNames\"));\n        }\n        else {\n            throw new RangeError('Invalid format provided. Please provide one of \"hex\", \"shorthex\", \"rgb\", \"rgba\", \"0x\" or \"name\".');\n        }\n\n        if (options.casing === 'upper' ) {\n            colorValue = colorValue.toUpperCase();\n        }\n\n        return colorValue;\n    };\n\n    Chance.prototype.domain = function (options) {\n        options = initOptions(options);\n        return this.word() + '.' + (options.tld || this.tld());\n    };\n\n    Chance.prototype.email = function (options) {\n        options = initOptions(options);\n        return this.word({length: options.length}) + '@' + (options.domain || this.domain());\n    };\n\n    /**\n     * #Description:\n     * ===============================================\n     * Generate a random Facebook id, aka fbid.\n     *\n     * NOTE: At the moment (Sep 2017), Facebook ids are\n     * \"numeric strings\" of length 16.\n     * However, Facebook Graph API documentation states that\n     * \"it is extremely likely to change over time\".\n     * @see https://developers.facebook.com/docs/graph-api/overview/\n     *\n     * #Examples:\n     * ===============================================\n     * chance.fbid() => '1000035231661304'\n     *\n     * @return [string] facebook id\n     */\n    Chance.prototype.fbid = function () {\n        return '10000' + this.string({pool: \"1234567890\", length: 11});\n    };\n\n    Chance.prototype.google_analytics = function () {\n        var account = this.pad(this.natural({max: 999999}), 6);\n        var property = this.pad(this.natural({max: 99}), 2);\n\n        return 'UA-' + account + '-' + property;\n    };\n\n    Chance.prototype.hashtag = function () {\n        return '#' + this.word();\n    };\n\n    Chance.prototype.ip = function () {\n        // Todo: This could return some reserved IPs. See http://vq.io/137dgYy\n        // this should probably be updated to account for that rare as it may be\n        return this.natural({min: 1, max: 254}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({max: 255}) + '.' +\n               this.natural({min: 1, max: 254});\n    };\n\n    Chance.prototype.ipv6 = function () {\n        var ip_addr = this.n(this.hash, 8, {length: 4});\n\n        return ip_addr.join(\":\");\n    };\n\n    Chance.prototype.klout = function () {\n        return this.natural({min: 1, max: 99});\n    };\n\n    Chance.prototype.mac = function (options) {\n        // Todo: This could also be extended to EUI-64 based MACs\n        // (https://www.iana.org/assignments/ethernet-numbers/ethernet-numbers.xhtml#ethernet-numbers-4)\n        // Todo: This can return some reserved MACs (similar to IP function)\n        // this should probably be updated to account for that rare as it may be\n        options = initOptions(options, { delimiter: ':' });\n        return this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2) + options.delimiter +\n               this.pad(this.natural({max: 255}).toString(16),2);\n    };\n\n    Chance.prototype.semver = function (options) {\n        options = initOptions(options, { include_prerelease: true });\n\n        var range = this.pickone([\"^\", \"~\", \"<\", \">\", \"<=\", \">=\", \"=\"]);\n        if (options.range) {\n            range = options.range;\n        }\n\n        var prerelease = \"\";\n        if (options.include_prerelease) {\n            prerelease = this.weighted([\"\", \"-dev\", \"-beta\", \"-alpha\"], [50, 10, 5, 1]);\n        }\n        return range + this.rpg('3d10').join('.') + prerelease;\n    };\n\n    Chance.prototype.tlds = function () {\n        return ['com', 'org', 'edu', 'gov', 'co.uk', 'net', 'io', 'ac', 'ad', 'ae', 'af', 'ag', 'ai', 'al', 'am', 'ao', 'aq', 'ar', 'as', 'at', 'au', 'aw', 'ax', 'az', 'ba', 'bb', 'bd', 'be', 'bf', 'bg', 'bh', 'bi', 'bj', 'bm', 'bn', 'bo', 'br', 'bs', 'bt', 'bv', 'bw', 'by', 'bz', 'ca', 'cc', 'cd', 'cf', 'cg', 'ch', 'ci', 'ck', 'cl', 'cm', 'cn', 'co', 'cr', 'cu', 'cv', 'cw', 'cx', 'cy', 'cz', 'de', 'dj', 'dk', 'dm', 'do', 'dz', 'ec', 'ee', 'eg', 'eh', 'er', 'es', 'et', 'eu', 'fi', 'fj', 'fk', 'fm', 'fo', 'fr', 'ga', 'gb', 'gd', 'ge', 'gf', 'gg', 'gh', 'gi', 'gl', 'gm', 'gn', 'gp', 'gq', 'gr', 'gs', 'gt', 'gu', 'gw', 'gy', 'hk', 'hm', 'hn', 'hr', 'ht', 'hu', 'id', 'ie', 'il', 'im', 'in', 'io', 'iq', 'ir', 'is', 'it', 'je', 'jm', 'jo', 'jp', 'ke', 'kg', 'kh', 'ki', 'km', 'kn', 'kp', 'kr', 'kw', 'ky', 'kz', 'la', 'lb', 'lc', 'li', 'lk', 'lr', 'ls', 'lt', 'lu', 'lv', 'ly', 'ma', 'mc', 'md', 'me', 'mg', 'mh', 'mk', 'ml', 'mm', 'mn', 'mo', 'mp', 'mq', 'mr', 'ms', 'mt', 'mu', 'mv', 'mw', 'mx', 'my', 'mz', 'na', 'nc', 'ne', 'nf', 'ng', 'ni', 'nl', 'no', 'np', 'nr', 'nu', 'nz', 'om', 'pa', 'pe', 'pf', 'pg', 'ph', 'pk', 'pl', 'pm', 'pn', 'pr', 'ps', 'pt', 'pw', 'py', 'qa', 're', 'ro', 'rs', 'ru', 'rw', 'sa', 'sb', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sj', 'sk', 'sl', 'sm', 'sn', 'so', 'sr', 'ss', 'st', 'su', 'sv', 'sx', 'sy', 'sz', 'tc', 'td', 'tf', 'tg', 'th', 'tj', 'tk', 'tl', 'tm', 'tn', 'to', 'tr', 'tt', 'tv', 'tw', 'tz', 'ua', 'ug', 'uk', 'us', 'uy', 'uz', 'va', 'vc', 've', 'vg', 'vi', 'vn', 'vu', 'wf', 'ws', 'ye', 'yt', 'za', 'zm', 'zw'];\n    };\n\n    Chance.prototype.tld = function () {\n        return this.pick(this.tlds());\n    };\n\n    Chance.prototype.twitter = function () {\n        return '@' + this.word();\n    };\n\n    Chance.prototype.url = function (options) {\n        options = initOptions(options, { protocol: \"http\", domain: this.domain(options), domain_prefix: \"\", path: this.word(), extensions: []});\n\n        var extension = options.extensions.length > 0 ? \".\" + this.pick(options.extensions) : \"\";\n        var domain = options.domain_prefix ? options.domain_prefix + \".\" + options.domain : options.domain;\n\n        return options.protocol + \"://\" + domain + \"/\" + options.path + extension;\n    };\n\n    Chance.prototype.port = function() {\n        return this.integer({min: 0, max: 65535});\n    };\n\n    Chance.prototype.locale = function (options) {\n        options = initOptions(options);\n        if (options.region){\n          return this.pick(this.get(\"locale_regions\"));\n        } else {\n          return this.pick(this.get(\"locale_languages\"));\n        }\n    };\n\n    Chance.prototype.locales = function (options) {\n      options = initOptions(options);\n      if (options.region){\n        return this.get(\"locale_regions\");\n      } else {\n        return this.get(\"locale_languages\");\n      }\n    };\n\n    Chance.prototype.loremPicsum = function (options) {\n        options = initOptions(options, { width: 500, height: 500, greyscale: false, blurred: false });\n\n        var greyscale = options.greyscale ? 'g/' : '';\n        var query = options.blurred ? '/?blur' : '/?random';\n\n        return 'https://picsum.photos/' + greyscale + options.width + '/' + options.height + query;\n    }\n\n    // -- End Web --\n\n    // -- Location --\n\n    Chance.prototype.address = function (options) {\n        options = initOptions(options);\n        return this.natural({min: 5, max: 2000}) + ' ' + this.street(options);\n    };\n\n    Chance.prototype.altitude = function (options) {\n        options = initOptions(options, {fixed: 5, min: 0, max: 8848});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.areacode = function (options) {\n        options = initOptions(options, {parens : true});\n        // Don't want area codes to start with 1, or have a 9 as the second digit\n        var areacode = options.exampleNumber ?\n        \"555\" :\n        this.natural({min: 2, max: 9}).toString() +\n                this.natural({min: 0, max: 8}).toString() +\n                this.natural({min: 0, max: 9}).toString();\n\n        return options.parens ? '(' + areacode + ')' : areacode;\n    };\n\n    Chance.prototype.city = function () {\n        return this.capitalize(this.word({syllables: 3}));\n    };\n\n    Chance.prototype.coordinates = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options);\n    };\n\n    Chance.prototype.countries = function () {\n        return this.get(\"countries\");\n    };\n\n    Chance.prototype.country = function (options) {\n        options = initOptions(options);\n        var country = this.pick(this.countries());\n        return options.raw ? country : options.full ? country.name : country.abbreviation;\n    };\n\n    Chance.prototype.depth = function (options) {\n        options = initOptions(options, {fixed: 5, min: -10994, max: 0});\n        return this.floating({\n            min: options.min,\n            max: options.max,\n            fixed: options.fixed\n        });\n    };\n\n    Chance.prototype.geohash = function (options) {\n        options = initOptions(options, { length: 7 });\n        return this.string({ length: options.length, pool: '0123456789bcdefghjkmnpqrstuvwxyz' });\n    };\n\n    Chance.prototype.geojson = function (options) {\n        return this.latitude(options) + ', ' + this.longitude(options) + ', ' + this.altitude(options);\n    };\n\n    Chance.prototype.latitude = function (options) {\n        // Constants - Formats\n        var [DDM, DMS, DD] = ['ddm', 'dms', 'dd'];\n\n        options = initOptions(\noptions,\n            options && options.format && [DDM, DMS].includes(options.format.toLowerCase()) ?\n            {min: 0, max: 89, fixed: 4} :\n            {fixed: 5, min: -90, max: 90, format: DD}\n);\n\n        var format = options.format.toLowerCase();\n\n        if (format === DDM || format === DMS) {\n            testRange(options.min < 0 || options.min > 89, \"Chance: Min specified is out of range. Should be between 0 - 89\");\n            testRange(options.max < 0 || options.max > 89, \"Chance: Max specified is out of range. Should be between 0 - 89\");\n            testRange(options.fixed > 4, 'Chance: Fixed specified should be below or equal to 4');\n        }\n\n        switch (format) {\n            case DDM: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.floating({min: 0, max: 59, fixed: options.fixed});\n            }\n            case DMS: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.integer({min: 0, max: 59}) + '’' +\n                        this.floating({min: 0, max: 59, fixed: options.fixed}) + '”';\n            }\n            case DD:\n            default: {\n                return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n            }\n        }\n    };\n\n    Chance.prototype.longitude = function (options) {\n        // Constants - Formats\n        var [DDM, DMS, DD] = ['ddm', 'dms', 'dd'];\n\n        options = initOptions(\noptions,\n            options && options.format && [DDM, DMS].includes(options.format.toLowerCase()) ?\n            {min: 0, max: 179, fixed: 4} :\n            {fixed: 5, min: -180, max: 180, format: DD}\n);\n\n        var format = options.format.toLowerCase();\n\n        if (format === DDM || format === DMS) {\n            testRange(options.min < 0 || options.min > 179, \"Chance: Min specified is out of range. Should be between 0 - 179\");\n            testRange(options.max < 0 || options.max > 179, \"Chance: Max specified is out of range. Should be between 0 - 179\");\n            testRange(options.fixed > 4, 'Chance: Fixed specified should be below or equal to 4');\n        }\n\n        switch (format) {\n            case DDM: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.floating({min: 0, max: 59.9999, fixed: options.fixed})\n            }\n            case DMS: {\n                return  this.integer({min: options.min, max: options.max}) + '°' +\n                        this.integer({min: 0, max: 59}) + '’' +\n                        this.floating({min: 0, max: 59.9999, fixed: options.fixed}) + '”';\n            }\n            case DD:\n            default: {\n                return this.floating({min: options.min, max: options.max, fixed: options.fixed});\n            }\n        }\n    };\n\n    Chance.prototype.phone = function (options) {\n        var self = this,\n            numPick,\n            ukNum = function (parts) {\n                var section = [];\n                //fills the section part of the phone number with random numbers.\n                parts.sections.forEach(function(n) {\n                    section.push(self.string({ pool: '0123456789', length: n}));\n                });\n                return parts.area + section.join(' ');\n            };\n        options = initOptions(options, {\n            formatted: true,\n            country: 'us',\n            mobile: false,\n            exampleNumber: false,\n        });\n        if (!options.formatted) {\n            options.parens = false;\n        }\n        var phone;\n        switch (options.country) {\n            case 'fr':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        // Valid zone and département codes.\n                        '01' + this.pick(['30', '34', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '53', '55', '56', '58', '60', '64', '69', '70', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83']) + self.string({ pool: '0123456789', length: 6}),\n                        '02' + this.pick(['14', '18', '22', '23', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '40', '41', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '56', '57', '61', '62', '69', '72', '76', '77', '78', '85', '90', '96', '97', '98', '99']) + self.string({ pool: '0123456789', length: 6}),\n                        '03' + this.pick(['10', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '39', '44', '45', '51', '52', '54', '55', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90']) + self.string({ pool: '0123456789', length: 6}),\n                        '04' + this.pick(['11', '13', '15', '20', '22', '26', '27', '30', '32', '34', '37', '42', '43', '44', '50', '56', '57', '63', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '88', '89', '90', '91', '92', '93', '94', '95', '97', '98']) + self.string({ pool: '0123456789', length: 6}),\n                        '05' + this.pick(['08', '16', '17', '19', '24', '31', '32', '33', '34', '35', '40', '45', '46', '47', '49', '53', '55', '56', '57', '58', '59', '61', '62', '63', '64', '65', '67', '79', '81', '82', '86', '87', '90', '94']) + self.string({ pool: '0123456789', length: 6}),\n                        '09' + self.string({ pool: '0123456789', length: 8}),\n                    ]);\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                } else {\n                    numPick = this.pick(['06', '07']) + self.string({ pool: '0123456789', length: 8});\n                    phone = options.formatted ? numPick.match(/../g).join(' ') : numPick;\n                }\n                break;\n            case 'uk':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                        //valid area codes of major cities/counties followed by random numbers in required format.\n\n                        { area: '01' + this.character({ pool: '234569' }) + '1 ', sections: [3,4] },\n                        { area: '020 ' + this.character({ pool: '378' }), sections: [3,4] },\n                        { area: '023 ' + this.character({ pool: '89' }), sections: [3,4] },\n                        { area: '024 7', sections: [3,4] },\n                        { area: '028 ' + this.pick(['25','28','37','71','82','90','92','95']), sections: [2,4] },\n                        { area: '012' + this.pick(['04','08','54','76','97','98']) + ' ', sections: [6] },\n                        { area: '013' + this.pick(['63','64','84','86']) + ' ', sections: [6] },\n                        { area: '014' + this.pick(['04','20','60','61','80','88']) + ' ', sections: [6] },\n                        { area: '015' + this.pick(['24','27','62','66']) + ' ', sections: [6] },\n                        { area: '016' + this.pick(['06','29','35','47','59','95']) + ' ', sections: [6] },\n                        { area: '017' + this.pick(['26','44','50','68']) + ' ', sections: [6] },\n                        { area: '018' + this.pick(['27','37','84','97']) + ' ', sections: [6] },\n                        { area: '019' + this.pick(['00','05','35','46','49','63','95']) + ' ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '', 'g');\n                } else {\n                    numPick = this.pick([\n                        { area: '07' + this.pick(['4','5','7','8','9']), sections: [2,6] },\n                        { area: '07624 ', sections: [6] }\n                    ]);\n                    phone = options.formatted ? ukNum(numPick) : ukNum(numPick).replace(' ', '');\n                }\n                break;\n            case 'za':\n                if (!options.mobile) {\n                    numPick = this.pick([\n                       '01' + this.pick(['0', '1', '2', '3', '4', '5', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '02' + this.pick(['1', '2', '3', '4', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                       '03' + this.pick(['1', '2', '3', '5', '6', '9']) + self.string({ pool: '0123456789', length: 7}),\n                       '04' + this.pick(['1', '2', '3', '4', '5','6','7', '8','9']) + self.string({ pool: '0123456789', length: 7}),\n                       '05' + this.pick(['1', '3', '4', '6', '7', '8']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                } else {\n                    numPick = this.pick([\n                        '060' + this.pick(['3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '061' + this.pick(['0','1','2','3','4','5','8']) + self.string({ pool: '0123456789', length: 6}),\n                        '06'  + self.string({ pool: '0123456789', length: 7}),\n                        '071' + this.pick(['0','1','2','3','4','5','6','7','8','9']) + self.string({ pool: '0123456789', length: 6}),\n                        '07'  + this.pick(['2','3','4','6','7','8','9']) + self.string({ pool: '0123456789', length: 7}),\n                        '08'  + this.pick(['0','1','2','3','4','5']) + self.string({ pool: '0123456789', length: 7}),\n                    ]);\n                    phone = options.formatted || numPick;\n                }\n                break;\n            case 'us':\n                var areacode = this.areacode(options).toString();\n                var exchange = this.natural({ min: 2, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString() +\n                    this.natural({ min: 0, max: 9 }).toString();\n                var subscriber = this.natural({ min: 1000, max: 9999 }).toString(); // this could be random [0-9]{4}\n                phone = options.formatted ? areacode + ' ' + exchange + '-' + subscriber : areacode + exchange + subscriber;\n                break;\n            case 'br':\n                var areaCode = this.pick([\"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"21\", \"22\", \"24\", \"27\", \"28\", \"31\", \"32\", \"33\", \"34\", \"35\", \"37\", \"38\", \"41\", \"42\", \"43\", \"44\", \"45\", \"46\", \"47\", \"48\", \"49\", \"51\", \"53\", \"54\", \"55\", \"61\", \"62\", \"63\", \"64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"71\", \"73\", \"74\", \"75\", \"77\", \"79\", \"81\", \"82\", \"83\", \"84\", \"85\", \"86\", \"87\", \"88\", \"89\", \"91\", \"92\", \"93\", \"94\", \"95\", \"96\", \"97\", \"98\", \"99\"]);\n                var prefix;\n                if (options.mobile) {\n                    // Brasilian official reference (mobile): http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=330\n                    prefix = '9' + self.string({ pool: '0123456789', length: 4});\n                } else {\n                    // Brasilian official reference: http://www.anatel.gov.br/setorregulado/plano-de-numeracao-brasileiro?id=331\n                    prefix = this.natural({ min: 2000, max: 5999 }).toString();\n                }\n                var mcdu = self.string({ pool: '0123456789', length: 4});\n                phone = options.formatted ? '(' + areaCode + ') ' + prefix + '-' + mcdu : areaCode + prefix + mcdu;\n                break;\n        }\n        return phone;\n    };\n\n    Chance.prototype.postal = function () {\n        // Postal District\n        var pd = this.character({pool: \"XVTSRPNKLMHJGECBA\"});\n        // Forward Sortation Area (FSA)\n        var fsa = pd + this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"});\n        // Local Delivery Unut (LDU)\n        var ldu = this.natural({max: 9}) + this.character({alpha: true, casing: \"upper\"}) + this.natural({max: 9});\n\n        return fsa + \" \" + ldu;\n    };\n\n    Chance.prototype.postcode = function () {\n        // Area\n        var area = this.pick(this.get(\"postcodeAreas\")).code;\n        // District\n        var district = this.natural({max: 9});\n        // Sub-District\n        var subDistrict = this.bool() ? this.character({alpha: true, casing: \"upper\"}) : \"\";\n        // Outward Code\n        var outward = area + district + subDistrict;\n        // Sector\n        var sector = this.natural({max: 9});\n        // Unit\n        var unit = this.character({alpha: true, casing: \"upper\"}) + this.character({alpha: true, casing: \"upper\"});\n        // Inward Code\n        var inward = sector + unit;\n\n        return outward + \" \" + inward;\n    };\n\n    Chance.prototype.counties = function (options) {\n        options = initOptions(options, { country: 'uk' });\n        return this.get(\"counties\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.county = function (options) {\n        return this.pick(this.counties(options)).name;\n    };\n\n    Chance.prototype.provinces = function (options) {\n        options = initOptions(options, { country: 'ca' });\n        return this.get(\"provinces\")[options.country.toLowerCase()];\n    };\n\n    Chance.prototype.province = function (options) {\n        return (options && options.full) ?\n            this.pick(this.provinces(options)).name :\n            this.pick(this.provinces(options)).abbreviation;\n    };\n\n    Chance.prototype.state = function (options) {\n        return (options && options.full) ?\n            this.pick(this.states(options)).name :\n            this.pick(this.states(options)).abbreviation;\n    };\n\n    Chance.prototype.states = function (options) {\n        options = initOptions(options, { country: 'us', us_states_and_dc: true } );\n\n        var states;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                var us_states_and_dc = this.get(\"us_states_and_dc\"),\n                    territories = this.get(\"territories\"),\n                    armed_forces = this.get(\"armed_forces\");\n\n                states = [];\n\n                if (options.us_states_and_dc) {\n                    states = states.concat(us_states_and_dc);\n                }\n                if (options.territories) {\n                    states = states.concat(territories);\n                }\n                if (options.armed_forces) {\n                    states = states.concat(armed_forces);\n                }\n                break;\n            case 'it':\n            case 'mx':\n                states = this.get(\"country_regions\")[options.country.toLowerCase()];\n                break;\n            case 'uk':\n                states = this.get(\"counties\")[options.country.toLowerCase()];\n                break;\n        }\n\n        return states;\n    };\n\n    Chance.prototype.street = function (options) {\n        options = initOptions(options, { country: 'us', syllables: 2 });\n        var     street;\n\n        switch (options.country.toLowerCase()) {\n            case 'us':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street += ' ';\n                street += options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name;\n                break;\n            case 'it':\n                street = this.word({ syllables: options.syllables });\n                street = this.capitalize(street);\n                street = (options.short_suffix ?\n                    this.street_suffix(options).abbreviation :\n                    this.street_suffix(options).name) + \" \" + street;\n                break;\n        }\n        return street;\n    };\n\n    Chance.prototype.street_suffix = function (options) {\n        options = initOptions(options, { country: 'us' });\n        return this.pick(this.street_suffixes(options));\n    };\n\n    Chance.prototype.street_suffixes = function (options) {\n        options = initOptions(options, { country: 'us' });\n        // These are the most common suffixes.\n        return this.get(\"street_suffixes\")[options.country.toLowerCase()];\n    };\n\n    // Note: only returning US zip codes, internationalization will be a whole\n    // other beast to tackle at some point.\n    Chance.prototype.zip = function (options) {\n        var zip = this.n(this.natural, 5, {max: 9});\n\n        if (options && options.plusfour === true) {\n            zip.push('-');\n            zip = zip.concat(this.n(this.natural, 4, {max: 9}));\n        }\n\n        return zip.join(\"\");\n    };\n\n    // -- End Location --\n\n    // -- Time\n\n    Chance.prototype.ampm = function () {\n        return this.bool() ? 'am' : 'pm';\n    };\n\n    Chance.prototype.date = function (options) {\n        var date_string, date;\n\n        // If interval is specified we ignore preset\n        if(options && (options.min || options.max)) {\n            options = initOptions(options, {\n                american: true,\n                string: false\n            });\n            var min = typeof options.min !== \"undefined\" ? options.min.getTime() : 1;\n            // 100,000,000 days measured relative to midnight at the beginning of 01 January, 1970 UTC. http://es5.github.io/#x15.9.1.1\n            var max = typeof options.max !== \"undefined\" ? options.max.getTime() : 8640000000000000;\n\n            date = new Date(this.integer({min: min, max: max}));\n        } else {\n            var m = this.month({raw: true});\n            var daysInMonth = m.days;\n\n            if(options && options.month) {\n                // Mod 12 to allow months outside range of 0-11 (not encouraged, but also not prevented).\n                daysInMonth = this.get('months')[((options.month % 12) + 12) % 12].days;\n            }\n\n            options = initOptions(options, {\n                year: parseInt(this.year(), 10),\n                // Necessary to subtract 1 because Date() 0-indexes month but not day or year\n                // for some reason.\n                month: m.numeric - 1,\n                day: this.natural({min: 1, max: daysInMonth}),\n                hour: this.hour({twentyfour: true}),\n                minute: this.minute(),\n                second: this.second(),\n                millisecond: this.millisecond(),\n                american: true,\n                string: false\n            });\n\n            date = new Date(options.year, options.month, options.day, options.hour, options.minute, options.second, options.millisecond);\n        }\n\n        if (options.american) {\n            // Adding 1 to the month is necessary because Date() 0-indexes\n            // months but not day for some odd reason.\n            date_string = (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear();\n        } else {\n            date_string = date.getDate() + '/' + (date.getMonth() + 1) + '/' + date.getFullYear();\n        }\n\n        return options.string ? date_string : date;\n    };\n\n    Chance.prototype.hammertime = function (options) {\n        return this.date(options).getTime();\n    };\n\n    Chance.prototype.hour = function (options) {\n        options = initOptions(options, {\n            min: options && options.twentyfour ? 0 : 1,\n            max: options && options.twentyfour ? 23 : 12\n        });\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.twentyfour && options.max > 23, \"Chance: Max cannot be greater than 23 for twentyfour option.\");\n        testRange(!options.twentyfour && options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.millisecond = function () {\n        return this.natural({max: 999});\n    };\n\n    Chance.prototype.minute = Chance.prototype.second = function (options) {\n        options = initOptions(options, {min: 0, max: 59});\n\n        testRange(options.min < 0, \"Chance: Min cannot be less than 0.\");\n        testRange(options.max > 59, \"Chance: Max cannot be greater than 59.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        return this.natural({min: options.min, max: options.max});\n    };\n\n    Chance.prototype.month = function (options) {\n        options = initOptions(options, {min: 1, max: 12});\n\n        testRange(options.min < 1, \"Chance: Min cannot be less than 1.\");\n        testRange(options.max > 12, \"Chance: Max cannot be greater than 12.\");\n        testRange(options.min > options.max, \"Chance: Min cannot be greater than Max.\");\n\n        var month = this.pick(this.months().slice(options.min - 1, options.max));\n        return options.raw ? month : month.name;\n    };\n\n    Chance.prototype.months = function () {\n        return this.get(\"months\");\n    };\n\n    Chance.prototype.second = function () {\n        return this.natural({max: 59});\n    };\n\n    Chance.prototype.timestamp = function () {\n        return this.natural({min: 1, max: parseInt(new Date().getTime() / 1000, 10)});\n    };\n\n    Chance.prototype.weekday = function (options) {\n        options = initOptions(options, {weekday_only: false});\n        var weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"];\n        if (!options.weekday_only) {\n            weekdays.push(\"Saturday\");\n            weekdays.push(\"Sunday\");\n        }\n        return this.pickone(weekdays);\n    };\n\n    Chance.prototype.year = function (options) {\n        // Default to current year as min if none specified\n        options = initOptions(options, {min: new Date().getFullYear()});\n\n        // Default to one century after current year as max if none specified\n        options.max = (typeof options.max !== \"undefined\") ? options.max : options.min + 100;\n\n        return this.natural(options).toString();\n    };\n\n    // -- End Time\n\n    // -- Finance --\n\n    Chance.prototype.cc = function (options) {\n        options = initOptions(options);\n\n        var type, number, to_generate;\n\n        type = (options.type) ?\n                    this.cc_type({ name: options.type, raw: true }) :\n                    this.cc_type({ raw: true });\n\n        number = type.prefix.split(\"\");\n        to_generate = type.length - type.prefix.length - 1;\n\n        // Generates n - 1 digits\n        number = number.concat(this.n(this.integer, to_generate, {min: 0, max: 9}));\n\n        // Generates the last digit according to Luhn algorithm\n        number.push(this.luhn_calculate(number.join(\"\")));\n\n        return number.join(\"\");\n    };\n\n    Chance.prototype.cc_types = function () {\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        return this.get(\"cc_types\");\n    };\n\n    Chance.prototype.cc_type = function (options) {\n        options = initOptions(options);\n        var types = this.cc_types(),\n            type = null;\n\n        if (options.name) {\n            for (var i = 0; i < types.length; i++) {\n                // Accept either name or short_name to specify card type\n                if (types[i].name === options.name || types[i].short_name === options.name) {\n                    type = types[i];\n                    break;\n                }\n            }\n            if (type === null) {\n                throw new RangeError(\"Chance: Credit card type '\" + options.name + \"' is not supported\");\n            }\n        } else {\n            type = this.pick(types);\n        }\n\n        return options.raw ? type : type.name;\n    };\n\n    // return all world currency by ISO 4217\n    Chance.prototype.currency_types = function () {\n        return this.get(\"currency_types\");\n    };\n\n    // return random world currency by ISO 4217\n    Chance.prototype.currency = function () {\n        return this.pick(this.currency_types());\n    };\n\n    // return all timezones available\n    Chance.prototype.timezones = function () {\n        return this.get(\"timezones\");\n    };\n\n    // return random timezone\n    Chance.prototype.timezone = function () {\n        return this.pick(this.timezones());\n    };\n\n    //Return random correct currency exchange pair (e.g. EUR/USD) or array of currency code\n    Chance.prototype.currency_pair = function (returnAsString) {\n        var currencies = this.unique(this.currency, 2, {\n            comparator: function(arr, val) {\n\n                return arr.reduce(function(acc, item) {\n                    // If a match has been found, short circuit check and just return\n                    return acc || (item.code === val.code);\n                }, false);\n            }\n        });\n\n        if (returnAsString) {\n            return currencies[0].code + '/' + currencies[1].code;\n        } else {\n            return currencies;\n        }\n    };\n\n    Chance.prototype.dollar = function (options) {\n        // By default, a somewhat more sane max for dollar than all available numbers\n        options = initOptions(options, {max : 10000, min : 0});\n\n        var dollar = this.floating({min: options.min, max: options.max, fixed: 2}).toString(),\n            cents = dollar.split('.')[1];\n\n        if (cents === undefined) {\n            dollar += '.00';\n        } else if (cents.length < 2) {\n            dollar = dollar + '0';\n        }\n\n        if (dollar < 0) {\n            return '-$' + dollar.replace('-', '');\n        } else {\n            return '$' + dollar;\n        }\n    };\n\n    Chance.prototype.euro = function (options) {\n        return Number(this.dollar(options).replace(\"$\", \"\")).toLocaleString() + \"€\";\n    };\n\n    Chance.prototype.exp = function (options) {\n        options = initOptions(options);\n        var exp = {};\n\n        exp.year = this.exp_year();\n\n        // If the year is this year, need to ensure month is greater than the\n        // current month or this expiration will not be valid\n        if (exp.year === (new Date().getFullYear()).toString()) {\n            exp.month = this.exp_month({future: true});\n        } else {\n            exp.month = this.exp_month();\n        }\n\n        return options.raw ? exp : exp.month + '/' + exp.year;\n    };\n\n    Chance.prototype.exp_month = function (options) {\n        options = initOptions(options);\n        var month, month_int,\n            // Date object months are 0 indexed\n            curMonth = new Date().getMonth() + 1;\n\n        if (options.future && (curMonth !== 12)) {\n            do {\n                month = this.month({raw: true}).numeric;\n                month_int = parseInt(month, 10);\n            } while (month_int <= curMonth);\n        } else {\n            month = this.month({raw: true}).numeric;\n        }\n\n        return month;\n    };\n\n    Chance.prototype.exp_year = function () {\n        var curMonth = new Date().getMonth() + 1,\n            curYear = new Date().getFullYear();\n\n        return this.year({min: ((curMonth === 12) ? (curYear + 1) : curYear), max: (curYear + 10)});\n    };\n\n    Chance.prototype.vat = function (options) {\n        options = initOptions(options, { country: 'it' });\n        switch (options.country.toLowerCase()) {\n            case 'it':\n                return this.it_vat();\n        }\n    };\n\n    /**\n     * Generate a string matching IBAN pattern (https://en.wikipedia.org/wiki/International_Bank_Account_Number).\n     * No country-specific formats support (yet)\n     */\n    Chance.prototype.iban = function () {\n        var alpha = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        var alphanum = alpha + '0123456789';\n        var iban =\n            this.string({ length: 2, pool: alpha }) +\n            this.pad(this.integer({ min: 0, max: 99 }), 2) +\n            this.string({ length: 4, pool: alphanum }) +\n            this.pad(this.natural(), this.natural({ min: 6, max: 26 }));\n        return iban;\n    };\n\n    // -- End Finance\n\n    // -- Regional\n\n    Chance.prototype.it_vat = function () {\n        var it_vat = this.natural({min: 1, max: 1800000});\n\n        it_vat = this.pad(it_vat, 7) + this.pad(this.pick(this.provinces({ country: 'it' })).code, 3);\n        return it_vat + this.luhn_calculate(it_vat);\n    };\n\n    /*\n     * this generator is written following the official algorithm\n     * all data can be passed explicitely or randomized by calling chance.cf() without options\n     * the code does not check that the input data is valid (it goes beyond the scope of the generator)\n     *\n     * @param  [Object] options = { first: first name,\n     *                              last: last name,\n     *                              gender: female|male,\n                                    birthday: JavaScript date object,\n                                    city: string(4), 1 letter + 3 numbers\n                                   }\n     * @return [string] codice fiscale\n     *\n    */\n    Chance.prototype.cf = function (options) {\n        options = options || {};\n        var gender = !!options.gender ? options.gender : this.gender(),\n            first = !!options.first ? options.first : this.first( { gender: gender, nationality: 'it'} ),\n            last = !!options.last ? options.last : this.last( { nationality: 'it'} ),\n            birthday = !!options.birthday ? options.birthday : this.birthday(),\n            city = !!options.city ? options.city : this.pickone(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'L', 'M', 'Z']) + this.pad(this.natural({max:999}), 3),\n            cf = [],\n            name_generator = function(name, isLast) {\n                var temp,\n                    return_value = [];\n\n                if (name.length < 3) {\n                    return_value = name.split(\"\").concat(\"XXX\".split(\"\")).splice(0,3);\n                }\n                else {\n                    temp = name.toUpperCase().split('').map(function(c){\n                        return (\"BCDFGHJKLMNPRSTVWZ\".indexOf(c) !== -1) ? c : undefined;\n                    }).join('');\n                    if (temp.length > 3) {\n                        if (isLast) {\n                            temp = temp.substr(0,3);\n                        } else {\n                            temp = temp[0] + temp.substr(2,2);\n                        }\n                    }\n                    if (temp.length < 3) {\n                        return_value = temp;\n                        temp = name.toUpperCase().split('').map(function(c){\n                            return (\"AEIOU\".indexOf(c) !== -1) ? c : undefined;\n                        }).join('').substr(0, 3 - return_value.length);\n                    }\n                    return_value = return_value + temp;\n                }\n\n                return return_value;\n            },\n            date_generator = function(birthday, gender, that) {\n                var lettermonths = ['A', 'B', 'C', 'D', 'E', 'H', 'L', 'M', 'P', 'R', 'S', 'T'];\n\n                return  birthday.getFullYear().toString().substr(2) +\n                        lettermonths[birthday.getMonth()] +\n                        that.pad(birthday.getDate() + ((gender.toLowerCase() === \"female\") ? 40 : 0), 2);\n            },\n            checkdigit_generator = function(cf) {\n                var range1 = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    range2 = \"ABCDEFGHIJABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    evens  = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n                    odds   = \"BAKPLCQDREVOSFTGUHMINJWZYX\",\n                    digit  = 0;\n\n\n                for(var i = 0; i < 15; i++) {\n                    if (i % 2 !== 0) {\n                        digit += evens.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                    else {\n                        digit +=  odds.indexOf(range2[range1.indexOf(cf[i])]);\n                    }\n                }\n                return evens[digit % 26];\n            };\n\n        cf = cf.concat(name_generator(last, true), name_generator(first), date_generator(birthday, gender, this), city.toUpperCase().split(\"\")).join(\"\");\n        cf += checkdigit_generator(cf.toUpperCase(), this);\n\n        return cf.toUpperCase();\n    };\n\n    Chance.prototype.pl_pesel = function () {\n        var number = this.natural({min: 1, max: 9999999999});\n        var arr = this.pad(number, 10).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (1 * arr[0] + 3 * arr[1] + 7 * arr[2] + 9 * arr[3] + 1 * arr[4] + 3 * arr[5] + 7 * arr[6] + 9 * arr[7] + 1 * arr[8] + 3 * arr[9]) % 10;\n        if(controlNumber !== 0) {\n            controlNumber = 10 - controlNumber;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_nip = function () {\n        var number = this.natural({min: 1, max: 999999999});\n        var arr = this.pad(number, 9).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (6 * arr[0] + 5 * arr[1] + 7 * arr[2] + 2 * arr[3] + 3 * arr[4] + 4 * arr[5] + 5 * arr[6] + 6 * arr[7] + 7 * arr[8]) % 11;\n        if(controlNumber === 10) {\n            return this.pl_nip();\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    Chance.prototype.pl_regon = function () {\n        var number = this.natural({min: 1, max: 99999999});\n        var arr = this.pad(number, 8).split('');\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = parseInt(arr[i]);\n        }\n\n        var controlNumber = (8 * arr[0] + 9 * arr[1] + 2 * arr[2] + 3 * arr[3] + 4 * arr[4] + 5 * arr[5] + 6 * arr[6] + 7 * arr[7]) % 11;\n        if(controlNumber === 10) {\n            controlNumber = 0;\n        }\n\n        return arr.join('') + controlNumber;\n    };\n\n    // -- End Regional\n\n    // -- Music --\n\n    // Genre choices:\n    // Rock,Pop,Hip-Hop,Jazz,Classical,Electronic,Country,R&B,Reggae,\n    // Blues,Metal,Folk,Alternative,Punk,Disco,Funk,Techno,\n    // Indie,Gospel,Dance,Children's,World\n\n    Chance.prototype.music_genre = function (genre = 'general') {\n        if (!(genre.toLowerCase() in data.music_genres)) {\n            throw new Error(`Unsupported genre: ${genre}`);\n        }\n\n        const genres = data.music_genres[genre.toLowerCase()];\n        const randomIndex = this.integer({ min: 0, max: genres.length - 1 });\n\n        return genres[randomIndex];\n    };\n\n    Chance.prototype.note = function(options) {\n      // choices for 'notes' option:\n      // flatKey - chromatic scale with flat notes (default)\n      // sharpKey - chromatic scale with sharp notes\n      // flats - just flat notes\n      // sharps - just sharp notes\n      // naturals - just natural notes\n      // all - naturals, sharps and flats\n      options = initOptions(options, { notes : 'flatKey'});\n      var scales = {\n        naturals: ['C', 'D', 'E', 'F', 'G', 'A', 'B'],\n        flats: ['D♭', 'E♭', 'G♭', 'A♭', 'B♭'],\n        sharps: ['C♯', 'D♯', 'F♯', 'G♯', 'A♯']\n      };\n      scales.all = scales.naturals.concat(scales.flats.concat(scales.sharps))\n      scales.flatKey = scales.naturals.concat(scales.flats)\n      scales.sharpKey = scales.naturals.concat(scales.sharps)\n      return this.pickone(scales[options.notes]);\n    }\n\n    Chance.prototype.midi_note = function(options) {\n      var min = 0;\n      var max = 127;\n      options = initOptions(options, { min : min, max : max });\n      return this.integer({min: options.min, max: options.max});\n    }\n\n    Chance.prototype.chord_quality = function(options) {\n      options = initOptions(options, { jazz: true });\n      var chord_qualities = ['maj', 'min', 'aug', 'dim'];\n      if (options.jazz){\n        chord_qualities = [\n          'maj7',\n          'min7',\n          '7',\n          'sus',\n          'dim',\n          'ø'\n        ];\n      }\n      return this.pickone(chord_qualities);\n    }\n\n    Chance.prototype.chord = function (options) {\n      options = initOptions(options);\n      return this.note(options) + this.chord_quality(options);\n    }\n\n    Chance.prototype.tempo = function (options) {\n      var min = 40;\n      var max = 320;\n      options = initOptions(options, {min: min, max: max});\n      return this.integer({min: options.min, max: options.max});\n    }\n\n    // -- End Music\n\n    // -- Miscellaneous --\n\n    // Coin - Flip, flip, flipadelphia\n    Chance.prototype.coin = function() {\n      return this.bool() ? \"heads\" : \"tails\";\n    }\n\n    // Dice - For all the board game geeks out there, myself included ;)\n    function diceFn (range) {\n        return function () {\n            return this.natural(range);\n        };\n    }\n    Chance.prototype.d4 = diceFn({min: 1, max: 4});\n    Chance.prototype.d6 = diceFn({min: 1, max: 6});\n    Chance.prototype.d8 = diceFn({min: 1, max: 8});\n    Chance.prototype.d10 = diceFn({min: 1, max: 10});\n    Chance.prototype.d12 = diceFn({min: 1, max: 12});\n    Chance.prototype.d20 = diceFn({min: 1, max: 20});\n    Chance.prototype.d30 = diceFn({min: 1, max: 30});\n    Chance.prototype.d100 = diceFn({min: 1, max: 100});\n\n    Chance.prototype.rpg = function (thrown, options) {\n        options = initOptions(options);\n        if (!thrown) {\n            throw new RangeError(\"Chance: A type of die roll must be included\");\n        } else {\n            var bits = thrown.toLowerCase().split(\"d\"),\n                rolls = [];\n\n            if (bits.length !== 2 || !parseInt(bits[0], 10) || !parseInt(bits[1], 10)) {\n                throw new Error(\"Chance: Invalid format provided. Please provide #d# where the first # is the number of dice to roll, the second # is the max of each die\");\n            }\n            for (var i = bits[0]; i > 0; i--) {\n                rolls[i - 1] = this.natural({min: 1, max: bits[1]});\n            }\n            return (typeof options.sum !== 'undefined' && options.sum) ? rolls.reduce(function (p, c) { return p + c; }) : rolls;\n        }\n    };\n\n    // Guid\n    Chance.prototype.guid = function (options) {\n        options = initOptions(options, { version: 5 });\n\n        var guid_pool = \"abcdef1234567890\",\n            variant_pool = \"ab89\",\n            guid = this.string({ pool: guid_pool, length: 8 }) + '-' +\n                   this.string({ pool: guid_pool, length: 4 }) + '-' +\n                   // The Version\n                   options.version +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   // The Variant\n                   this.string({ pool: variant_pool, length: 1 }) +\n                   this.string({ pool: guid_pool, length: 3 }) + '-' +\n                   this.string({ pool: guid_pool, length: 12 });\n        return guid;\n    };\n\n    // Hash\n    Chance.prototype.hash = function (options) {\n        options = initOptions(options, {length : 40, casing: 'lower'});\n        var pool = options.casing === 'upper' ? HEX_POOL.toUpperCase() : HEX_POOL;\n        return this.string({pool: pool, length: options.length});\n    };\n\n    Chance.prototype.luhn_check = function (num) {\n        var str = num.toString();\n        var checkDigit = +str.substring(str.length - 1);\n        return checkDigit === this.luhn_calculate(+str.substring(0, str.length - 1));\n    };\n\n    Chance.prototype.luhn_calculate = function (num) {\n        var digits = num.toString().split(\"\").reverse();\n        var sum = 0;\n        var digit;\n\n        for (var i = 0, l = digits.length; l > i; ++i) {\n            digit = +digits[i];\n            if (i % 2 === 0) {\n                digit *= 2;\n                if (digit > 9) {\n                    digit -= 9;\n                }\n            }\n            sum += digit;\n        }\n        return (sum * 9) % 10;\n    };\n\n    // MD5 Hash\n    Chance.prototype.md5 = function(options) {\n        var opts = { str: '', key: null, raw: false };\n\n        if (!options) {\n            opts.str = this.string();\n            options = {};\n        }\n        else if (typeof options === 'string') {\n            opts.str = options;\n            options = {};\n        }\n        else if (typeof options !== 'object') {\n            return null;\n        }\n        else if(options.constructor === 'Array') {\n            return null;\n        }\n\n        opts = initOptions(options, opts);\n\n        if(!opts.str){\n            throw new Error('A parameter is required to return an md5 hash.');\n        }\n\n        return this.bimd5.md5(opts.str, opts.key, opts.raw);\n    };\n\n    /**\n     * #Description:\n     * =====================================================\n     * Generate random file name with extension\n     *\n     * The argument provide extension type\n     * -> raster\n     * -> vector\n     * -> 3d\n     * -> document\n     *\n     * If nothing is provided the function return random file name with random\n     * extension type of any kind\n     *\n     * The user can validate the file name length range\n     * If nothing provided the generated file name is random\n     *\n     * #Extension Pool :\n     * * Currently the supported extensions are\n     *  -> some of the most popular raster image extensions\n     *  -> some of the most popular vector image extensions\n     *  -> some of the most popular 3d image extensions\n     *  -> some of the most popular document extensions\n     *\n     * #Examples :\n     * =====================================================\n     *\n     * Return random file name with random extension. The file extension\n     * is provided by a predefined collection of extensions. More about the extension\n     * pool can be found in #Extension Pool section\n     *\n     * chance.file()\n     * => dsfsdhjf.xml\n     *\n     * In order to generate a file name with specific length, specify the\n     * length property and integer value. The extension is going to be random\n     *\n     * chance.file({length : 10})\n     * => asrtineqos.pdf\n     *\n     * In order to generate file with extension from some of the predefined groups\n     * of the extension pool just specify the extension pool category in fileType property\n     *\n     * chance.file({fileType : 'raster'})\n     * => dshgssds.psd\n     *\n     * You can provide specific extension for your files\n     * chance.file({extension : 'html'})\n     * => djfsd.html\n     *\n     * Or you could pass custom collection of extensions by array or by object\n     * chance.file({extensions : [...]})\n     * => dhgsdsd.psd\n     *\n     * chance.file({extensions : { key : [...], key : [...]}})\n     * => djsfksdjsd.xml\n     *\n     * @param  [collection] options\n     * @return [string]\n     *\n     */\n    Chance.prototype.file = function(options) {\n\n        var fileOptions = options || {};\n        var poolCollectionKey = \"fileExtension\";\n        var typeRange   = Object.keys(this.get(\"fileExtension\"));//['raster', 'vector', '3d', 'document'];\n        var fileName;\n        var fileExtension;\n\n        // Generate random file name\n        fileName = this.word({length : fileOptions.length});\n\n        // Generate file by specific extension provided by the user\n        if(fileOptions.extension) {\n\n            fileExtension = fileOptions.extension;\n            return (fileName + '.' + fileExtension);\n        }\n\n        // Generate file by specific extension collection\n        if(fileOptions.extensions) {\n\n            if(Array.isArray(fileOptions.extensions)) {\n\n                fileExtension = this.pickone(fileOptions.extensions);\n                return (fileName + '.' + fileExtension);\n            }\n            else if(fileOptions.extensions.constructor === Object) {\n\n                var extensionObjectCollection = fileOptions.extensions;\n                var keys = Object.keys(extensionObjectCollection);\n\n                fileExtension = this.pickone(extensionObjectCollection[this.pickone(keys)]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new Error(\"Chance: Extensions must be an Array or Object\");\n        }\n\n        // Generate file extension based on specific file type\n        if(fileOptions.fileType) {\n\n            var fileType = fileOptions.fileType;\n            if(typeRange.indexOf(fileType) !== -1) {\n\n                fileExtension = this.pickone(this.get(poolCollectionKey)[fileType]);\n                return (fileName + '.' + fileExtension);\n            }\n\n            throw new RangeError(\"Chance: Expect file type value to be 'raster', 'vector', '3d' or 'document'\");\n        }\n\n        // Generate random file name if no extension options are passed\n        fileExtension = this.pickone(this.get(poolCollectionKey)[this.pickone(typeRange)]);\n        return (fileName + '.' + fileExtension);\n    };\n\n    /**\n     * Generates file data of random bytes using the chance.file method for the file name\n     *\n     * @param {object}\n     * fileName: String\n     * fileExtention: String\n     * fileSize: Number      <- in bytes\n     * @returns {object} fileName: String, fileData: Buffer\n     */\n    Chance.prototype.fileWithContent = function (options){\n            var fileOptions = options || {};\n            var fileName = 'fileName' in fileOptions ? fileOptions.fileName : this.file().split(\".\")[0];\n            fileName += \".\" + ('fileExtension' in fileOptions ? fileOptions.fileExtension : this.file().split(\".\")[1]);\n\n\n            if (typeof fileOptions.fileSize !== \"number\") {\n                throw new Error('File size must be an integer')\n            }\n            var file = {\n              fileData: this.buffer({length: fileOptions.fileSize}),\n              fileName: fileName,\n            };\n        return file;\n   }\n\n    var data = {\n\n        firstNames: {\n            \"male\": {\n                \"en\": [\"James\", \"John\", \"Robert\", \"Michael\", \"William\", \"David\", \"Richard\", \"Joseph\", \"Charles\", \"Thomas\", \"Christopher\", \"Daniel\", \"Matthew\", \"George\", \"Donald\", \"Anthony\", \"Paul\", \"Mark\", \"Edward\", \"Steven\", \"Kenneth\", \"Andrew\", \"Brian\", \"Joshua\", \"Kevin\", \"Ronald\", \"Timothy\", \"Jason\", \"Jeffrey\", \"Frank\", \"Gary\", \"Ryan\", \"Nicholas\", \"Eric\", \"Stephen\", \"Jacob\", \"Larry\", \"Jonathan\", \"Scott\", \"Raymond\", \"Justin\", \"Brandon\", \"Gregory\", \"Samuel\", \"Benjamin\", \"Patrick\", \"Jack\", \"Henry\", \"Walter\", \"Dennis\", \"Jerry\", \"Alexander\", \"Peter\", \"Tyler\", \"Douglas\", \"Harold\", \"Aaron\", \"Jose\", \"Adam\", \"Arthur\", \"Zachary\", \"Carl\", \"Nathan\", \"Albert\", \"Kyle\", \"Lawrence\", \"Joe\", \"Willie\", \"Gerald\", \"Roger\", \"Keith\", \"Jeremy\", \"Terry\", \"Harry\", \"Ralph\", \"Sean\", \"Jesse\", \"Roy\", \"Louis\", \"Billy\", \"Austin\", \"Bruce\", \"Eugene\", \"Christian\", \"Bryan\", \"Wayne\", \"Russell\", \"Howard\", \"Fred\", \"Ethan\", \"Jordan\", \"Philip\", \"Alan\", \"Juan\", \"Randy\", \"Vincent\", \"Bobby\", \"Dylan\", \"Johnny\", \"Phillip\", \"Victor\", \"Clarence\", \"Ernest\", \"Martin\", \"Craig\", \"Stanley\", \"Shawn\", \"Travis\", \"Bradley\", \"Leonard\", \"Earl\", \"Gabriel\", \"Jimmy\", \"Francis\", \"Todd\", \"Noah\", \"Danny\", \"Dale\", \"Cody\", \"Carlos\", \"Allen\", \"Frederick\", \"Logan\", \"Curtis\", \"Alex\", \"Joel\", \"Luis\", \"Norman\", \"Marvin\", \"Glenn\", \"Tony\", \"Nathaniel\", \"Rodney\", \"Melvin\", \"Alfred\", \"Steve\", \"Cameron\", \"Chad\", \"Edwin\", \"Caleb\", \"Evan\", \"Antonio\", \"Lee\", \"Herbert\", \"Jeffery\", \"Isaac\", \"Derek\", \"Ricky\", \"Marcus\", \"Theodore\", \"Elijah\", \"Luke\", \"Jesus\", \"Eddie\", \"Troy\", \"Mike\", \"Dustin\", \"Ray\", \"Adrian\", \"Bernard\", \"Leroy\", \"Angel\", \"Randall\", \"Wesley\", \"Ian\", \"Jared\", \"Mason\", \"Hunter\", \"Calvin\", \"Oscar\", \"Clifford\", \"Jay\", \"Shane\", \"Ronnie\", \"Barry\", \"Lucas\", \"Corey\", \"Manuel\", \"Leo\", \"Tommy\", \"Warren\", \"Jackson\", \"Isaiah\", \"Connor\", \"Don\", \"Dean\", \"Jon\", \"Julian\", \"Miguel\", \"Bill\", \"Lloyd\", \"Charlie\", \"Mitchell\", \"Leon\", \"Jerome\", \"Darrell\", \"Jeremiah\", \"Alvin\", \"Brett\", \"Seth\", \"Floyd\", \"Jim\", \"Blake\", \"Micheal\", \"Gordon\", \"Trevor\", \"Lewis\", \"Erik\", \"Edgar\", \"Vernon\", \"Devin\", \"Gavin\", \"Jayden\", \"Chris\", \"Clyde\", \"Tom\", \"Derrick\", \"Mario\", \"Brent\", \"Marc\", \"Herman\", \"Chase\", \"Dominic\", \"Ricardo\", \"Franklin\", \"Maurice\", \"Max\", \"Aiden\", \"Owen\", \"Lester\", \"Gilbert\", \"Elmer\", \"Gene\", \"Francisco\", \"Glen\", \"Cory\", \"Garrett\", \"Clayton\", \"Sam\", \"Jorge\", \"Chester\", \"Alejandro\", \"Jeff\", \"Harvey\", \"Milton\", \"Cole\", \"Ivan\", \"Andre\", \"Duane\", \"Landon\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0163\n                \"it\": [\"Adolfo\", \"Alberto\", \"Aldo\", \"Alessandro\", \"Alessio\", \"Alfredo\", \"Alvaro\", \"Andrea\", \"Angelo\", \"Angiolo\", \"Antonino\", \"Antonio\", \"Attilio\", \"Benito\", \"Bernardo\", \"Bruno\", \"Carlo\", \"Cesare\", \"Christian\", \"Claudio\", \"Corrado\", \"Cosimo\", \"Cristian\", \"Cristiano\", \"Daniele\", \"Dario\", \"David\", \"Davide\", \"Diego\", \"Dino\", \"Domenico\", \"Duccio\", \"Edoardo\", \"Elia\", \"Elio\", \"Emanuele\", \"Emiliano\", \"Emilio\", \"Enrico\", \"Enzo\", \"Ettore\", \"Fabio\", \"Fabrizio\", \"Federico\", \"Ferdinando\", \"Fernando\", \"Filippo\", \"Francesco\", \"Franco\", \"Gabriele\", \"Giacomo\", \"Giampaolo\", \"Giampiero\", \"Giancarlo\", \"Gianfranco\", \"Gianluca\", \"Gianmarco\", \"Gianni\", \"Gino\", \"Giorgio\", \"Giovanni\", \"Giuliano\", \"Giulio\", \"Giuseppe\", \"Graziano\", \"Gregorio\", \"Guido\", \"Iacopo\", \"Jacopo\", \"Lapo\", \"Leonardo\", \"Lorenzo\", \"Luca\", \"Luciano\", \"Luigi\", \"Manuel\", \"Marcello\", \"Marco\", \"Marino\", \"Mario\", \"Massimiliano\", \"Massimo\", \"Matteo\", \"Mattia\", \"Maurizio\", \"Mauro\", \"Michele\", \"Mirko\", \"Mohamed\", \"Nello\", \"Neri\", \"Niccolò\", \"Nicola\", \"Osvaldo\", \"Otello\", \"Paolo\", \"Pier Luigi\", \"Piero\", \"Pietro\", \"Raffaele\", \"Remo\", \"Renato\", \"Renzo\", \"Riccardo\", \"Roberto\", \"Rolando\", \"Romano\", \"Salvatore\", \"Samuele\", \"Sandro\", \"Sergio\", \"Silvano\", \"Simone\", \"Stefano\", \"Thomas\", \"Tommaso\", \"Ubaldo\", \"Ugo\", \"Umberto\", \"Valerio\", \"Valter\", \"Vasco\", \"Vincenzo\", \"Vittorio\"],\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n                \"nl\": [\"Aaron\",\"Abel\",\"Adam\",\"Adriaan\",\"Albert\",\"Alexander\",\"Ali\",\"Arjen\",\"Arno\",\"Bart\",\"Bas\",\"Bastiaan\",\"Benjamin\",\"Bob\", \"Boris\",\"Bram\",\"Brent\",\"Cas\",\"Casper\",\"Chris\",\"Christiaan\",\"Cornelis\",\"Daan\",\"Daley\",\"Damian\",\"Dani\",\"Daniel\",\"Daniël\",\"David\",\"Dean\",\"Dirk\",\"Dylan\",\"Egbert\",\"Elijah\",\"Erik\",\"Erwin\",\"Evert\",\"Ezra\",\"Fabian\",\"Fedde\",\"Finn\",\"Florian\",\"Floris\",\"Frank\",\"Frans\",\"Frederik\",\"Freek\",\"Geert\",\"Gerard\",\"Gerben\",\"Gerrit\",\"Gijs\",\"Guus\",\"Hans\",\"Hendrik\",\"Henk\",\"Herman\",\"Hidde\",\"Hugo\",\"Jaap\",\"Jan Jaap\",\"Jan-Willem\",\"Jack\",\"Jacob\",\"Jan\",\"Jason\",\"Jasper\",\"Jayden\",\"Jelle\",\"Jelte\",\"Jens\",\"Jeroen\",\"Jesse\",\"Jim\",\"Job\",\"Joep\",\"Johannes\",\"John\",\"Jonathan\",\"Joris\",\"Joshua\",\"Joël\",\"Julian\",\"Kees\",\"Kevin\",\"Koen\",\"Lars\",\"Laurens\",\"Leendert\",\"Lennard\",\"Lodewijk\",\"Luc\",\"Luca\",\"Lucas\",\"Lukas\",\"Luuk\",\"Maarten\",\"Marcus\",\"Martijn\",\"Martin\",\"Matthijs\",\"Maurits\",\"Max\",\"Mees\",\"Melle\",\"Mick\",\"Mika\",\"Milan\",\"Mohamed\",\"Mohammed\",\"Morris\",\"Muhammed\",\"Nathan\",\"Nick\",\"Nico\",\"Niek\",\"Niels\",\"Noah\",\"Noud\",\"Olivier\",\"Oscar\",\"Owen\",\"Paul\",\"Pepijn\",\"Peter\",\"Pieter\",\"Pim\",\"Quinten\",\"Reinier\",\"Rens\",\"Robin\",\"Ruben\",\"Sam\",\"Samuel\",\"Sander\",\"Sebastiaan\",\"Sem\",\"Sep\",\"Sepp\",\"Siem\",\"Simon\",\"Stan\",\"Stef\",\"Steven\",\"Stijn\",\"Sven\",\"Teun\",\"Thijmen\",\"Thijs\",\"Thomas\",\"Tijn\",\"Tim\",\"Timo\",\"Tobias\",\"Tom\",\"Victor\",\"Vince\",\"Willem\",\"Wim\",\"Wouter\",\"Yusuf\"],\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n                \"fr\": [\"Aaron\",\"Abdon\",\"Abel\",\"Abélard\",\"Abelin\",\"Abondance\",\"Abraham\",\"Absalon\",\"Acace\",\"Achaire\",\"Achille\",\"Adalard\",\"Adalbald\",\"Adalbéron\",\"Adalbert\",\"Adalric\",\"Adam\",\"Adegrin\",\"Adel\",\"Adelin\",\"Andelin\",\"Adelphe\",\"Adam\",\"Adéodat\",\"Adhémar\",\"Adjutor\",\"Adolphe\",\"Adonis\",\"Adon\",\"Adrien\",\"Agapet\",\"Agathange\",\"Agathon\",\"Agilbert\",\"Agénor\",\"Agnan\",\"Aignan\",\"Agrippin\",\"Aimable\",\"Aimé\",\"Alain\",\"Alban\",\"Albin\",\"Aubin\",\"Albéric\",\"Albert\",\"Albertet\",\"Alcibiade\",\"Alcide\",\"Alcée\",\"Alcime\",\"Aldonce\",\"Aldric\",\"Aldéric\",\"Aleaume\",\"Alexandre\",\"Alexis\",\"Alix\",\"Alliaume\",\"Aleaume\",\"Almine\",\"Almire\",\"Aloïs\",\"Alphée\",\"Alphonse\",\"Alpinien\",\"Alverède\",\"Amalric\",\"Amaury\",\"Amandin\",\"Amant\",\"Ambroise\",\"Amédée\",\"Amélien\",\"Amiel\",\"Amour\",\"Anaël\",\"Anastase\",\"Anatole\",\"Ancelin\",\"Andéol\",\"Andoche\",\"André\",\"Andoche\",\"Ange\",\"Angelin\",\"Angilbe\",\"Anglebert\",\"Angoustan\",\"Anicet\",\"Anne\",\"Annibal\",\"Ansbert\",\"Anselme\",\"Anthelme\",\"Antheaume\",\"Anthime\",\"Antide\",\"Antoine\",\"Antonius\",\"Antonin\",\"Apollinaire\",\"Apollon\",\"Aquilin\",\"Arcade\",\"Archambaud\",\"Archambeau\",\"Archange\",\"Archibald\",\"Arian\",\"Ariel\",\"Ariste\",\"Aristide\",\"Armand\",\"Armel\",\"Armin\",\"Arnould\",\"Arnaud\",\"Arolde\",\"Arsène\",\"Arsinoé\",\"Arthaud\",\"Arthème\",\"Arthur\",\"Ascelin\",\"Athanase\",\"Aubry\",\"Audebert\",\"Audouin\",\"Audran\",\"Audric\",\"Auguste\",\"Augustin\",\"Aurèle\",\"Aurélien\",\"Aurian\",\"Auxence\",\"Axel\",\"Aymard\",\"Aymeric\",\"Aymon\",\"Aymond\",\"Balthazar\",\"Baptiste\",\"Barnabé\",\"Barthélemy\",\"Bartimée\",\"Basile\",\"Bastien\",\"Baudouin\",\"Bénigne\",\"Benjamin\",\"Benoît\",\"Bérenger\",\"Bérard\",\"Bernard\",\"Bertrand\",\"Blaise\",\"Bon\",\"Boniface\",\"Bouchard\",\"Brice\",\"Brieuc\",\"Bruno\",\"Brunon\",\"Calixte\",\"Calliste\",\"Camélien\",\"Camille\",\"Camillien\",\"Candide\",\"Caribert\",\"Carloman\",\"Cassandre\",\"Cassien\",\"Cédric\",\"Céleste\",\"Célestin\",\"Célien\",\"Césaire\",\"César\",\"Charles\",\"Charlemagne\",\"Childebert\",\"Chilpéric\",\"Chrétien\",\"Christian\",\"Christodule\",\"Christophe\",\"Chrysostome\",\"Clarence\",\"Claude\",\"Claudien\",\"Cléandre\",\"Clément\",\"Clotaire\",\"Côme\",\"Constance\",\"Constant\",\"Constantin\",\"Corentin\",\"Cyprien\",\"Cyriaque\",\"Cyrille\",\"Cyril\",\"Damien\",\"Daniel\",\"David\",\"Delphin\",\"Denis\",\"Désiré\",\"Didier\",\"Dieudonné\",\"Dimitri\",\"Dominique\",\"Dorian\",\"Dorothée\",\"Edgard\",\"Edmond\",\"Édouard\",\"Éleuthère\",\"Élie\",\"Élisée\",\"Émeric\",\"Émile\",\"Émilien\",\"Emmanuel\",\"Enguerrand\",\"Épiphane\",\"Éric\",\"Esprit\",\"Ernest\",\"Étienne\",\"Eubert\",\"Eudes\",\"Eudoxe\",\"Eugène\",\"Eusèbe\",\"Eustache\",\"Évariste\",\"Évrard\",\"Fabien\",\"Fabrice\",\"Falba\",\"Félicité\",\"Félix\",\"Ferdinand\",\"Fiacre\",\"Fidèle\",\"Firmin\",\"Flavien\",\"Flodoard\",\"Florent\",\"Florentin\",\"Florestan\",\"Florian\",\"Fortuné\",\"Foulques\",\"Francisque\",\"François\",\"Français\",\"Franciscus\",\"Francs\",\"Frédéric\",\"Fulbert\",\"Fulcran\",\"Fulgence\",\"Gabin\",\"Gabriel\",\"Gaël\",\"Garnier\",\"Gaston\",\"Gaspard\",\"Gatien\",\"Gaud\",\"Gautier\",\"Gédéon\",\"Geoffroy\",\"Georges\",\"Géraud\",\"Gérard\",\"Gerbert\",\"Germain\",\"Gervais\",\"Ghislain\",\"Gilbert\",\"Gilles\",\"Girart\",\"Gislebert\",\"Gondebaud\",\"Gonthier\",\"Gontran\",\"Gonzague\",\"Grégoire\",\"Guérin\",\"Gui\",\"Guillaume\",\"Gustave\",\"Guy\",\"Guyot\",\"Hardouin\",\"Hector\",\"Hédelin\",\"Hélier\",\"Henri\",\"Herbert\",\"Herluin\",\"Hervé\",\"Hilaire\",\"Hildebert\",\"Hincmar\",\"Hippolyte\",\"Honoré\",\"Hubert\",\"Hugues\",\"Innocent\",\"Isabeau\",\"Isidore\",\"Jacques\",\"Japhet\",\"Jason\",\"Jean\",\"Jeannel\",\"Jeannot\",\"Jérémie\",\"Jérôme\",\"Joachim\",\"Joanny\",\"Job\",\"Jocelyn\",\"Joël\",\"Johan\",\"Jonas\",\"Jonathan\",\"Joseph\",\"Josse\",\"Josselin\",\"Jourdain\",\"Jude\",\"Judicaël\",\"Jules\",\"Julien\",\"Juste\",\"Justin\",\"Lambert\",\"Landry\",\"Laurent\",\"Lazare\",\"Léandre\",\"Léon\",\"Léonard\",\"Léopold\",\"Leu\",\"Loup\",\"Leufroy\",\"Libère\",\"Liétald\",\"Lionel\",\"Loïc\",\"Longin\",\"Lorrain\",\"Lorraine\",\"Lothaire\",\"Louis\",\"Loup\",\"Luc\",\"Lucas\",\"Lucien\",\"Ludolphe\",\"Ludovic\",\"Macaire\",\"Malo\",\"Mamert\",\"Manassé\",\"Marc\",\"Marceau\",\"Marcel\",\"Marcelin\",\"Marius\",\"Marseille\",\"Martial\",\"Martin\",\"Mathurin\",\"Matthias\",\"Mathias\",\"Matthieu\",\"Maugis\",\"Maurice\",\"Mauricet\",\"Maxence\",\"Maxime\",\"Maximilien\",\"Mayeul\",\"Médéric\",\"Melchior\",\"Mence\",\"Merlin\",\"Mérovée\",\"Michaël\",\"Michel\",\"Moïse\",\"Morgan\",\"Nathan\",\"Nathanaël\",\"Narcisse\",\"Néhémie\",\"Nestor\",\"Nestor\",\"Nicéphore\",\"Nicolas\",\"Noé\",\"Noël\",\"Norbert\",\"Normand\",\"Normands\",\"Octave\",\"Odilon\",\"Odon\",\"Oger\",\"Olivier\",\"Oury\",\"Pacôme\",\"Palémon\",\"Parfait\",\"Pascal\",\"Paterne\",\"Patrice\",\"Paul\",\"Pépin\",\"Perceval\",\"Philémon\",\"Philibert\",\"Philippe\",\"Philothée\",\"Pie\",\"Pierre\",\"Pierrick\",\"Prosper\",\"Quentin\",\"Raoul\",\"Raphaël\",\"Raymond\",\"Régis\",\"Réjean\",\"Rémi\",\"Renaud\",\"René\",\"Reybaud\",\"Richard\",\"Robert\",\"Roch\",\"Rodolphe\",\"Rodrigue\",\"Roger\",\"Roland\",\"Romain\",\"Romuald\",\"Roméo\",\"Rome\",\"Ronan\",\"Roselin\",\"Salomon\",\"Samuel\",\"Savin\",\"Savinien\",\"Scholastique\",\"Sébastien\",\"Séraphin\",\"Serge\",\"Séverin\",\"Sidoine\",\"Sigebert\",\"Sigismond\",\"Silvère\",\"Simon\",\"Siméon\",\"Sixte\",\"Stanislas\",\"Stéphane\",\"Stephan\",\"Sylvain\",\"Sylvestre\",\"Tancrède\",\"Tanguy\",\"Taurin\",\"Théodore\",\"Théodose\",\"Théophile\",\"Théophraste\",\"Thibault\",\"Thibert\",\"Thierry\",\"Thomas\",\"Timoléon\",\"Timothée\",\"Titien\",\"Tonnin\",\"Toussaint\",\"Trajan\",\"Tristan\",\"Turold\",\"Tim\",\"Ulysse\",\"Urbain\",\"Valentin\",\"Valère\",\"Valéry\",\"Venance\",\"Venant\",\"Venceslas\",\"Vianney\",\"Victor\",\"Victorien\",\"Victorin\",\"Vigile\",\"Vincent\",\"Vital\",\"Vitalien\",\"Vivien\",\"Waleran\",\"Wandrille\",\"Xavier\",\"Xénophon\",\"Yves\",\"Zacharie\",\"Zaché\",\"Zéphirin\"]\n            },\n\n            \"female\": {\n                \"en\": [\"Mary\", \"Emma\", \"Elizabeth\", \"Minnie\", \"Margaret\", \"Ida\", \"Alice\", \"Bertha\", \"Sarah\", \"Annie\", \"Clara\", \"Ella\", \"Florence\", \"Cora\", \"Martha\", \"Laura\", \"Nellie\", \"Grace\", \"Carrie\", \"Maude\", \"Mabel\", \"Bessie\", \"Jennie\", \"Gertrude\", \"Julia\", \"Hattie\", \"Edith\", \"Mattie\", \"Rose\", \"Catherine\", \"Lillian\", \"Ada\", \"Lillie\", \"Helen\", \"Jessie\", \"Louise\", \"Ethel\", \"Lula\", \"Myrtle\", \"Eva\", \"Frances\", \"Lena\", \"Lucy\", \"Edna\", \"Maggie\", \"Pearl\", \"Daisy\", \"Fannie\", \"Josephine\", \"Dora\", \"Rosa\", \"Katherine\", \"Agnes\", \"Marie\", \"Nora\", \"May\", \"Mamie\", \"Blanche\", \"Stella\", \"Ellen\", \"Nancy\", \"Effie\", \"Sallie\", \"Nettie\", \"Della\", \"Lizzie\", \"Flora\", \"Susie\", \"Maud\", \"Mae\", \"Etta\", \"Harriet\", \"Sadie\", \"Caroline\", \"Katie\", \"Lydia\", \"Elsie\", \"Kate\", \"Susan\", \"Mollie\", \"Alma\", \"Addie\", \"Georgia\", \"Eliza\", \"Lulu\", \"Nannie\", \"Lottie\", \"Amanda\", \"Belle\", \"Charlotte\", \"Rebecca\", \"Ruth\", \"Viola\", \"Olive\", \"Amelia\", \"Hannah\", \"Jane\", \"Virginia\", \"Emily\", \"Matilda\", \"Irene\", \"Kathryn\", \"Esther\", \"Willie\", \"Henrietta\", \"Ollie\", \"Amy\", \"Rachel\", \"Sara\", \"Estella\", \"Theresa\", \"Augusta\", \"Ora\", \"Pauline\", \"Josie\", \"Lola\", \"Sophia\", \"Leona\", \"Anne\", \"Mildred\", \"Ann\", \"Beulah\", \"Callie\", \"Lou\", \"Delia\", \"Eleanor\", \"Barbara\", \"Iva\", \"Louisa\", \"Maria\", \"Mayme\", \"Evelyn\", \"Estelle\", \"Nina\", \"Betty\", \"Marion\", \"Bettie\", \"Dorothy\", \"Luella\", \"Inez\", \"Lela\", \"Rosie\", \"Allie\", \"Millie\", \"Janie\", \"Cornelia\", \"Victoria\", \"Ruby\", \"Winifred\", \"Alta\", \"Celia\", \"Christine\", \"Beatrice\", \"Birdie\", \"Harriett\", \"Mable\", \"Myra\", \"Sophie\", \"Tillie\", \"Isabel\", \"Sylvia\", \"Carolyn\", \"Isabelle\", \"Leila\", \"Sally\", \"Ina\", \"Essie\", \"Bertie\", \"Nell\", \"Alberta\", \"Katharine\", \"Lora\", \"Rena\", \"Mina\", \"Rhoda\", \"Mathilda\", \"Abbie\", \"Eula\", \"Dollie\", \"Hettie\", \"Eunice\", \"Fanny\", \"Ola\", \"Lenora\", \"Adelaide\", \"Christina\", \"Lelia\", \"Nelle\", \"Sue\", \"Johanna\", \"Lilly\", \"Lucinda\", \"Minerva\", \"Lettie\", \"Roxie\", \"Cynthia\", \"Helena\", \"Hilda\", \"Hulda\", \"Bernice\", \"Genevieve\", \"Jean\", \"Cordelia\", \"Marian\", \"Francis\", \"Jeanette\", \"Adeline\", \"Gussie\", \"Leah\", \"Lois\", \"Lura\", \"Mittie\", \"Hallie\", \"Isabella\", \"Olga\", \"Phoebe\", \"Teresa\", \"Hester\", \"Lida\", \"Lina\", \"Winnie\", \"Claudia\", \"Marguerite\", \"Vera\", \"Cecelia\", \"Bess\", \"Emilie\", \"Rosetta\", \"Verna\", \"Myrtie\", \"Cecilia\", \"Elva\", \"Olivia\", \"Ophelia\", \"Georgie\", \"Elnora\", \"Violet\", \"Adele\", \"Lily\", \"Linnie\", \"Loretta\", \"Madge\", \"Polly\", \"Virgie\", \"Eugenia\", \"Lucile\", \"Lucille\", \"Mabelle\", \"Rosalie\"],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0162\n                \"it\": [\"Ada\", \"Adriana\", \"Alessandra\", \"Alessia\", \"Alice\", \"Angela\", \"Anna\", \"Anna Maria\", \"Annalisa\", \"Annita\", \"Annunziata\", \"Antonella\", \"Arianna\", \"Asia\", \"Assunta\", \"Aurora\", \"Barbara\", \"Beatrice\", \"Benedetta\", \"Bianca\", \"Bruna\", \"Camilla\", \"Carla\", \"Carlotta\", \"Carmela\", \"Carolina\", \"Caterina\", \"Catia\", \"Cecilia\", \"Chiara\", \"Cinzia\", \"Clara\", \"Claudia\", \"Costanza\", \"Cristina\", \"Daniela\", \"Debora\", \"Diletta\", \"Dina\", \"Donatella\", \"Elena\", \"Eleonora\", \"Elisa\", \"Elisabetta\", \"Emanuela\", \"Emma\", \"Eva\", \"Federica\", \"Fernanda\", \"Fiorella\", \"Fiorenza\", \"Flora\", \"Franca\", \"Francesca\", \"Gabriella\", \"Gaia\", \"Gemma\", \"Giada\", \"Gianna\", \"Gina\", \"Ginevra\", \"Giorgia\", \"Giovanna\", \"Giulia\", \"Giuliana\", \"Giuseppa\", \"Giuseppina\", \"Grazia\", \"Graziella\", \"Greta\", \"Ida\", \"Ilaria\", \"Ines\", \"Iolanda\", \"Irene\", \"Irma\", \"Isabella\", \"Jessica\", \"Laura\", \"Lea\", \"Letizia\", \"Licia\", \"Lidia\", \"Liliana\", \"Lina\", \"Linda\", \"Lisa\", \"Livia\", \"Loretta\", \"Luana\", \"Lucia\", \"Luciana\", \"Lucrezia\", \"Luisa\", \"Manuela\", \"Mara\", \"Marcella\", \"Margherita\", \"Maria\", \"Maria Cristina\", \"Maria Grazia\", \"Maria Luisa\", \"Maria Pia\", \"Maria Teresa\", \"Marina\", \"Marisa\", \"Marta\", \"Martina\", \"Marzia\", \"Matilde\", \"Melissa\", \"Michela\", \"Milena\", \"Mirella\", \"Monica\", \"Natalina\", \"Nella\", \"Nicoletta\", \"Noemi\", \"Olga\", \"Paola\", \"Patrizia\", \"Piera\", \"Pierina\", \"Raffaella\", \"Rebecca\", \"Renata\", \"Rina\", \"Rita\", \"Roberta\", \"Rosa\", \"Rosanna\", \"Rossana\", \"Rossella\", \"Sabrina\", \"Sandra\", \"Sara\", \"Serena\", \"Silvana\", \"Silvia\", \"Simona\", \"Simonetta\", \"Sofia\", \"Sonia\", \"Stefania\", \"Susanna\", \"Teresa\", \"Tina\", \"Tiziana\", \"Tosca\", \"Valentina\", \"Valeria\", \"Vanda\", \"Vanessa\", \"Vanna\", \"Vera\", \"Veronica\", \"Vilma\", \"Viola\", \"Virginia\", \"Vittoria\"],\n                // Data taken from http://www.svbkindernamen.nl/int/nl/kindernamen/index.html\n                \"nl\": [\"Ada\", \"Arianne\", \"Afke\", \"Amanda\", \"Amber\", \"Amy\", \"Aniek\", \"Anita\", \"Anja\", \"Anna\", \"Anne\", \"Annelies\", \"Annemarie\", \"Annette\", \"Anouk\", \"Astrid\", \"Aukje\", \"Barbara\", \"Bianca\", \"Carla\", \"Carlijn\", \"Carolien\", \"Chantal\", \"Charlotte\", \"Claudia\", \"Daniëlle\", \"Debora\", \"Diane\", \"Dora\", \"Eline\", \"Elise\", \"Ella\", \"Ellen\", \"Emma\", \"Esmee\", \"Evelien\", \"Esther\", \"Erica\", \"Eva\", \"Femke\", \"Fleur\", \"Floor\", \"Froukje\", \"Gea\", \"Gerda\", \"Hanna\", \"Hanneke\", \"Heleen\", \"Hilde\", \"Ilona\", \"Ina\", \"Inge\", \"Ingrid\", \"Iris\", \"Isabel\", \"Isabelle\", \"Janneke\", \"Jasmijn\", \"Jeanine\", \"Jennifer\", \"Jessica\", \"Johanna\", \"Joke\", \"Julia\", \"Julie\", \"Karen\", \"Karin\", \"Katja\", \"Kim\", \"Lara\", \"Laura\", \"Lena\", \"Lianne\", \"Lieke\", \"Lilian\", \"Linda\", \"Lisa\", \"Lisanne\", \"Lotte\", \"Louise\", \"Maaike\", \"Manon\", \"Marga\", \"Maria\", \"Marissa\", \"Marit\", \"Marjolein\", \"Martine\", \"Marleen\", \"Melissa\", \"Merel\", \"Miranda\", \"Michelle\", \"Mirjam\", \"Mirthe\", \"Naomi\", \"Natalie\", 'Nienke', \"Nina\", \"Noortje\", \"Olivia\", \"Patricia\", \"Paula\", \"Paulien\", \"Ramona\", \"Ria\", \"Rianne\", \"Roos\", \"Rosanne\", \"Ruth\", \"Sabrina\", \"Sandra\", \"Sanne\", \"Sara\", \"Saskia\", \"Silvia\", \"Sofia\", \"Sophie\", \"Sonja\", \"Suzanne\", \"Tamara\", \"Tess\", \"Tessa\", \"Tineke\", \"Valerie\", \"Vanessa\", \"Veerle\", \"Vera\", \"Victoria\", \"Wendy\", \"Willeke\", \"Yvonne\", \"Zoë\"],\n                // Data taken from https://fr.wikipedia.org/wiki/Liste_de_pr%C3%A9noms_fran%C3%A7ais_et_de_la_francophonie\n                \"fr\": [\"Abdon\",\"Abel\",\"Abigaëlle\",\"Abigaïl\",\"Acacius\",\"Acanthe\",\"Adalbert\",\"Adalsinde\",\"Adegrine\",\"Adélaïde\",\"Adèle\",\"Adélie\",\"Adeline\",\"Adeltrude\",\"Adolphe\",\"Adonis\",\"Adrastée\",\"Adrehilde\",\"Adrienne\",\"Agathe\",\"Agilbert\",\"Aglaé\",\"Aignan\",\"Agneflète\",\"Agnès\",\"Agrippine\",\"Aimé\",\"Alaine\",\"Alaïs\",\"Albane\",\"Albérade\",\"Alberte\",\"Alcide\",\"Alcine\",\"Alcyone\",\"Aldegonde\",\"Aleth\",\"Alexandrine\",\"Alexine\",\"Alice\",\"Aliénor\",\"Aliette\",\"Aline\",\"Alix\",\"Alizé\",\"Aloïse\",\"Aloyse\",\"Alphonsine\",\"Althée\",\"Amaliane\",\"Amalthée\",\"Amande\",\"Amandine\",\"Amant\",\"Amarande\",\"Amaranthe\",\"Amaryllis\",\"Ambre\",\"Ambroisie\",\"Amélie\",\"Améthyste\",\"Aminte\",\"Anaël\",\"Anaïs\",\"Anastasie\",\"Anatole\",\"Ancelin\",\"Andrée\",\"Anémone\",\"Angadrême\",\"Angèle\",\"Angeline\",\"Angélique\",\"Angilbert\",\"Anicet\",\"Annabelle\",\"Anne\",\"Annette\",\"Annick\",\"Annie\",\"Annonciade\",\"Ansbert\",\"Anstrudie\",\"Anthelme\",\"Antigone\",\"Antoinette\",\"Antonine\",\"Aphélie\",\"Apolline\",\"Apollonie\",\"Aquiline\",\"Arabelle\",\"Arcadie\",\"Archange\",\"Argine\",\"Ariane\",\"Aricie\",\"Ariel\",\"Arielle\",\"Arlette\",\"Armance\",\"Armande\",\"Armandine\",\"Armelle\",\"Armide\",\"Armelle\",\"Armin\",\"Arnaud\",\"Arsène\",\"Arsinoé\",\"Artémis\",\"Arthur\",\"Ascelin\",\"Ascension\",\"Assomption\",\"Astarté\",\"Astérie\",\"Astrée\",\"Astrid\",\"Athalie\",\"Athanasie\",\"Athina\",\"Aube\",\"Albert\",\"Aude\",\"Audrey\",\"Augustine\",\"Aure\",\"Aurélie\",\"Aurélien\",\"Aurèle\",\"Aurore\",\"Auxence\",\"Aveline\",\"Abigaëlle\",\"Avoye\",\"Axelle\",\"Aymard\",\"Azalée\",\"Adèle\",\"Adeline\",\"Barbe\",\"Basilisse\",\"Bathilde\",\"Béatrice\",\"Béatrix\",\"Bénédicte\",\"Bérengère\",\"Bernadette\",\"Berthe\",\"Bertille\",\"Beuve\",\"Blanche\",\"Blanc\",\"Blandine\",\"Brigitte\",\"Brune\",\"Brunehilde\",\"Callista\",\"Camille\",\"Capucine\",\"Carine\",\"Caroline\",\"Cassandre\",\"Catherine\",\"Cécile\",\"Céleste\",\"Célestine\",\"Céline\",\"Chantal\",\"Charlène\",\"Charline\",\"Charlotte\",\"Chloé\",\"Christelle\",\"Christiane\",\"Christine\",\"Claire\",\"Clara\",\"Claude\",\"Claudine\",\"Clarisse\",\"Clémence\",\"Clémentine\",\"Cléo\",\"Clio\",\"Clotilde\",\"Coline\",\"Conception\",\"Constance\",\"Coralie\",\"Coraline\",\"Corentine\",\"Corinne\",\"Cyrielle\",\"Daniel\",\"Daniel\",\"Daphné\",\"Débora\",\"Delphine\",\"Denise\",\"Diane\",\"Dieudonné\",\"Dominique\",\"Doriane\",\"Dorothée\",\"Douce\",\"Édith\",\"Edmée\",\"Éléonore\",\"Éliane\",\"Élia\",\"Éliette\",\"Élisabeth\",\"Élise\",\"Ella\",\"Élodie\",\"Éloïse\",\"Elsa\",\"Émeline\",\"Émérance\",\"Émérentienne\",\"Émérencie\",\"Émilie\",\"Emma\",\"Emmanuelle\",\"Emmelie\",\"Ernestine\",\"Esther\",\"Estelle\",\"Eudoxie\",\"Eugénie\",\"Eulalie\",\"Euphrasie\",\"Eusébie\",\"Évangéline\",\"Eva\",\"Ève\",\"Évelyne\",\"Fanny\",\"Fantine\",\"Faustine\",\"Félicie\",\"Fernande\",\"Flavie\",\"Fleur\",\"Flore\",\"Florence\",\"Florie\",\"Fortuné\",\"France\",\"Francia\",\"Françoise\",\"Francine\",\"Gabrielle\",\"Gaëlle\",\"Garance\",\"Geneviève\",\"Georgette\",\"Gerberge\",\"Germaine\",\"Gertrude\",\"Gisèle\",\"Guenièvre\",\"Guilhemine\",\"Guillemette\",\"Gustave\",\"Gwenael\",\"Hélène\",\"Héloïse\",\"Henriette\",\"Hermine\",\"Hermione\",\"Hippolyte\",\"Honorine\",\"Hortense\",\"Huguette\",\"Ines\",\"Irène\",\"Irina\",\"Iris\",\"Isabeau\",\"Isabelle\",\"Iseult\",\"Isolde\",\"Ismérie\",\"Jacinthe\",\"Jacqueline\",\"Jade\",\"Janine\",\"Jeanne\",\"Jocelyne\",\"Joëlle\",\"Joséphine\",\"Judith\",\"Julia\",\"Julie\",\"Jules\",\"Juliette\",\"Justine\",\"Katy\",\"Kathy\",\"Katie\",\"Laura\",\"Laure\",\"Laureline\",\"Laurence\",\"Laurene\",\"Lauriane\",\"Laurianne\",\"Laurine\",\"Léa\",\"Léna\",\"Léonie\",\"Léon\",\"Léontine\",\"Lorraine\",\"Lucie\",\"Lucienne\",\"Lucille\",\"Ludivine\",\"Lydie\",\"Lydie\",\"Megane\",\"Madeleine\",\"Magali\",\"Maguelone\",\"Mallaury\",\"Manon\",\"Marceline\",\"Margot\",\"Marguerite\",\"Marianne\",\"Marie\",\"Myriam\",\"Marie\",\"Marine\",\"Marion\",\"Marlène\",\"Marthe\",\"Martine\",\"Mathilde\",\"Maud\",\"Maureen\",\"Mauricette\",\"Maxime\",\"Mélanie\",\"Melissa\",\"Mélissandre\",\"Mélisande\",\"Mélodie\",\"Michel\",\"Micheline\",\"Mireille\",\"Miriam\",\"Moïse\",\"Monique\",\"Morgane\",\"Muriel\",\"Mylène\",\"Nadège\",\"Nadine\",\"Nathalie\",\"Nicole\",\"Nicolette\",\"Nine\",\"Noël\",\"Noémie\",\"Océane\",\"Odette\",\"Odile\",\"Olive\",\"Olivia\",\"Olympe\",\"Ombline\",\"Ombeline\",\"Ophélie\",\"Oriande\",\"Oriane\",\"Ozanne\",\"Pascale\",\"Pascaline\",\"Paule\",\"Paulette\",\"Pauline\",\"Priscille\",\"Prisca\",\"Prisque\",\"Pécine\",\"Pélagie\",\"Pénélope\",\"Perrine\",\"Pétronille\",\"Philippine\",\"Philomène\",\"Philothée\",\"Primerose\",\"Prudence\",\"Pulchérie\",\"Quentine\",\"Quiéta\",\"Quintia\",\"Quintilla\",\"Rachel\",\"Raphaëlle\",\"Raymonde\",\"Rebecca\",\"Régine\",\"Réjeanne\",\"René\",\"Rita\",\"Rita\",\"Rolande\",\"Romane\",\"Rosalie\",\"Rose\",\"Roseline\",\"Sabine\",\"Salomé\",\"Sandra\",\"Sandrine\",\"Sarah\",\"Ségolène\",\"Séverine\",\"Sibylle\",\"Simone\",\"Sixt\",\"Solange\",\"Soline\",\"Solène\",\"Sophie\",\"Stéphanie\",\"Suzanne\",\"Sylvain\",\"Sylvie\",\"Tatiana\",\"Thaïs\",\"Théodora\",\"Thérèse\",\"Tiphaine\",\"Ursule\",\"Valentine\",\"Valérie\",\"Véronique\",\"Victoire\",\"Victorine\",\"Vinciane\",\"Violette\",\"Virginie\",\"Viviane\",\"Xavière\",\"Yolande\",\"Ysaline\",\"Yvette\",\"Yvonne\",\"Zélie\",\"Zita\",\"Zoé\"]\n            }\n        },\n\n        lastNames: {\n            \"en\": ['Smith', 'Johnson', 'Williams', 'Jones', 'Brown', 'Davis', 'Miller', 'Wilson', 'Moore', 'Taylor', 'Anderson', 'Thomas', 'Jackson', 'White', 'Harris', 'Martin', 'Thompson', 'Garcia', 'Martinez', 'Robinson', 'Clark', 'Rodriguez', 'Lewis', 'Lee', 'Walker', 'Hall', 'Allen', 'Young', 'Hernandez', 'King', 'Wright', 'Lopez', 'Hill', 'Scott', 'Green', 'Adams', 'Baker', 'Gonzalez', 'Nelson', 'Carter', 'Mitchell', 'Perez', 'Roberts', 'Turner', 'Phillips', 'Campbell', 'Parker', 'Evans', 'Edwards', 'Collins', 'Stewart', 'Sanchez', 'Morris', 'Rogers', 'Reed', 'Cook', 'Morgan', 'Bell', 'Murphy', 'Bailey', 'Rivera', 'Cooper', 'Richardson', 'Cox', 'Howard', 'Ward', 'Torres', 'Peterson', 'Gray', 'Ramirez', 'James', 'Watson', 'Brooks', 'Kelly', 'Sanders', 'Price', 'Bennett', 'Wood', 'Barnes', 'Ross', 'Henderson', 'Coleman', 'Jenkins', 'Perry', 'Powell', 'Long', 'Patterson', 'Hughes', 'Flores', 'Washington', 'Butler', 'Simmons', 'Foster', 'Gonzales', 'Bryant', 'Alexander', 'Russell', 'Griffin', 'Diaz', 'Hayes', 'Myers', 'Ford', 'Hamilton', 'Graham', 'Sullivan', 'Wallace', 'Woods', 'Cole', 'West', 'Jordan', 'Owens', 'Reynolds', 'Fisher', 'Ellis', 'Harrison', 'Gibson', 'McDonald', 'Cruz', 'Marshall', 'Ortiz', 'Gomez', 'Murray', 'Freeman', 'Wells', 'Webb', 'Simpson', 'Stevens', 'Tucker', 'Porter', 'Hunter', 'Hicks', 'Crawford', 'Henry', 'Boyd', 'Mason', 'Morales', 'Kennedy', 'Warren', 'Dixon', 'Ramos', 'Reyes', 'Burns', 'Gordon', 'Shaw', 'Holmes', 'Rice', 'Robertson', 'Hunt', 'Black', 'Daniels', 'Palmer', 'Mills', 'Nichols', 'Grant', 'Knight', 'Ferguson', 'Rose', 'Stone', 'Hawkins', 'Dunn', 'Perkins', 'Hudson', 'Spencer', 'Gardner', 'Stephens', 'Payne', 'Pierce', 'Berry', 'Matthews', 'Arnold', 'Wagner', 'Willis', 'Ray', 'Watkins', 'Olson', 'Carroll', 'Duncan', 'Snyder', 'Hart', 'Cunningham', 'Bradley', 'Lane', 'Andrews', 'Ruiz', 'Harper', 'Fox', 'Riley', 'Armstrong', 'Carpenter', 'Weaver', 'Greene', 'Lawrence', 'Elliott', 'Chavez', 'Sims', 'Austin', 'Peters', 'Kelley', 'Franklin', 'Lawson', 'Fields', 'Gutierrez', 'Ryan', 'Schmidt', 'Carr', 'Vasquez', 'Castillo', 'Wheeler', 'Chapman', 'Oliver', 'Montgomery', 'Richards', 'Williamson', 'Johnston', 'Banks', 'Meyer', 'Bishop', 'McCoy', 'Howell', 'Alvarez', 'Morrison', 'Hansen', 'Fernandez', 'Garza', 'Harvey', 'Little', 'Burton', 'Stanley', 'Nguyen', 'George', 'Jacobs', 'Reid', 'Kim', 'Fuller', 'Lynch', 'Dean', 'Gilbert', 'Garrett', 'Romero', 'Welch', 'Larson', 'Frazier', 'Burke', 'Hanson', 'Day', 'Mendoza', 'Moreno', 'Bowman', 'Medina', 'Fowler', 'Brewer', 'Hoffman', 'Carlson', 'Silva', 'Pearson', 'Holland', 'Douglas', 'Fleming', 'Jensen', 'Vargas', 'Byrd', 'Davidson', 'Hopkins', 'May', 'Terry', 'Herrera', 'Wade', 'Soto', 'Walters', 'Curtis', 'Neal', 'Caldwell', 'Lowe', 'Jennings', 'Barnett', 'Graves', 'Jimenez', 'Horton', 'Shelton', 'Barrett', 'Obrien', 'Castro', 'Sutton', 'Gregory', 'McKinney', 'Lucas', 'Miles', 'Craig', 'Rodriquez', 'Chambers', 'Holt', 'Lambert', 'Fletcher', 'Watts', 'Bates', 'Hale', 'Rhodes', 'Pena', 'Beck', 'Newman', 'Haynes', 'McDaniel', 'Mendez', 'Bush', 'Vaughn', 'Parks', 'Dawson', 'Santiago', 'Norris', 'Hardy', 'Love', 'Steele', 'Curry', 'Powers', 'Schultz', 'Barker', 'Guzman', 'Page', 'Munoz', 'Ball', 'Keller', 'Chandler', 'Weber', 'Leonard', 'Walsh', 'Lyons', 'Ramsey', 'Wolfe', 'Schneider', 'Mullins', 'Benson', 'Sharp', 'Bowen', 'Daniel', 'Barber', 'Cummings', 'Hines', 'Baldwin', 'Griffith', 'Valdez', 'Hubbard', 'Salazar', 'Reeves', 'Warner', 'Stevenson', 'Burgess', 'Santos', 'Tate', 'Cross', 'Garner', 'Mann', 'Mack', 'Moss', 'Thornton', 'Dennis', 'McGee', 'Farmer', 'Delgado', 'Aguilar', 'Vega', 'Glover', 'Manning', 'Cohen', 'Harmon', 'Rodgers', 'Robbins', 'Newton', 'Todd', 'Blair', 'Higgins', 'Ingram', 'Reese', 'Cannon', 'Strickland', 'Townsend', 'Potter', 'Goodwin', 'Walton', 'Rowe', 'Hampton', 'Ortega', 'Patton', 'Swanson', 'Joseph', 'Francis', 'Goodman', 'Maldonado', 'Yates', 'Becker', 'Erickson', 'Hodges', 'Rios', 'Conner', 'Adkins', 'Webster', 'Norman', 'Malone', 'Hammond', 'Flowers', 'Cobb', 'Moody', 'Quinn', 'Blake', 'Maxwell', 'Pope', 'Floyd', 'Osborne', 'Paul', 'McCarthy', 'Guerrero', 'Lindsey', 'Estrada', 'Sandoval', 'Gibbs', 'Tyler', 'Gross', 'Fitzgerald', 'Stokes', 'Doyle', 'Sherman', 'Saunders', 'Wise', 'Colon', 'Gill', 'Alvarado', 'Greer', 'Padilla', 'Simon', 'Waters', 'Nunez', 'Ballard', 'Schwartz', 'McBride', 'Houston', 'Christensen', 'Klein', 'Pratt', 'Briggs', 'Parsons', 'McLaughlin', 'Zimmerman', 'French', 'Buchanan', 'Moran', 'Copeland', 'Roy', 'Pittman', 'Brady', 'McCormick', 'Holloway', 'Brock', 'Poole', 'Frank', 'Logan', 'Owen', 'Bass', 'Marsh', 'Drake', 'Wong', 'Jefferson', 'Park', 'Morton', 'Abbott', 'Sparks', 'Patrick', 'Norton', 'Huff', 'Clayton', 'Massey', 'Lloyd', 'Figueroa', 'Carson', 'Bowers', 'Roberson', 'Barton', 'Tran', 'Lamb', 'Harrington', 'Casey', 'Boone', 'Cortez', 'Clarke', 'Mathis', 'Singleton', 'Wilkins', 'Cain', 'Bryan', 'Underwood', 'Hogan', 'McKenzie', 'Collier', 'Luna', 'Phelps', 'McGuire', 'Allison', 'Bridges', 'Wilkerson', 'Nash', 'Summers', 'Atkins'],\n                // Data taken from http://www.dati.gov.it/dataset/comune-di-firenze_0164 (first 1000)\n            \"it\": [\"Acciai\", \"Aglietti\", \"Agostini\", \"Agresti\", \"Ahmed\", \"Aiazzi\", \"Albanese\", \"Alberti\", \"Alessi\", \"Alfani\", \"Alinari\", \"Alterini\", \"Amato\", \"Ammannati\", \"Ancillotti\", \"Andrei\", \"Andreini\", \"Andreoni\", \"Angeli\", \"Anichini\", \"Antonelli\", \"Antonini\", \"Arena\", \"Ariani\", \"Arnetoli\", \"Arrighi\", \"Baccani\", \"Baccetti\", \"Bacci\", \"Bacherini\", \"Badii\", \"Baggiani\", \"Baglioni\", \"Bagni\", \"Bagnoli\", \"Baldassini\", \"Baldi\", \"Baldini\", \"Ballerini\", \"Balli\", \"Ballini\", \"Balloni\", \"Bambi\", \"Banchi\", \"Bandinelli\", \"Bandini\", \"Bani\", \"Barbetti\", \"Barbieri\", \"Barchielli\", \"Bardazzi\", \"Bardelli\", \"Bardi\", \"Barducci\", \"Bargellini\", \"Bargiacchi\", \"Barni\", \"Baroncelli\", \"Baroncini\", \"Barone\", \"Baroni\", \"Baronti\", \"Bartalesi\", \"Bartoletti\", \"Bartoli\", \"Bartolini\", \"Bartoloni\", \"Bartolozzi\", \"Basagni\", \"Basile\", \"Bassi\", \"Batacchi\", \"Battaglia\", \"Battaglini\", \"Bausi\", \"Becagli\", \"Becattini\", \"Becchi\", \"Becucci\", \"Bellandi\", \"Bellesi\", \"Belli\", \"Bellini\", \"Bellucci\", \"Bencini\", \"Benedetti\", \"Benelli\", \"Beni\", \"Benini\", \"Bensi\", \"Benucci\", \"Benvenuti\", \"Berlincioni\", \"Bernacchioni\", \"Bernardi\", \"Bernardini\", \"Berni\", \"Bernini\", \"Bertelli\", \"Berti\", \"Bertini\", \"Bessi\", \"Betti\", \"Bettini\", \"Biagi\", \"Biagini\", \"Biagioni\", \"Biagiotti\", \"Biancalani\", \"Bianchi\", \"Bianchini\", \"Bianco\", \"Biffoli\", \"Bigazzi\", \"Bigi\", \"Biliotti\", \"Billi\", \"Binazzi\", \"Bindi\", \"Bini\", \"Biondi\", \"Bizzarri\", \"Bocci\", \"Bogani\", \"Bolognesi\", \"Bonaiuti\", \"Bonanni\", \"Bonciani\", \"Boncinelli\", \"Bondi\", \"Bonechi\", \"Bongini\", \"Boni\", \"Bonini\", \"Borchi\", \"Boretti\", \"Borghi\", \"Borghini\", \"Borgioli\", \"Borri\", \"Borselli\", \"Boschi\", \"Bottai\", \"Bracci\", \"Braccini\", \"Brandi\", \"Braschi\", \"Bravi\", \"Brazzini\", \"Breschi\", \"Brilli\", \"Brizzi\", \"Brogelli\", \"Brogi\", \"Brogioni\", \"Brunelli\", \"Brunetti\", \"Bruni\", \"Bruno\", \"Brunori\", \"Bruschi\", \"Bucci\", \"Bucciarelli\", \"Buccioni\", \"Bucelli\", \"Bulli\", \"Burberi\", \"Burchi\", \"Burgassi\", \"Burroni\", \"Bussotti\", \"Buti\", \"Caciolli\", \"Caiani\", \"Calabrese\", \"Calamai\", \"Calamandrei\", \"Caldini\", \"Calo'\", \"Calonaci\", \"Calosi\", \"Calvelli\", \"Cambi\", \"Camiciottoli\", \"Cammelli\", \"Cammilli\", \"Campolmi\", \"Cantini\", \"Capanni\", \"Capecchi\", \"Caponi\", \"Cappelletti\", \"Cappelli\", \"Cappellini\", \"Cappugi\", \"Capretti\", \"Caputo\", \"Carbone\", \"Carboni\", \"Cardini\", \"Carlesi\", \"Carletti\", \"Carli\", \"Caroti\", \"Carotti\", \"Carrai\", \"Carraresi\", \"Carta\", \"Caruso\", \"Casalini\", \"Casati\", \"Caselli\", \"Casini\", \"Castagnoli\", \"Castellani\", \"Castelli\", \"Castellucci\", \"Catalano\", \"Catarzi\", \"Catelani\", \"Cavaciocchi\", \"Cavallaro\", \"Cavallini\", \"Cavicchi\", \"Cavini\", \"Ceccarelli\", \"Ceccatelli\", \"Ceccherelli\", \"Ceccherini\", \"Cecchi\", \"Cecchini\", \"Cecconi\", \"Cei\", \"Cellai\", \"Celli\", \"Cellini\", \"Cencetti\", \"Ceni\", \"Cenni\", \"Cerbai\", \"Cesari\", \"Ceseri\", \"Checcacci\", \"Checchi\", \"Checcucci\", \"Cheli\", \"Chellini\", \"Chen\", \"Cheng\", \"Cherici\", \"Cherubini\", \"Chiaramonti\", \"Chiarantini\", \"Chiarelli\", \"Chiari\", \"Chiarini\", \"Chiarugi\", \"Chiavacci\", \"Chiesi\", \"Chimenti\", \"Chini\", \"Chirici\", \"Chiti\", \"Ciabatti\", \"Ciampi\", \"Cianchi\", \"Cianfanelli\", \"Cianferoni\", \"Ciani\", \"Ciapetti\", \"Ciappi\", \"Ciardi\", \"Ciatti\", \"Cicali\", \"Ciccone\", \"Cinelli\", \"Cini\", \"Ciobanu\", \"Ciolli\", \"Cioni\", \"Cipriani\", \"Cirillo\", \"Cirri\", \"Ciucchi\", \"Ciuffi\", \"Ciulli\", \"Ciullini\", \"Clemente\", \"Cocchi\", \"Cognome\", \"Coli\", \"Collini\", \"Colombo\", \"Colzi\", \"Comparini\", \"Conforti\", \"Consigli\", \"Conte\", \"Conti\", \"Contini\", \"Coppini\", \"Coppola\", \"Corsi\", \"Corsini\", \"Corti\", \"Cortini\", \"Cosi\", \"Costa\", \"Costantini\", \"Costantino\", \"Cozzi\", \"Cresci\", \"Crescioli\", \"Cresti\", \"Crini\", \"Curradi\", \"D'Agostino\", \"D'Alessandro\", \"D'Amico\", \"D'Angelo\", \"Daddi\", \"Dainelli\", \"Dallai\", \"Danti\", \"Davitti\", \"De Angelis\", \"De Luca\", \"De Marco\", \"De Rosa\", \"De Santis\", \"De Simone\", \"De Vita\", \"Degl'Innocenti\", \"Degli Innocenti\", \"Dei\", \"Del Lungo\", \"Del Re\", \"Di Marco\", \"Di Stefano\", \"Dini\", \"Diop\", \"Dobre\", \"Dolfi\", \"Donati\", \"Dondoli\", \"Dong\", \"Donnini\", \"Ducci\", \"Dumitru\", \"Ermini\", \"Esposito\", \"Evangelisti\", \"Fabbri\", \"Fabbrini\", \"Fabbrizzi\", \"Fabbroni\", \"Fabbrucci\", \"Fabiani\", \"Facchini\", \"Faggi\", \"Fagioli\", \"Failli\", \"Faini\", \"Falciani\", \"Falcini\", \"Falcone\", \"Fallani\", \"Falorni\", \"Falsini\", \"Falugiani\", \"Fancelli\", \"Fanelli\", \"Fanetti\", \"Fanfani\", \"Fani\", \"Fantappie'\", \"Fantechi\", \"Fanti\", \"Fantini\", \"Fantoni\", \"Farina\", \"Fattori\", \"Favilli\", \"Fedi\", \"Fei\", \"Ferrante\", \"Ferrara\", \"Ferrari\", \"Ferraro\", \"Ferretti\", \"Ferri\", \"Ferrini\", \"Ferroni\", \"Fiaschi\", \"Fibbi\", \"Fiesoli\", \"Filippi\", \"Filippini\", \"Fini\", \"Fioravanti\", \"Fiore\", \"Fiorentini\", \"Fiorini\", \"Fissi\", \"Focardi\", \"Foggi\", \"Fontana\", \"Fontanelli\", \"Fontani\", \"Forconi\", \"Formigli\", \"Forte\", \"Forti\", \"Fortini\", \"Fossati\", \"Fossi\", \"Francalanci\", \"Franceschi\", \"Franceschini\", \"Franchi\", \"Franchini\", \"Franci\", \"Francini\", \"Francioni\", \"Franco\", \"Frassineti\", \"Frati\", \"Fratini\", \"Frilli\", \"Frizzi\", \"Frosali\", \"Frosini\", \"Frullini\", \"Fusco\", \"Fusi\", \"Gabbrielli\", \"Gabellini\", \"Gagliardi\", \"Galanti\", \"Galardi\", \"Galeotti\", \"Galletti\", \"Galli\", \"Gallo\", \"Gallori\", \"Gambacciani\", \"Gargani\", \"Garofalo\", \"Garuglieri\", \"Gashi\", \"Gasperini\", \"Gatti\", \"Gelli\", \"Gensini\", \"Gentile\", \"Gentili\", \"Geri\", \"Gerini\", \"Gheri\", \"Ghini\", \"Giachetti\", \"Giachi\", \"Giacomelli\", \"Gianassi\", \"Giani\", \"Giannelli\", \"Giannetti\", \"Gianni\", \"Giannini\", \"Giannoni\", \"Giannotti\", \"Giannozzi\", \"Gigli\", \"Giordano\", \"Giorgetti\", \"Giorgi\", \"Giovacchini\", \"Giovannelli\", \"Giovannetti\", \"Giovannini\", \"Giovannoni\", \"Giuliani\", \"Giunti\", \"Giuntini\", \"Giusti\", \"Gonnelli\", \"Goretti\", \"Gori\", \"Gradi\", \"Gramigni\", \"Grassi\", \"Grasso\", \"Graziani\", \"Grazzini\", \"Greco\", \"Grifoni\", \"Grillo\", \"Grimaldi\", \"Grossi\", \"Gualtieri\", \"Guarducci\", \"Guarino\", \"Guarnieri\", \"Guasti\", \"Guerra\", \"Guerri\", \"Guerrini\", \"Guidi\", \"Guidotti\", \"He\", \"Hoxha\", \"Hu\", \"Huang\", \"Iandelli\", \"Ignesti\", \"Innocenti\", \"Jin\", \"La Rosa\", \"Lai\", \"Landi\", \"Landini\", \"Lanini\", \"Lapi\", \"Lapini\", \"Lari\", \"Lascialfari\", \"Lastrucci\", \"Latini\", \"Lazzeri\", \"Lazzerini\", \"Lelli\", \"Lenzi\", \"Leonardi\", \"Leoncini\", \"Leone\", \"Leoni\", \"Lepri\", \"Li\", \"Liao\", \"Lin\", \"Linari\", \"Lippi\", \"Lisi\", \"Livi\", \"Lombardi\", \"Lombardini\", \"Lombardo\", \"Longo\", \"Lopez\", \"Lorenzi\", \"Lorenzini\", \"Lorini\", \"Lotti\", \"Lu\", \"Lucchesi\", \"Lucherini\", \"Lunghi\", \"Lupi\", \"Madiai\", \"Maestrini\", \"Maffei\", \"Maggi\", \"Maggini\", \"Magherini\", \"Magini\", \"Magnani\", \"Magnelli\", \"Magni\", \"Magnolfi\", \"Magrini\", \"Malavolti\", \"Malevolti\", \"Manca\", \"Mancini\", \"Manetti\", \"Manfredi\", \"Mangani\", \"Mannelli\", \"Manni\", \"Mannini\", \"Mannucci\", \"Manuelli\", \"Manzini\", \"Marcelli\", \"Marchese\", \"Marchetti\", \"Marchi\", \"Marchiani\", \"Marchionni\", \"Marconi\", \"Marcucci\", \"Margheri\", \"Mari\", \"Mariani\", \"Marilli\", \"Marinai\", \"Marinari\", \"Marinelli\", \"Marini\", \"Marino\", \"Mariotti\", \"Marsili\", \"Martelli\", \"Martinelli\", \"Martini\", \"Martino\", \"Marzi\", \"Masi\", \"Masini\", \"Masoni\", \"Massai\", \"Materassi\", \"Mattei\", \"Matteini\", \"Matteucci\", \"Matteuzzi\", \"Mattioli\", \"Mattolini\", \"Matucci\", \"Mauro\", \"Mazzanti\", \"Mazzei\", \"Mazzetti\", \"Mazzi\", \"Mazzini\", \"Mazzocchi\", \"Mazzoli\", \"Mazzoni\", \"Mazzuoli\", \"Meacci\", \"Mecocci\", \"Meini\", \"Melani\", \"Mele\", \"Meli\", \"Mengoni\", \"Menichetti\", \"Meoni\", \"Merlini\", \"Messeri\", \"Messina\", \"Meucci\", \"Miccinesi\", \"Miceli\", \"Micheli\", \"Michelini\", \"Michelozzi\", \"Migliori\", \"Migliorini\", \"Milani\", \"Miniati\", \"Misuri\", \"Monaco\", \"Montagnani\", \"Montagni\", \"Montanari\", \"Montelatici\", \"Monti\", \"Montigiani\", \"Montini\", \"Morandi\", \"Morandini\", \"Morelli\", \"Moretti\", \"Morganti\", \"Mori\", \"Morini\", \"Moroni\", \"Morozzi\", \"Mugnai\", \"Mugnaini\", \"Mustafa\", \"Naldi\", \"Naldini\", \"Nannelli\", \"Nanni\", \"Nannini\", \"Nannucci\", \"Nardi\", \"Nardini\", \"Nardoni\", \"Natali\", \"Ndiaye\", \"Nencetti\", \"Nencini\", \"Nencioni\", \"Neri\", \"Nesi\", \"Nesti\", \"Niccolai\", \"Niccoli\", \"Niccolini\", \"Nigi\", \"Nistri\", \"Nocentini\", \"Noferini\", \"Novelli\", \"Nucci\", \"Nuti\", \"Nutini\", \"Oliva\", \"Olivieri\", \"Olmi\", \"Orlandi\", \"Orlandini\", \"Orlando\", \"Orsini\", \"Ortolani\", \"Ottanelli\", \"Pacciani\", \"Pace\", \"Paci\", \"Pacini\", \"Pagani\", \"Pagano\", \"Paggetti\", \"Pagliai\", \"Pagni\", \"Pagnini\", \"Paladini\", \"Palagi\", \"Palchetti\", \"Palloni\", \"Palmieri\", \"Palumbo\", \"Pampaloni\", \"Pancani\", \"Pandolfi\", \"Pandolfini\", \"Panerai\", \"Panichi\", \"Paoletti\", \"Paoli\", \"Paolini\", \"Papi\", \"Papini\", \"Papucci\", \"Parenti\", \"Parigi\", \"Parisi\", \"Parri\", \"Parrini\", \"Pasquini\", \"Passeri\", \"Pecchioli\", \"Pecorini\", \"Pellegrini\", \"Pepi\", \"Perini\", \"Perrone\", \"Peruzzi\", \"Pesci\", \"Pestelli\", \"Petri\", \"Petrini\", \"Petrucci\", \"Pettini\", \"Pezzati\", \"Pezzatini\", \"Piani\", \"Piazza\", \"Piazzesi\", \"Piazzini\", \"Piccardi\", \"Picchi\", \"Piccini\", \"Piccioli\", \"Pieraccini\", \"Pieraccioni\", \"Pieralli\", \"Pierattini\", \"Pieri\", \"Pierini\", \"Pieroni\", \"Pietrini\", \"Pini\", \"Pinna\", \"Pinto\", \"Pinzani\", \"Pinzauti\", \"Piras\", \"Pisani\", \"Pistolesi\", \"Poggesi\", \"Poggi\", \"Poggiali\", \"Poggiolini\", \"Poli\", \"Pollastri\", \"Porciani\", \"Pozzi\", \"Pratellesi\", \"Pratesi\", \"Prosperi\", \"Pruneti\", \"Pucci\", \"Puccini\", \"Puccioni\", \"Pugi\", \"Pugliese\", \"Puliti\", \"Querci\", \"Quercioli\", \"Raddi\", \"Radu\", \"Raffaelli\", \"Ragazzini\", \"Ranfagni\", \"Ranieri\", \"Rastrelli\", \"Raugei\", \"Raveggi\", \"Renai\", \"Renzi\", \"Rettori\", \"Ricci\", \"Ricciardi\", \"Ridi\", \"Ridolfi\", \"Rigacci\", \"Righi\", \"Righini\", \"Rinaldi\", \"Risaliti\", \"Ristori\", \"Rizzo\", \"Rocchi\", \"Rocchini\", \"Rogai\", \"Romagnoli\", \"Romanelli\", \"Romani\", \"Romano\", \"Romei\", \"Romeo\", \"Romiti\", \"Romoli\", \"Romolini\", \"Rontini\", \"Rosati\", \"Roselli\", \"Rosi\", \"Rossetti\", \"Rossi\", \"Rossini\", \"Rovai\", \"Ruggeri\", \"Ruggiero\", \"Russo\", \"Sabatini\", \"Saccardi\", \"Sacchetti\", \"Sacchi\", \"Sacco\", \"Salerno\", \"Salimbeni\", \"Salucci\", \"Salvadori\", \"Salvestrini\", \"Salvi\", \"Salvini\", \"Sanesi\", \"Sani\", \"Sanna\", \"Santi\", \"Santini\", \"Santoni\", \"Santoro\", \"Santucci\", \"Sardi\", \"Sarri\", \"Sarti\", \"Sassi\", \"Sbolci\", \"Scali\", \"Scarpelli\", \"Scarselli\", \"Scopetani\", \"Secci\", \"Selvi\", \"Senatori\", \"Senesi\", \"Serafini\", \"Sereni\", \"Serra\", \"Sestini\", \"Sguanci\", \"Sieni\", \"Signorini\", \"Silvestri\", \"Simoncini\", \"Simonetti\", \"Simoni\", \"Singh\", \"Sodi\", \"Soldi\", \"Somigli\", \"Sorbi\", \"Sorelli\", \"Sorrentino\", \"Sottili\", \"Spina\", \"Spinelli\", \"Staccioli\", \"Staderini\", \"Stefanelli\", \"Stefani\", \"Stefanini\", \"Stella\", \"Susini\", \"Tacchi\", \"Tacconi\", \"Taddei\", \"Tagliaferri\", \"Tamburini\", \"Tanganelli\", \"Tani\", \"Tanini\", \"Tapinassi\", \"Tarchi\", \"Tarchiani\", \"Targioni\", \"Tassi\", \"Tassini\", \"Tempesti\", \"Terzani\", \"Tesi\", \"Testa\", \"Testi\", \"Tilli\", \"Tinti\", \"Tirinnanzi\", \"Toccafondi\", \"Tofanari\", \"Tofani\", \"Tognaccini\", \"Tonelli\", \"Tonini\", \"Torelli\", \"Torrini\", \"Tosi\", \"Toti\", \"Tozzi\", \"Trambusti\", \"Trapani\", \"Tucci\", \"Turchi\", \"Ugolini\", \"Ulivi\", \"Valente\", \"Valenti\", \"Valentini\", \"Vangelisti\", \"Vanni\", \"Vannini\", \"Vannoni\", \"Vannozzi\", \"Vannucchi\", \"Vannucci\", \"Ventura\", \"Venturi\", \"Venturini\", \"Vestri\", \"Vettori\", \"Vichi\", \"Viciani\", \"Vieri\", \"Vigiani\", \"Vignoli\", \"Vignolini\", \"Vignozzi\", \"Villani\", \"Vinci\", \"Visani\", \"Vitale\", \"Vitali\", \"Viti\", \"Viviani\", \"Vivoli\", \"Volpe\", \"Volpi\", \"Wang\", \"Wu\", \"Xu\", \"Yang\", \"Ye\", \"Zagli\", \"Zani\", \"Zanieri\", \"Zanobini\", \"Zecchi\", \"Zetti\", \"Zhang\", \"Zheng\", \"Zhou\", \"Zhu\", \"Zingoni\", \"Zini\", \"Zoppi\"],\n            // http://www.voornamelijk.nl/meest-voorkomende-achternamen-in-nederland-en-amsterdam/\n            \"nl\":[\"Albers\", \"Alblas\", \"Appelman\", \"Baars\", \"Baas\", \"Bakker\", \"Blank\", \"Bleeker\", \"Blok\", \"Blom\", \"Boer\", \"Boers\", \"Boldewijn\", \"Boon\", \"Boot\", \"Bos\", \"Bosch\", \"Bosma\", \"Bosman\", \"Bouma\", \"Bouman\", \"Bouwman\", \"Brands\", \"Brouwer\", \"Burger\", \"Buijs\", \"Buitenhuis\", \"Ceder\", \"Cohen\", \"Dekker\", \"Dekkers\", \"Dijkman\", \"Dijkstra\", \"Driessen\", \"Drost\", \"Engel\", \"Evers\", \"Faber\", \"Franke\", \"Gerritsen\", \"Goedhart\", \"Goossens\", \"Groen\", \"Groenenberg\", \"Groot\", \"Haan\", \"Hart\", \"Heemskerk\", \"Hendriks\", \"Hermans\", \"Hoekstra\", \"Hofman\", \"Hopman\", \"Huisman\", \"Jacobs\", \"Jansen\", \"Janssen\", \"Jonker\", \"Jaspers\", \"Keijzer\", \"Klaassen\", \"Klein\", \"Koek\", \"Koenders\", \"Kok\", \"Kool\", \"Koopman\", \"Koopmans\", \"Koning\", \"Koster\", \"Kramer\", \"Kroon\", \"Kuijpers\", \"Kuiper\", \"Kuipers\", \"Kurt\", \"Koster\", \"Kwakman\", \"Los\", \"Lubbers\", \"Maas\", \"Markus\", \"Martens\", \"Meijer\", \"Mol\", \"Molenaar\", \"Mulder\", \"Nieuwenhuis\", \"Peeters\", \"Peters\", \"Pengel\", \"Pieters\", \"Pool\", \"Post\", \"Postma\", \"Prins\", \"Pronk\", \"Reijnders\", \"Rietveld\", \"Roest\", \"Roos\", \"Sanders\", \"Schaap\", \"Scheffer\", \"Schenk\", \"Schilder\", \"Schipper\", \"Schmidt\", \"Scholten\", \"Schouten\", \"Schut\", \"Schutte\", \"Schuurman\", \"Simons\", \"Smeets\", \"Smit\", \"Smits\", \"Snel\", \"Swinkels\", \"Tas\", \"Terpstra\", \"Timmermans\", \"Tol\", \"Tromp\", \"Troost\", \"Valk\", \"Veenstra\", \"Veldkamp\", \"Verbeek\", \"Verheul\", \"Verhoeven\", \"Vermeer\", \"Vermeulen\", \"Verweij\", \"Vink\", \"Visser\", \"Voorn\", \"Vos\", \"Wagenaar\", \"Wiersema\", \"Willems\", \"Willemsen\", \"Witteveen\", \"Wolff\", \"Wolters\", \"Zijlstra\", \"Zwart\", \"de Beer\", \"de Boer\", \"de Bruijn\", \"de Bruin\", \"de Graaf\", \"de Groot\", \"de Haan\", \"de Haas\", \"de Jager\", \"de Jong\", \"de Jonge\", \"de Koning\", \"de Lange\", \"de Leeuw\", \"de Ridder\", \"de Rooij\", \"de Ruiter\", \"de Vos\", \"de Vries\", \"de Waal\", \"de Wit\", \"de Zwart\", \"van Beek\", \"van Boven\", \"van Dam\", \"van Dijk\", \"van Dongen\", \"van Doorn\", \"van Egmond\", \"van Eijk\", \"van Es\", \"van Gelder\", \"van Gelderen\", \"van Houten\", \"van Hulst\", \"van Kempen\", \"van Kesteren\", \"van Leeuwen\", \"van Loon\", \"van Mill\", \"van Noord\", \"van Ommen\", \"van Ommeren\", \"van Oosten\", \"van Oostveen\", \"van Rijn\", \"van Schaik\", \"van Veen\", \"van Vliet\", \"van Wijk\", \"van Wijngaarden\", \"van den Poel\", \"van de Pol\", \"van den Ploeg\", \"van de Ven\", \"van den Berg\", \"van den Bosch\", \"van den Brink\", \"van den Broek\", \"van den Heuvel\", \"van der Heijden\", \"van der Horst\", \"van der Hulst\", \"van der Kroon\", \"van der Laan\", \"van der Linden\", \"van der Meer\", \"van der Meij\", \"van der Meulen\", \"van der Molen\", \"van der Sluis\", \"van der Spek\", \"van der Veen\", \"van der Velde\", \"van der Velden\", \"van der Vliet\", \"van der Wal\"],\n            // https://surnames.behindthename.com/top/lists/england-wales/1991\n            \"uk\":[\"Smith\",\"Jones\",\"Williams\",\"Taylor\",\"Brown\",\"Davies\",\"Evans\",\"Wilson\",\"Thomas\",\"Johnson\",\"Roberts\",\"Robinson\",\"Thompson\",\"Wright\",\"Walker\",\"White\",\"Edwards\",\"Hughes\",\"Green\",\"Hall\",\"Lewis\",\"Harris\",\"Clarke\",\"Patel\",\"Jackson\",\"Wood\",\"Turner\",\"Martin\",\"Cooper\",\"Hill\",\"Ward\",\"Morris\",\"Moore\",\"Clark\",\"Lee\",\"King\",\"Baker\",\"Harrison\",\"Morgan\",\"Allen\",\"James\",\"Scott\",\"Phillips\",\"Watson\",\"Davis\",\"Parker\",\"Price\",\"Bennett\",\"Young\",\"Griffiths\",\"Mitchell\",\"Kelly\",\"Cook\",\"Carter\",\"Richardson\",\"Bailey\",\"Collins\",\"Bell\",\"Shaw\",\"Murphy\",\"Miller\",\"Cox\",\"Richards\",\"Khan\",\"Marshall\",\"Anderson\",\"Simpson\",\"Ellis\",\"Adams\",\"Singh\",\"Begum\",\"Wilkinson\",\"Foster\",\"Chapman\",\"Powell\",\"Webb\",\"Rogers\",\"Gray\",\"Mason\",\"Ali\",\"Hunt\",\"Hussain\",\"Campbell\",\"Matthews\",\"Owen\",\"Palmer\",\"Holmes\",\"Mills\",\"Barnes\",\"Knight\",\"Lloyd\",\"Butler\",\"Russell\",\"Barker\",\"Fisher\",\"Stevens\",\"Jenkins\",\"Murray\",\"Dixon\",\"Harvey\",\"Graham\",\"Pearson\",\"Ahmed\",\"Fletcher\",\"Walsh\",\"Kaur\",\"Gibson\",\"Howard\",\"Andrews\",\"Stewart\",\"Elliott\",\"Reynolds\",\"Saunders\",\"Payne\",\"Fox\",\"Ford\",\"Pearce\",\"Day\",\"Brooks\",\"West\",\"Lawrence\",\"Cole\",\"Atkinson\",\"Bradley\",\"Spencer\",\"Gill\",\"Dawson\",\"Ball\",\"Burton\",\"O'brien\",\"Watts\",\"Rose\",\"Booth\",\"Perry\",\"Ryan\",\"Grant\",\"Wells\",\"Armstrong\",\"Francis\",\"Rees\",\"Hayes\",\"Hart\",\"Hudson\",\"Newman\",\"Barrett\",\"Webster\",\"Hunter\",\"Gregory\",\"Carr\",\"Lowe\",\"Page\",\"Marsh\",\"Riley\",\"Dunn\",\"Woods\",\"Parsons\",\"Berry\",\"Stone\",\"Reid\",\"Holland\",\"Hawkins\",\"Harding\",\"Porter\",\"Robertson\",\"Newton\",\"Oliver\",\"Reed\",\"Kennedy\",\"Williamson\",\"Bird\",\"Gardner\",\"Shah\",\"Dean\",\"Lane\",\"Cooke\",\"Bates\",\"Henderson\",\"Parry\",\"Burgess\",\"Bishop\",\"Walton\",\"Burns\",\"Nicholson\",\"Shepherd\",\"Ross\",\"Cross\",\"Long\",\"Freeman\",\"Warren\",\"Nicholls\",\"Hamilton\",\"Byrne\",\"Sutton\",\"Mcdonald\",\"Yates\",\"Hodgson\",\"Robson\",\"Curtis\",\"Hopkins\",\"O'connor\",\"Harper\",\"Coleman\",\"Watkins\",\"Moss\",\"Mccarthy\",\"Chambers\",\"O'neill\",\"Griffin\",\"Sharp\",\"Hardy\",\"Wheeler\",\"Potter\",\"Osborne\",\"Johnston\",\"Gordon\",\"Doyle\",\"Wallace\",\"George\",\"Jordan\",\"Hutchinson\",\"Rowe\",\"Burke\",\"May\",\"Pritchard\",\"Gilbert\",\"Willis\",\"Higgins\",\"Read\",\"Miles\",\"Stevenson\",\"Stephenson\",\"Hammond\",\"Arnold\",\"Buckley\",\"Walters\",\"Hewitt\",\"Barber\",\"Nelson\",\"Slater\",\"Austin\",\"Sullivan\",\"Whitehead\",\"Mann\",\"Frost\",\"Lambert\",\"Stephens\",\"Blake\",\"Akhtar\",\"Lynch\",\"Goodwin\",\"Barton\",\"Woodward\",\"Thomson\",\"Cunningham\",\"Quinn\",\"Barnett\",\"Baxter\",\"Bibi\",\"Clayton\",\"Nash\",\"Greenwood\",\"Jennings\",\"Holt\",\"Kemp\",\"Poole\",\"Gallagher\",\"Bond\",\"Stokes\",\"Tucker\",\"Davidson\",\"Fowler\",\"Heath\",\"Norman\",\"Middleton\",\"Lawson\",\"Banks\",\"French\",\"Stanley\",\"Jarvis\",\"Gibbs\",\"Ferguson\",\"Hayward\",\"Carroll\",\"Douglas\",\"Dickinson\",\"Todd\",\"Barlow\",\"Peters\",\"Lucas\",\"Knowles\",\"Hartley\",\"Miah\",\"Simmons\",\"Morton\",\"Alexander\",\"Field\",\"Morrison\",\"Norris\",\"Townsend\",\"Preston\",\"Hancock\",\"Thornton\",\"Baldwin\",\"Burrows\",\"Briggs\",\"Parkinson\",\"Reeves\",\"Macdonald\",\"Lamb\",\"Black\",\"Abbott\",\"Sanders\",\"Thorpe\",\"Holden\",\"Tomlinson\",\"Perkins\",\"Ashton\",\"Rhodes\",\"Fuller\",\"Howe\",\"Bryant\",\"Vaughan\",\"Dale\",\"Davey\",\"Weston\",\"Bartlett\",\"Whittaker\",\"Davison\",\"Kent\",\"Skinner\",\"Birch\",\"Morley\",\"Daniels\",\"Glover\",\"Howell\",\"Cartwright\",\"Pugh\",\"Humphreys\",\"Goddard\",\"Brennan\",\"Wall\",\"Kirby\",\"Bowen\",\"Savage\",\"Bull\",\"Wong\",\"Dobson\",\"Smart\",\"Wilkins\",\"Kirk\",\"Fraser\",\"Duffy\",\"Hicks\",\"Patterson\",\"Bradshaw\",\"Little\",\"Archer\",\"Warner\",\"Waters\",\"O'sullivan\",\"Farrell\",\"Brookes\",\"Atkins\",\"Kay\",\"Dodd\",\"Bentley\",\"Flynn\",\"John\",\"Schofield\",\"Short\",\"Haynes\",\"Wade\",\"Butcher\",\"Henry\",\"Sanderson\",\"Crawford\",\"Sheppard\",\"Bolton\",\"Coates\",\"Giles\",\"Gould\",\"Houghton\",\"Gibbons\",\"Pratt\",\"Manning\",\"Law\",\"Hooper\",\"Noble\",\"Dyer\",\"Rahman\",\"Clements\",\"Moran\",\"Sykes\",\"Chan\",\"Doherty\",\"Connolly\",\"Joyce\",\"Franklin\",\"Hobbs\",\"Coles\",\"Herbert\",\"Steele\",\"Kerr\",\"Leach\",\"Winter\",\"Owens\",\"Duncan\",\"Naylor\",\"Fleming\",\"Horton\",\"Finch\",\"Fitzgerald\",\"Randall\",\"Carpenter\",\"Marsden\",\"Browne\",\"Garner\",\"Pickering\",\"Hale\",\"Dennis\",\"Vincent\",\"Chadwick\",\"Chandler\",\"Sharpe\",\"Nolan\",\"Lyons\",\"Hurst\",\"Collier\",\"Peacock\",\"Howarth\",\"Faulkner\",\"Rice\",\"Pollard\",\"Welch\",\"Norton\",\"Gough\",\"Sinclair\",\"Blackburn\",\"Bryan\",\"Conway\",\"Power\",\"Cameron\",\"Daly\",\"Allan\",\"Hanson\",\"Gardiner\",\"Boyle\",\"Myers\",\"Turnbull\",\"Wallis\",\"Mahmood\",\"Sims\",\"Swift\",\"Iqbal\",\"Pope\",\"Brady\",\"Chamberlain\",\"Rowley\",\"Tyler\",\"Farmer\",\"Metcalfe\",\"Hilton\",\"Godfrey\",\"Holloway\",\"Parkin\",\"Bray\",\"Talbot\",\"Donnelly\",\"Nixon\",\"Charlton\",\"Benson\",\"Whitehouse\",\"Barry\",\"Hope\",\"Lord\",\"North\",\"Storey\",\"Connor\",\"Potts\",\"Bevan\",\"Hargreaves\",\"Mclean\",\"Mistry\",\"Bruce\",\"Howells\",\"Hyde\",\"Parkes\",\"Wyatt\",\"Fry\",\"Lees\",\"O'donnell\",\"Craig\",\"Forster\",\"Mckenzie\",\"Humphries\",\"Mellor\",\"Carey\",\"Ingram\",\"Summers\",\"Leonard\"],\n            // https://surnames.behindthename.com/top/lists/germany/2017\n            \"de\": [\"Müller\",\"Schmidt\",\"Schneider\",\"Fischer\",\"Weber\",\"Meyer\",\"Wagner\",\"Becker\",\"Schulz\",\"Hoffmann\",\"Schäfer\",\"Koch\",\"Bauer\",\"Richter\",\"Klein\",\"Wolf\",\"Schröder\",\"Neumann\",\"Schwarz\",\"Zimmermann\",\"Braun\",\"Krüger\",\"Hofmann\",\"Hartmann\",\"Lange\",\"Schmitt\",\"Werner\",\"Schmitz\",\"Krause\",\"Meier\",\"Lehmann\",\"Schmid\",\"Schulze\",\"Maier\",\"Köhler\",\"Herrmann\",\"König\",\"Walter\",\"Mayer\",\"Huber\",\"Kaiser\",\"Fuchs\",\"Peters\",\"Lang\",\"Scholz\",\"Möller\",\"Weiß\",\"Jung\",\"Hahn\",\"Schubert\",\"Vogel\",\"Friedrich\",\"Keller\",\"Günther\",\"Frank\",\"Berger\",\"Winkler\",\"Roth\",\"Beck\",\"Lorenz\",\"Baumann\",\"Franke\",\"Albrecht\",\"Schuster\",\"Simon\",\"Ludwig\",\"Böhm\",\"Winter\",\"Kraus\",\"Martin\",\"Schumacher\",\"Krämer\",\"Vogt\",\"Stein\",\"Jäger\",\"Otto\",\"Sommer\",\"Groß\",\"Seidel\",\"Heinrich\",\"Brandt\",\"Haas\",\"Schreiber\",\"Graf\",\"Schulte\",\"Dietrich\",\"Ziegler\",\"Kuhn\",\"Kühn\",\"Pohl\",\"Engel\",\"Horn\",\"Busch\",\"Bergmann\",\"Thomas\",\"Voigt\",\"Sauer\",\"Arnold\",\"Wolff\",\"Pfeiffer\"],\n            // http://www.japantimes.co.jp/life/2009/10/11/lifestyle/japans-top-100-most-common-family-names/\n            \"jp\": [\"Sato\",\"Suzuki\",\"Takahashi\",\"Tanaka\",\"Watanabe\",\"Ito\",\"Yamamoto\",\"Nakamura\",\"Kobayashi\",\"Kato\",\"Yoshida\",\"Yamada\",\"Sasaki\",\"Yamaguchi\",\"Saito\",\"Matsumoto\",\"Inoue\",\"Kimura\",\"Hayashi\",\"Shimizu\",\"Yamazaki\",\"Mori\",\"Abe\",\"Ikeda\",\"Hashimoto\",\"Yamashita\",\"Ishikawa\",\"Nakajima\",\"Maeda\",\"Fujita\",\"Ogawa\",\"Goto\",\"Okada\",\"Hasegawa\",\"Murakami\",\"Kondo\",\"Ishii\",\"Saito\",\"Sakamoto\",\"Endo\",\"Aoki\",\"Fujii\",\"Nishimura\",\"Fukuda\",\"Ota\",\"Miura\",\"Fujiwara\",\"Okamoto\",\"Matsuda\",\"Nakagawa\",\"Nakano\",\"Harada\",\"Ono\",\"Tamura\",\"Takeuchi\",\"Kaneko\",\"Wada\",\"Nakayama\",\"Ishida\",\"Ueda\",\"Morita\",\"Hara\",\"Shibata\",\"Sakai\",\"Kudo\",\"Yokoyama\",\"Miyazaki\",\"Miyamoto\",\"Uchida\",\"Takagi\",\"Ando\",\"Taniguchi\",\"Ohno\",\"Maruyama\",\"Imai\",\"Takada\",\"Fujimoto\",\"Takeda\",\"Murata\",\"Ueno\",\"Sugiyama\",\"Masuda\",\"Sugawara\",\"Hirano\",\"Kojima\",\"Otsuka\",\"Chiba\",\"Kubo\",\"Matsui\",\"Iwasaki\",\"Sakurai\",\"Kinoshita\",\"Noguchi\",\"Matsuo\",\"Nomura\",\"Kikuchi\",\"Sano\",\"Onishi\",\"Sugimoto\",\"Arai\"],\n            // http://www.lowchensaustralia.com/names/popular-spanish-names.htm\n            \"es\": [\"Garcia\",\"Fernandez\",\"Lopez\",\"Martinez\",\"Gonzalez\",\"Rodriguez\",\"Sanchez\",\"Perez\",\"Martin\",\"Gomez\",\"Ruiz\",\"Diaz\",\"Hernandez\",\"Alvarez\",\"Jimenez\",\"Moreno\",\"Munoz\",\"Alonso\",\"Romero\",\"Navarro\",\"Gutierrez\",\"Torres\",\"Dominguez\",\"Gil\",\"Vazquez\",\"Blanco\",\"Serrano\",\"Ramos\",\"Castro\",\"Suarez\",\"Sanz\",\"Rubio\",\"Ortega\",\"Molina\",\"Delgado\",\"Ortiz\",\"Morales\",\"Ramirez\",\"Marin\",\"Iglesias\",\"Santos\",\"Castillo\",\"Garrido\",\"Calvo\",\"Pena\",\"Cruz\",\"Cano\",\"Nunez\",\"Prieto\",\"Diez\",\"Lozano\",\"Vidal\",\"Pascual\",\"Ferrer\",\"Medina\",\"Vega\",\"Leon\",\"Herrero\",\"Vicente\",\"Mendez\",\"Guerrero\",\"Fuentes\",\"Campos\",\"Nieto\",\"Cortes\",\"Caballero\",\"Ibanez\",\"Lorenzo\",\"Pastor\",\"Gimenez\",\"Saez\",\"Soler\",\"Marquez\",\"Carrasco\",\"Herrera\",\"Montero\",\"Arias\",\"Crespo\",\"Flores\",\"Andres\",\"Aguilar\",\"Hidalgo\",\"Cabrera\",\"Mora\",\"Duran\",\"Velasco\",\"Rey\",\"Pardo\",\"Roman\",\"Vila\",\"Bravo\",\"Merino\",\"Moya\",\"Soto\",\"Izquierdo\",\"Reyes\",\"Redondo\",\"Marcos\",\"Carmona\",\"Menendez\"],\n            // Data taken from https://fr.wikipedia.org/wiki/Liste_des_noms_de_famille_les_plus_courants_en_France\n            \"fr\": [\"Martin\",\"Bernard\",\"Thomas\",\"Petit\",\"Robert\",\"Richard\",\"Durand\",\"Dubois\",\"Moreau\",\"Laurent\",\"Simon\",\"Michel\",\"Lefèvre\",\"Leroy\",\"Roux\",\"David\",\"Bertrand\",\"Morel\",\"Fournier\",\"Girard\",\"Bonnet\",\"Dupont\",\"Lambert\",\"Fontaine\",\"Rousseau\",\"Vincent\",\"Müller\",\"Lefèvre\",\"Faure\",\"André\",\"Mercier\",\"Blanc\",\"Guérin\",\"Boyer\",\"Garnier\",\"Chevalier\",\"François\",\"Legrand\",\"Gauthier\",\"Garcia\",\"Perrin\",\"Robin\",\"Clément\",\"Morin\",\"Nicolas\",\"Henry\",\"Roussel\",\"Matthieu\",\"Gautier\",\"Masson\",\"Marchand\",\"Duval\",\"Denis\",\"Dumont\",\"Marie\",\"Lemaire\",\"Noël\",\"Meyer\",\"Dufour\",\"Meunier\",\"Brun\",\"Blanchard\",\"Giraud\",\"Joly\",\"Rivière\",\"Lucas\",\"Brunet\",\"Gaillard\",\"Barbier\",\"Arnaud\",\"Martínez\",\"Gérard\",\"Roche\",\"Renard\",\"Schmitt\",\"Roy\",\"Leroux\",\"Colin\",\"Vidal\",\"Caron\",\"Picard\",\"Roger\",\"Fabre\",\"Aubert\",\"Lemoine\",\"Renaud\",\"Dumas\",\"Lacroix\",\"Olivier\",\"Philippe\",\"Bourgeois\",\"Pierre\",\"Benoît\",\"Rey\",\"Leclerc\",\"Payet\",\"Rolland\",\"Leclercq\",\"Guillaume\",\"Lecomte\",\"López\",\"Jean\",\"Dupuy\",\"Guillot\",\"Hubert\",\"Berger\",\"Carpentier\",\"Sánchez\",\"Dupuis\",\"Moulin\",\"Louis\",\"Deschamps\",\"Huet\",\"Vasseur\",\"Perez\",\"Boucher\",\"Fleury\",\"Royer\",\"Klein\",\"Jacquet\",\"Adam\",\"Paris\",\"Poirier\",\"Marty\",\"Aubry\",\"Guyot\",\"Carré\",\"Charles\",\"Renault\",\"Charpentier\",\"Ménard\",\"Maillard\",\"Baron\",\"Bertin\",\"Bailly\",\"Hervé\",\"Schneider\",\"Fernández\",\"Le GallGall\",\"Collet\",\"Léger\",\"Bouvier\",\"Julien\",\"Prévost\",\"Millet\",\"Perrot\",\"Daniel\",\"Le RouxRoux\",\"Cousin\",\"Germain\",\"Breton\",\"Besson\",\"Langlois\",\"Rémi\",\"Le GoffGoff\",\"Pelletier\",\"Lévêque\",\"Perrier\",\"Leblanc\",\"Barré\",\"Lebrun\",\"Marchal\",\"Weber\",\"Mallet\",\"Hamon\",\"Boulanger\",\"Jacob\",\"Monnier\",\"Michaud\",\"Rodríguez\",\"Guichard\",\"Gillet\",\"Étienne\",\"Grondin\",\"Poulain\",\"Tessier\",\"Chevallier\",\"Collin\",\"Chauvin\",\"Da SilvaSilva\",\"Bouchet\",\"Gay\",\"Lemaître\",\"Bénard\",\"Maréchal\",\"Humbert\",\"Reynaud\",\"Antoine\",\"Hoarau\",\"Perret\",\"Barthélemy\",\"Cordier\",\"Pichon\",\"Lejeune\",\"Gilbert\",\"Lamy\",\"Delaunay\",\"Pasquier\",\"Carlier\",\"LaporteLaporte\"]\n        },\n\n        // Data taken from http://geoportal.statistics.gov.uk/datasets/ons-postcode-directory-latest-centroids\n        postcodeAreas: [{code: 'AB'}, {code: 'AL'}, {code: 'B'}, {code: 'BA'}, {code: 'BB'}, {code: 'BD'}, {code: 'BH'}, {code: 'BL'}, {code: 'BN'}, {code: 'BR'}, {code: 'BS'}, {code: 'BT'}, {code: 'CA'}, {code: 'CB'}, {code: 'CF'}, {code: 'CH'}, {code: 'CM'}, {code: 'CO'}, {code: 'CR'}, {code: 'CT'}, {code: 'CV'}, {code: 'CW'}, {code: 'DA'}, {code: 'DD'}, {code: 'DE'}, {code: 'DG'}, {code: 'DH'}, {code: 'DL'}, {code: 'DN'}, {code: 'DT'}, {code: 'DY'}, {code: 'E'}, {code: 'EC'}, {code: 'EH'}, {code: 'EN'}, {code: 'EX'}, {code: 'FK'}, {code: 'FY'}, {code: 'G'}, {code: 'GL'}, {code: 'GU'}, {code: 'GY'}, {code: 'HA'}, {code: 'HD'}, {code: 'HG'}, {code: 'HP'}, {code: 'HR'}, {code: 'HS'}, {code: 'HU'}, {code: 'HX'}, {code: 'IG'}, {code: 'IM'}, {code: 'IP'}, {code: 'IV'}, {code: 'JE'}, {code: 'KA'}, {code: 'KT'}, {code: 'KW'}, {code: 'KY'}, {code: 'L'}, {code: 'LA'}, {code: 'LD'}, {code: 'LE'}, {code: 'LL'}, {code: 'LN'}, {code: 'LS'}, {code: 'LU'}, {code: 'M'}, {code: 'ME'}, {code: 'MK'}, {code: 'ML'}, {code: 'N'}, {code: 'NE'}, {code: 'NG'}, {code: 'NN'}, {code: 'NP'}, {code: 'NR'}, {code: 'NW'}, {code: 'OL'}, {code: 'OX'}, {code: 'PA'}, {code: 'PE'}, {code: 'PH'}, {code: 'PL'}, {code: 'PO'}, {code: 'PR'}, {code: 'RG'}, {code: 'RH'}, {code: 'RM'}, {code: 'S'}, {code: 'SA'}, {code: 'SE'}, {code: 'SG'}, {code: 'SK'}, {code: 'SL'}, {code: 'SM'}, {code: 'SN'}, {code: 'SO'}, {code: 'SP'}, {code: 'SR'}, {code: 'SS'}, {code: 'ST'}, {code: 'SW'}, {code: 'SY'}, {code: 'TA'}, {code: 'TD'}, {code: 'TF'}, {code: 'TN'}, {code: 'TQ'}, {code: 'TR'}, {code: 'TS'}, {code: 'TW'}, {code: 'UB'}, {code: 'W'}, {code: 'WA'}, {code: 'WC'}, {code: 'WD'}, {code: 'WF'}, {code: 'WN'}, {code: 'WR'}, {code: 'WS'}, {code: 'WV'}, {code: 'YO'}, {code: 'ZE'}],\n\n        // Data taken from https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n        countries: [{\"name\":\"Afghanistan\",\"abbreviation\":\"AF\"},{\"name\":\"Åland Islands\",\"abbreviation\":\"AX\"},{\"name\":\"Albania\",\"abbreviation\":\"AL\"},{\"name\":\"Algeria\",\"abbreviation\":\"DZ\"},{\"name\":\"American Samoa\",\"abbreviation\":\"AS\"},{\"name\":\"Andorra\",\"abbreviation\":\"AD\"},{\"name\":\"Angola\",\"abbreviation\":\"AO\"},{\"name\":\"Anguilla\",\"abbreviation\":\"AI\"},{\"name\":\"Antarctica\",\"abbreviation\":\"AQ\"},{\"name\":\"Antigua and Barbuda\",\"abbreviation\":\"AG\"},{\"name\":\"Argentina\",\"abbreviation\":\"AR\"},{\"name\":\"Armenia\",\"abbreviation\":\"AM\"},{\"name\":\"Aruba\",\"abbreviation\":\"AW\"},{\"name\":\"Australia\",\"abbreviation\":\"AU\"},{\"name\":\"Austria\",\"abbreviation\":\"AT\"},{\"name\":\"Azerbaijan\",\"abbreviation\":\"AZ\"},{\"name\":\"Bahamas\",\"abbreviation\":\"BS\"},{\"name\":\"Bahrain\",\"abbreviation\":\"BH\"},{\"name\":\"Bangladesh\",\"abbreviation\":\"BD\"},{\"name\":\"Barbados\",\"abbreviation\":\"BB\"},{\"name\":\"Belarus\",\"abbreviation\":\"BY\"},{\"name\":\"Belgium\",\"abbreviation\":\"BE\"},{\"name\":\"Belize\",\"abbreviation\":\"BZ\"},{\"name\":\"Benin\",\"abbreviation\":\"BJ\"},{\"name\":\"Bermuda\",\"abbreviation\":\"BM\"},{\"name\":\"Bhutan\",\"abbreviation\":\"BT\"},{\"name\":\"Plurinational State of Bolivia\",\"abbreviation\":\"BO\"},{\"name\":\"Bonaire, Sint Eustatius and Saba\",\"abbreviation\":\"BQ\"},{\"name\":\"Bosnia and Herzegovina\",\"abbreviation\":\"BA\"},{\"name\":\"Botswana\",\"abbreviation\":\"BW\"},{\"name\":\"Bouvet Island\",\"abbreviation\":\"BV\"},{\"name\":\"Brazil\",\"abbreviation\":\"BR\"},{\"name\":\"British Indian Ocean Territory\",\"abbreviation\":\"IO\"},{\"name\":\"Brunei Darussalam\",\"abbreviation\":\"BN\"},{\"name\":\"Bulgaria\",\"abbreviation\":\"BG\"},{\"name\":\"Burkina Faso\",\"abbreviation\":\"BF\"},{\"name\":\"Burundi\",\"abbreviation\":\"BI\"},{\"name\":\"Cabo Verde\",\"abbreviation\":\"CV\"},{\"name\":\"Cambodia\",\"abbreviation\":\"KH\"},{\"name\":\"Cameroon\",\"abbreviation\":\"CM\"},{\"name\":\"Canada\",\"abbreviation\":\"CA\"},{\"name\":\"Cayman Islands\",\"abbreviation\":\"KY\"},{\"name\":\"Central African Republic\",\"abbreviation\":\"CF\"},{\"name\":\"Chad\",\"abbreviation\":\"TD\"},{\"name\":\"Chile\",\"abbreviation\":\"CL\"},{\"name\":\"China\",\"abbreviation\":\"CN\"},{\"name\":\"Christmas Island\",\"abbreviation\":\"CX\"},{\"name\":\"Cocos (Keeling) Islands\",\"abbreviation\":\"CC\"},{\"name\":\"Colombia\",\"abbreviation\":\"CO\"},{\"name\":\"Comoros\",\"abbreviation\":\"KM\"},{\"name\":\"Congo\",\"abbreviation\":\"CG\"},{\"name\":\"Democratic Republic of the Congo\",\"abbreviation\":\"CD\"},{\"name\":\"Cook Islands\",\"abbreviation\":\"CK\"},{\"name\":\"Costa Rica\",\"abbreviation\":\"CR\"},{\"name\":\"Côte d'Ivoire\",\"abbreviation\":\"CI\"},{\"name\":\"Croatia\",\"abbreviation\":\"HR\"},{\"name\":\"Cuba\",\"abbreviation\":\"CU\"},{\"name\":\"Curaçao\",\"abbreviation\":\"CW\"},{\"name\":\"Cyprus\",\"abbreviation\":\"CY\"},{\"name\":\"Czechia\",\"abbreviation\":\"CZ\"},{\"name\":\"Denmark\",\"abbreviation\":\"DK\"},{\"name\":\"Djibouti\",\"abbreviation\":\"DJ\"},{\"name\":\"Dominica\",\"abbreviation\":\"DM\"},{\"name\":\"Dominican Republic\",\"abbreviation\":\"DO\"},{\"name\":\"Ecuador\",\"abbreviation\":\"EC\"},{\"name\":\"Egypt\",\"abbreviation\":\"EG\"},{\"name\":\"El Salvador\",\"abbreviation\":\"SV\"},{\"name\":\"Equatorial Guinea\",\"abbreviation\":\"GQ\"},{\"name\":\"Eritrea\",\"abbreviation\":\"ER\"},{\"name\":\"Estonia\",\"abbreviation\":\"EE\"},{\"name\":\"Eswatini\",\"abbreviation\":\"SZ\"},{\"name\":\"Ethiopia\",\"abbreviation\":\"ET\"},{\"name\":\"Falkland Islands (Malvinas)\",\"abbreviation\":\"FK\"},{\"name\":\"Faroe Islands\",\"abbreviation\":\"FO\"},{\"name\":\"Fiji\",\"abbreviation\":\"FJ\"},{\"name\":\"Finland\",\"abbreviation\":\"FI\"},{\"name\":\"France\",\"abbreviation\":\"FR\"},{\"name\":\"French Guiana\",\"abbreviation\":\"GF\"},{\"name\":\"French Polynesia\",\"abbreviation\":\"PF\"},{\"name\":\"French Southern Territories\",\"abbreviation\":\"TF\"},{\"name\":\"Gabon\",\"abbreviation\":\"GA\"},{\"name\":\"Gambia\",\"abbreviation\":\"GM\"},{\"name\":\"Georgia\",\"abbreviation\":\"GE\"},{\"name\":\"Germany\",\"abbreviation\":\"DE\"},{\"name\":\"Ghana\",\"abbreviation\":\"GH\"},{\"name\":\"Gibraltar\",\"abbreviation\":\"GI\"},{\"name\":\"Greece\",\"abbreviation\":\"GR\"},{\"name\":\"Greenland\",\"abbreviation\":\"GL\"},{\"name\":\"Grenada\",\"abbreviation\":\"GD\"},{\"name\":\"Guadeloupe\",\"abbreviation\":\"GP\"},{\"name\":\"Guam\",\"abbreviation\":\"GU\"},{\"name\":\"Guatemala\",\"abbreviation\":\"GT\"},{\"name\":\"Guernsey\",\"abbreviation\":\"GG\"},{\"name\":\"Guinea\",\"abbreviation\":\"GN\"},{\"name\":\"Guinea-Bissau\",\"abbreviation\":\"GW\"},{\"name\":\"Guyana\",\"abbreviation\":\"GY\"},{\"name\":\"Haiti\",\"abbreviation\":\"HT\"},{\"name\":\"Heard Island and McDonald Islands\",\"abbreviation\":\"HM\"},{\"name\":\"Holy See\",\"abbreviation\":\"VA\"},{\"name\":\"Honduras\",\"abbreviation\":\"HN\"},{\"name\":\"Hong Kong\",\"abbreviation\":\"HK\"},{\"name\":\"Hungary\",\"abbreviation\":\"HU\"},{\"name\":\"Iceland\",\"abbreviation\":\"IS\"},{\"name\":\"India\",\"abbreviation\":\"IN\"},{\"name\":\"Indonesia\",\"abbreviation\":\"ID\"},{\"name\":\"Islamic Republic of Iran\",\"abbreviation\":\"IR\"},{\"name\":\"Iraq\",\"abbreviation\":\"IQ\"},{\"name\":\"Ireland\",\"abbreviation\":\"IE\"},{\"name\":\"Isle of Man\",\"abbreviation\":\"IM\"},{\"name\":\"Israel\",\"abbreviation\":\"IL\"},{\"name\":\"Italy\",\"abbreviation\":\"IT\"},{\"name\":\"Jamaica\",\"abbreviation\":\"JM\"},{\"name\":\"Japan\",\"abbreviation\":\"JP\"},{\"name\":\"Jersey\",\"abbreviation\":\"JE\"},{\"name\":\"Jordan\",\"abbreviation\":\"JO\"},{\"name\":\"Kazakhstan\",\"abbreviation\":\"KZ\"},{\"name\":\"Kenya\",\"abbreviation\":\"KE\"},{\"name\":\"Kiribati\",\"abbreviation\":\"KI\"},{\"name\":\"Democratic People's Republic of Korea\",\"abbreviation\":\"KP\"},{\"name\":\"Republic of Korea\",\"abbreviation\":\"KR\"},{\"name\":\"Kuwait\",\"abbreviation\":\"KW\"},{\"name\":\"Kyrgyzstan\",\"abbreviation\":\"KG\"},{\"name\":\"Lao People's Democratic Republic\",\"abbreviation\":\"LA\"},{\"name\":\"Latvia\",\"abbreviation\":\"LV\"},{\"name\":\"Lebanon\",\"abbreviation\":\"LB\"},{\"name\":\"Lesotho\",\"abbreviation\":\"LS\"},{\"name\":\"Liberia\",\"abbreviation\":\"LR\"},{\"name\":\"Libya\",\"abbreviation\":\"LY\"},{\"name\":\"Liechtenstein\",\"abbreviation\":\"LI\"},{\"name\":\"Lithuania\",\"abbreviation\":\"LT\"},{\"name\":\"Luxembourg\",\"abbreviation\":\"LU\"},{\"name\":\"Macao\",\"abbreviation\":\"MO\"},{\"name\":\"Madagascar\",\"abbreviation\":\"MG\"},{\"name\":\"Malawi\",\"abbreviation\":\"MW\"},{\"name\":\"Malaysia\",\"abbreviation\":\"MY\"},{\"name\":\"Maldives\",\"abbreviation\":\"MV\"},{\"name\":\"Mali\",\"abbreviation\":\"ML\"},{\"name\":\"Malta\",\"abbreviation\":\"MT\"},{\"name\":\"Marshall Islands\",\"abbreviation\":\"MH\"},{\"name\":\"Martinique\",\"abbreviation\":\"MQ\"},{\"name\":\"Mauritania\",\"abbreviation\":\"MR\"},{\"name\":\"Mauritius\",\"abbreviation\":\"MU\"},{\"name\":\"Mayotte\",\"abbreviation\":\"YT\"},{\"name\":\"Mexico\",\"abbreviation\":\"MX\"},{\"name\":\"Federated States of Micronesia\",\"abbreviation\":\"FM\"},{\"name\":\"Republic of Moldova\",\"abbreviation\":\"MD\"},{\"name\":\"Monaco\",\"abbreviation\":\"MC\"},{\"name\":\"Mongolia\",\"abbreviation\":\"MN\"},{\"name\":\"Montenegro\",\"abbreviation\":\"ME\"},{\"name\":\"Montserrat\",\"abbreviation\":\"MS\"},{\"name\":\"Morocco\",\"abbreviation\":\"MA\"},{\"name\":\"Mozambique\",\"abbreviation\":\"MZ\"},{\"name\":\"Myanmar\",\"abbreviation\":\"MM\"},{\"name\":\"Namibia\",\"abbreviation\":\"NA\"},{\"name\":\"Nauru\",\"abbreviation\":\"NR\"},{\"name\":\"Nepal\",\"abbreviation\":\"NP\"},{\"name\":\"Kingdom of the Netherlands\",\"abbreviation\":\"NL\"},{\"name\":\"New Caledonia\",\"abbreviation\":\"NC\"},{\"name\":\"New Zealand\",\"abbreviation\":\"NZ\"},{\"name\":\"Nicaragua\",\"abbreviation\":\"NI\"},{\"name\":\"Niger\",\"abbreviation\":\"NE\"},{\"name\":\"Nigeria\",\"abbreviation\":\"NG\"},{\"name\":\"Niue\",\"abbreviation\":\"NU\"},{\"name\":\"Norfolk Island\",\"abbreviation\":\"NF\"},{\"name\":\"North Macedonia\",\"abbreviation\":\"MK\"},{\"name\":\"Northern Mariana Islands\",\"abbreviation\":\"MP\"},{\"name\":\"Norway\",\"abbreviation\":\"NO\"},{\"name\":\"Oman\",\"abbreviation\":\"OM\"},{\"name\":\"Pakistan\",\"abbreviation\":\"PK\"},{\"name\":\"Palau\",\"abbreviation\":\"PW\"},{\"name\":\"State of Palestine\",\"abbreviation\":\"PS\"},{\"name\":\"Panama\",\"abbreviation\":\"PA\"},{\"name\":\"Papua New Guinea\",\"abbreviation\":\"PG\"},{\"name\":\"Paraguay\",\"abbreviation\":\"PY\"},{\"name\":\"Peru\",\"abbreviation\":\"PE\"},{\"name\":\"Philippines\",\"abbreviation\":\"PH\"},{\"name\":\"Pitcairn\",\"abbreviation\":\"PN\"},{\"name\":\"Poland\",\"abbreviation\":\"PL\"},{\"name\":\"Portugal\",\"abbreviation\":\"PT\"},{\"name\":\"Puerto Rico\",\"abbreviation\":\"PR\"},{\"name\":\"Qatar\",\"abbreviation\":\"QA\"},{\"name\":\"Réunion\",\"abbreviation\":\"RE\"},{\"name\":\"Romania\",\"abbreviation\":\"RO\"},{\"name\":\"Russian Federation\",\"abbreviation\":\"RU\"},{\"name\":\"Rwanda\",\"abbreviation\":\"RW\"},{\"name\":\"Saint Barthélemy\",\"abbreviation\":\"BL\"},{\"name\":\"Saint Helena, Ascension and Tristan da Cunha\",\"abbreviation\":\"SH\"},{\"name\":\"Saint Kitts and Nevis\",\"abbreviation\":\"KN\"},{\"name\":\"Saint Lucia\",\"abbreviation\":\"LC\"},{\"name\":\"Saint Martin (French part)\",\"abbreviation\":\"MF\"},{\"name\":\"Saint Pierre and Miquelon\",\"abbreviation\":\"PM\"},{\"name\":\"Saint Vincent and the Grenadines\",\"abbreviation\":\"VC\"},{\"name\":\"Samoa\",\"abbreviation\":\"WS\"},{\"name\":\"San Marino\",\"abbreviation\":\"SM\"},{\"name\":\"Sao Tome and Principe\",\"abbreviation\":\"ST\"},{\"name\":\"Saudi Arabia\",\"abbreviation\":\"SA\"},{\"name\":\"Senegal\",\"abbreviation\":\"SN\"},{\"name\":\"Serbia\",\"abbreviation\":\"RS\"},{\"name\":\"Seychelles\",\"abbreviation\":\"SC\"},{\"name\":\"Sierra Leone\",\"abbreviation\":\"SL\"},{\"name\":\"Singapore\",\"abbreviation\":\"SG\"},{\"name\":\"Sint Maarten (Dutch part)\",\"abbreviation\":\"SX\"},{\"name\":\"Slovakia\",\"abbreviation\":\"SK\"},{\"name\":\"Slovenia\",\"abbreviation\":\"SI\"},{\"name\":\"Solomon Islands\",\"abbreviation\":\"SB\"},{\"name\":\"Somalia\",\"abbreviation\":\"SO\"},{\"name\":\"South Africa\",\"abbreviation\":\"ZA\"},{\"name\":\"South Georgia and the South Sandwich Islands\",\"abbreviation\":\"GS\"},{\"name\":\"South Sudan\",\"abbreviation\":\"SS\"},{\"name\":\"Spain\",\"abbreviation\":\"ES\"},{\"name\":\"Sri Lanka\",\"abbreviation\":\"LK\"},{\"name\":\"Sudan\",\"abbreviation\":\"SD\"},{\"name\":\"Suriname\",\"abbreviation\":\"SR\"},{\"name\":\"Svalbard and Jan Mayen\",\"abbreviation\":\"SJ\"},{\"name\":\"Sweden\",\"abbreviation\":\"SE\"},{\"name\":\"Switzerland\",\"abbreviation\":\"CH\"},{\"name\":\"Syrian Arab Republic\",\"abbreviation\":\"SY\"},{\"name\":\"Taiwan, Province of China\",\"abbreviation\":\"TW\"},{\"name\":\"Tajikistan\",\"abbreviation\":\"TJ\"},{\"name\":\"United Republic of Tanzania\",\"abbreviation\":\"TZ\"},{\"name\":\"Thailand\",\"abbreviation\":\"TH\"},{\"name\":\"Timor-Leste\",\"abbreviation\":\"TL\"},{\"name\":\"Togo\",\"abbreviation\":\"TG\"},{\"name\":\"Tokelau\",\"abbreviation\":\"TK\"},{\"name\":\"Tonga\",\"abbreviation\":\"TO\"},{\"name\":\"Trinidad and Tobago\",\"abbreviation\":\"TT\"},{\"name\":\"Tunisia\",\"abbreviation\":\"TN\"},{\"name\":\"Türkiye\",\"abbreviation\":\"TR\"},{\"name\":\"Turkmenistan\",\"abbreviation\":\"TM\"},{\"name\":\"Turks and Caicos Islands\",\"abbreviation\":\"TC\"},{\"name\":\"Tuvalu\",\"abbreviation\":\"TV\"},{\"name\":\"Uganda\",\"abbreviation\":\"UG\"},{\"name\":\"Ukraine\",\"abbreviation\":\"UA\"},{\"name\":\"United Arab Emirates\",\"abbreviation\":\"AE\"},{\"name\":\"United Kingdom of Great Britain and Northern Ireland\",\"abbreviation\":\"GB\"},{\"name\":\"United States Minor Outlying Islands\",\"abbreviation\":\"UM\"},{\"name\":\"United States of America\",\"abbreviation\":\"US\"},{\"name\":\"Uruguay\",\"abbreviation\":\"UY\"},{\"name\":\"Uzbekistan\",\"abbreviation\":\"UZ\"},{\"name\":\"Vanuatu\",\"abbreviation\":\"VU\"},{\"name\":\"Bolivarian Republic of Venezuela\",\"abbreviation\":\"VE\"},{\"name\":\"Viet Nam\",\"abbreviation\":\"VN\"},{\"name\":\"Virgin Islands (British)\",\"abbreviation\":\"VG\"},{\"name\":\"Virgin Islands (U.S.)\",\"abbreviation\":\"VI\"},{\"name\":\"Wallis and Futuna\",\"abbreviation\":\"WF\"},{\"name\":\"Western Sahara\",\"abbreviation\":\"EH\"},{\"name\":\"Yemen\",\"abbreviation\":\"YE\"},{\"name\":\"Zambia\",\"abbreviation\":\"ZM\"},{\"name\":\"Zimbabwe\",\"abbreviation\":\"ZW\"}],\n\n                counties: {\n            // Data taken from http://www.downloadexcelfiles.com/gb_en/download-excel-file-list-counties-uk\n            \"uk\": [\n                {name: 'Bath and North East Somerset'},\n                {name: 'Aberdeenshire'},\n                {name: 'Anglesey'},\n                {name: 'Angus'},\n                {name: 'Bedford'},\n                {name: 'Blackburn with Darwen'},\n                {name: 'Blackpool'},\n                {name: 'Bournemouth'},\n                {name: 'Bracknell Forest'},\n                {name: 'Brighton & Hove'},\n                {name: 'Bristol'},\n                {name: 'Buckinghamshire'},\n                {name: 'Cambridgeshire'},\n                {name: 'Carmarthenshire'},\n                {name: 'Central Bedfordshire'},\n                {name: 'Ceredigion'},\n                {name: 'Cheshire East'},\n                {name: 'Cheshire West and Chester'},\n                {name: 'Clackmannanshire'},\n                {name: 'Conwy'},\n                {name: 'Cornwall'},\n                {name: 'County Antrim'},\n                {name: 'County Armagh'},\n                {name: 'County Down'},\n                {name: 'County Durham'},\n                {name: 'County Fermanagh'},\n                {name: 'County Londonderry'},\n                {name: 'County Tyrone'},\n                {name: 'Cumbria'},\n                {name: 'Darlington'},\n                {name: 'Denbighshire'},\n                {name: 'Derby'},\n                {name: 'Derbyshire'},\n                {name: 'Devon'},\n                {name: 'Dorset'},\n                {name: 'Dumfries and Galloway'},\n                {name: 'Dundee'},\n                {name: 'East Lothian'},\n                {name: 'East Riding of Yorkshire'},\n                {name: 'East Sussex'},\n                {name: 'Edinburgh?'},\n                {name: 'Essex'},\n                {name: 'Falkirk'},\n                {name: 'Fife'},\n                {name: 'Flintshire'},\n                {name: 'Gloucestershire'},\n                {name: 'Greater London'},\n                {name: 'Greater Manchester'},\n                {name: 'Gwent'},\n                {name: 'Gwynedd'},\n                {name: 'Halton'},\n                {name: 'Hampshire'},\n                {name: 'Hartlepool'},\n                {name: 'Herefordshire'},\n                {name: 'Hertfordshire'},\n                {name: 'Highlands'},\n                {name: 'Hull'},\n                {name: 'Isle of Wight'},\n                {name: 'Isles of Scilly'},\n                {name: 'Kent'},\n                {name: 'Lancashire'},\n                {name: 'Leicester'},\n                {name: 'Leicestershire'},\n                {name: 'Lincolnshire'},\n                {name: 'Lothian'},\n                {name: 'Luton'},\n                {name: 'Medway'},\n                {name: 'Merseyside'},\n                {name: 'Mid Glamorgan'},\n                {name: 'Middlesbrough'},\n                {name: 'Milton Keynes'},\n                {name: 'Monmouthshire'},\n                {name: 'Moray'},\n                {name: 'Norfolk'},\n                {name: 'North East Lincolnshire'},\n                {name: 'North Lincolnshire'},\n                {name: 'North Somerset'},\n                {name: 'North Yorkshire'},\n                {name: 'Northamptonshire'},\n                {name: 'Northumberland'},\n                {name: 'Nottingham'},\n                {name: 'Nottinghamshire'},\n                {name: 'Oxfordshire'},\n                {name: 'Pembrokeshire'},\n                {name: 'Perth and Kinross'},\n                {name: 'Peterborough'},\n                {name: 'Plymouth'},\n                {name: 'Poole'},\n                {name: 'Portsmouth'},\n                {name: 'Powys'},\n                {name: 'Reading'},\n                {name: 'Redcar and Cleveland'},\n                {name: 'Rutland'},\n                {name: 'Scottish Borders'},\n                {name: 'Shropshire'},\n                {name: 'Slough'},\n                {name: 'Somerset'},\n                {name: 'South Glamorgan'},\n                {name: 'South Gloucestershire'},\n                {name: 'South Yorkshire'},\n                {name: 'Southampton'},\n                {name: 'Southend-on-Sea'},\n                {name: 'Staffordshire'},\n                {name: 'Stirlingshire'},\n                {name: 'Stockton-on-Tees'},\n                {name: 'Stoke-on-Trent'},\n                {name: 'Strathclyde'},\n                {name: 'Suffolk'},\n                {name: 'Surrey'},\n                {name: 'Swindon'},\n                {name: 'Telford and Wrekin'},\n                {name: 'Thurrock'},\n                {name: 'Torbay'},\n                {name: 'Tyne and Wear'},\n                {name: 'Warrington'},\n                {name: 'Warwickshire'},\n                {name: 'West Berkshire'},\n                {name: 'West Glamorgan'},\n                {name: 'West Lothian'},\n                {name: 'West Midlands'},\n                {name: 'West Sussex'},\n                {name: 'West Yorkshire'},\n                {name: 'Western Isles'},\n                {name: 'Wiltshire'},\n                {name: 'Windsor and Maidenhead'},\n                {name: 'Wokingham'},\n                {name: 'Worcestershire'},\n                {name: 'Wrexham'},\n                {name: 'York'}]\n                                },\n        provinces: {\n            \"ca\": [\n                {name: 'Alberta', abbreviation: 'AB'},\n                {name: 'British Columbia', abbreviation: 'BC'},\n                {name: 'Manitoba', abbreviation: 'MB'},\n                {name: 'New Brunswick', abbreviation: 'NB'},\n                {name: 'Newfoundland and Labrador', abbreviation: 'NL'},\n                {name: 'Nova Scotia', abbreviation: 'NS'},\n                {name: 'Ontario', abbreviation: 'ON'},\n                {name: 'Prince Edward Island', abbreviation: 'PE'},\n                {name: 'Quebec', abbreviation: 'QC'},\n                {name: 'Saskatchewan', abbreviation: 'SK'},\n\n                // The case could be made that the following are not actually provinces\n                // since they are technically considered \"territories\" however they all\n                // look the same on an envelope!\n                {name: 'Northwest Territories', abbreviation: 'NT'},\n                {name: 'Nunavut', abbreviation: 'NU'},\n                {name: 'Yukon', abbreviation: 'YT'}\n            ],\n            \"it\": [\n                { name: \"Agrigento\", abbreviation: \"AG\", code: 84 },\n                { name: \"Alessandria\", abbreviation: \"AL\", code: 6 },\n                { name: \"Ancona\", abbreviation: \"AN\", code: 42 },\n                { name: \"Aosta\", abbreviation: \"AO\", code: 7 },\n                { name: \"L'Aquila\", abbreviation: \"AQ\", code: 66 },\n                { name: \"Arezzo\", abbreviation: \"AR\", code: 51 },\n                { name: \"Ascoli-Piceno\", abbreviation: \"AP\", code: 44 },\n                { name: \"Asti\", abbreviation: \"AT\", code: 5 },\n                { name: \"Avellino\", abbreviation: \"AV\", code: 64 },\n                { name: \"Bari\", abbreviation: \"BA\", code: 72 },\n                { name: \"Barletta-Andria-Trani\", abbreviation: \"BT\", code: 72 },\n                { name: \"Belluno\", abbreviation: \"BL\", code: 25 },\n                { name: \"Benevento\", abbreviation: \"BN\", code: 62 },\n                { name: \"Bergamo\", abbreviation: \"BG\", code: 16 },\n                { name: \"Biella\", abbreviation: \"BI\", code: 96 },\n                { name: \"Bologna\", abbreviation: \"BO\", code: 37 },\n                { name: \"Bolzano\", abbreviation: \"BZ\", code: 21 },\n                { name: \"Brescia\", abbreviation: \"BS\", code: 17 },\n                { name: \"Brindisi\", abbreviation: \"BR\", code: 74 },\n                { name: \"Cagliari\", abbreviation: \"CA\", code: 92 },\n                { name: \"Caltanissetta\", abbreviation: \"CL\", code: 85 },\n                { name: \"Campobasso\", abbreviation: \"CB\", code: 70 },\n                { name: \"Carbonia Iglesias\", abbreviation: \"CI\", code: 70 },\n                { name: \"Caserta\", abbreviation: \"CE\", code: 61 },\n                { name: \"Catania\", abbreviation: \"CT\", code: 87 },\n                { name: \"Catanzaro\", abbreviation: \"CZ\", code: 79 },\n                { name: \"Chieti\", abbreviation: \"CH\", code: 69 },\n                { name: \"Como\", abbreviation: \"CO\", code: 13 },\n                { name: \"Cosenza\", abbreviation: \"CS\", code: 78 },\n                { name: \"Cremona\", abbreviation: \"CR\", code: 19 },\n                { name: \"Crotone\", abbreviation: \"KR\", code: 101 },\n                { name: \"Cuneo\", abbreviation: \"CN\", code: 4 },\n                { name: \"Enna\", abbreviation: \"EN\", code: 86 },\n                { name: \"Fermo\", abbreviation: \"FM\", code: 86 },\n                { name: \"Ferrara\", abbreviation: \"FE\", code: 38 },\n                { name: \"Firenze\", abbreviation: \"FI\", code: 48 },\n                { name: \"Foggia\", abbreviation: \"FG\", code: 71 },\n                { name: \"Forli-Cesena\", abbreviation: \"FC\", code: 71 },\n                { name: \"Frosinone\", abbreviation: \"FR\", code: 60 },\n                { name: \"Genova\", abbreviation: \"GE\", code: 10 },\n                { name: \"Gorizia\", abbreviation: \"GO\", code: 31 },\n                { name: \"Grosseto\", abbreviation: \"GR\", code: 53 },\n                { name: \"Imperia\", abbreviation: \"IM\", code: 8 },\n                { name: \"Isernia\", abbreviation: \"IS\", code: 94 },\n                { name: \"La-Spezia\", abbreviation: \"SP\", code: 66 },\n                { name: \"Latina\", abbreviation: \"LT\", code: 59 },\n                { name: \"Lecce\", abbreviation: \"LE\", code: 75 },\n                { name: \"Lecco\", abbreviation: \"LC\", code: 97 },\n                { name: \"Livorno\", abbreviation: \"LI\", code: 49 },\n                { name: \"Lodi\", abbreviation: \"LO\", code: 98 },\n                { name: \"Lucca\", abbreviation: \"LU\", code: 46 },\n                { name: \"Macerata\", abbreviation: \"MC\", code: 43 },\n                { name: \"Mantova\", abbreviation: \"MN\", code: 20 },\n                { name: \"Massa-Carrara\", abbreviation: \"MS\", code: 45 },\n                { name: \"Matera\", abbreviation: \"MT\", code: 77 },\n                { name: \"Medio Campidano\", abbreviation: \"VS\", code: 77 },\n                { name: \"Messina\", abbreviation: \"ME\", code: 83 },\n                { name: \"Milano\", abbreviation: \"MI\", code: 15 },\n                { name: \"Modena\", abbreviation: \"MO\", code: 36 },\n                { name: \"Monza-Brianza\", abbreviation: \"MB\", code: 36 },\n                { name: \"Napoli\", abbreviation: \"NA\", code: 63 },\n                { name: \"Novara\", abbreviation: \"NO\", code: 3 },\n                { name: \"Nuoro\", abbreviation: \"NU\", code: 91 },\n                { name: \"Ogliastra\", abbreviation: \"OG\", code: 91 },\n                { name: \"Olbia Tempio\", abbreviation: \"OT\", code: 91 },\n                { name: \"Oristano\", abbreviation: \"OR\", code: 95 },\n                { name: \"Padova\", abbreviation: \"PD\", code: 28 },\n                { name: \"Palermo\", abbreviation: \"PA\", code: 82 },\n                { name: \"Parma\", abbreviation: \"PR\", code: 34 },\n                { name: \"Pavia\", abbreviation: \"PV\", code: 18 },\n                { name: \"Perugia\", abbreviation: \"PG\", code: 54 },\n                { name: \"Pesaro-Urbino\", abbreviation: \"PU\", code: 41 },\n                { name: \"Pescara\", abbreviation: \"PE\", code: 68 },\n                { name: \"Piacenza\", abbreviation: \"PC\", code: 33 },\n                { name: \"Pisa\", abbreviation: \"PI\", code: 50 },\n                { name: \"Pistoia\", abbreviation: \"PT\", code: 47 },\n                { name: \"Pordenone\", abbreviation: \"PN\", code: 93 },\n                { name: \"Potenza\", abbreviation: \"PZ\", code: 76 },\n                { name: \"Prato\", abbreviation: \"PO\", code: 100 },\n                { name: \"Ragusa\", abbreviation: \"RG\", code: 88 },\n                { name: \"Ravenna\", abbreviation: \"RA\", code: 39 },\n                { name: \"Reggio-Calabria\", abbreviation: \"RC\", code: 35 },\n                { name: \"Reggio-Emilia\", abbreviation: \"RE\", code: 35 },\n                { name: \"Rieti\", abbreviation: \"RI\", code: 57 },\n                { name: \"Rimini\", abbreviation: \"RN\", code: 99 },\n                { name: \"Roma\", abbreviation: \"Roma\", code: 58 },\n                { name: \"Rovigo\", abbreviation: \"RO\", code: 29 },\n                { name: \"Salerno\", abbreviation: \"SA\", code: 65 },\n                { name: \"Sassari\", abbreviation: \"SS\", code: 90 },\n                { name: \"Savona\", abbreviation: \"SV\", code: 9 },\n                { name: \"Siena\", abbreviation: \"SI\", code: 52 },\n                { name: \"Siracusa\", abbreviation: \"SR\", code: 89 },\n                { name: \"Sondrio\", abbreviation: \"SO\", code: 14 },\n                { name: \"Taranto\", abbreviation: \"TA\", code: 73 },\n                { name: \"Teramo\", abbreviation: \"TE\", code: 67 },\n                { name: \"Terni\", abbreviation: \"TR\", code: 55 },\n                { name: \"Torino\", abbreviation: \"TO\", code: 1 },\n                { name: \"Trapani\", abbreviation: \"TP\", code: 81 },\n                { name: \"Trento\", abbreviation: \"TN\", code: 22 },\n                { name: \"Treviso\", abbreviation: \"TV\", code: 26 },\n                { name: \"Trieste\", abbreviation: \"TS\", code: 32 },\n                { name: \"Udine\", abbreviation: \"UD\", code: 30 },\n                { name: \"Varese\", abbreviation: \"VA\", code: 12 },\n                { name: \"Venezia\", abbreviation: \"VE\", code: 27 },\n                { name: \"Verbania\", abbreviation: \"VB\", code: 27 },\n                { name: \"Vercelli\", abbreviation: \"VC\", code: 2 },\n                { name: \"Verona\", abbreviation: \"VR\", code: 23 },\n                { name: \"Vibo-Valentia\", abbreviation: \"VV\", code: 102 },\n                { name: \"Vicenza\", abbreviation: \"VI\", code: 24 },\n                { name: \"Viterbo\", abbreviation: \"VT\", code: 56 }\n            ]\n        },\n\n            // from: https://github.com/samsargent/Useful-Autocomplete-Data/blob/master/data/nationalities.json\n        nationalities: [\n           {name: 'Afghan'},\n           {name: 'Albanian'},\n           {name: 'Algerian'},\n           {name: 'American'},\n           {name: 'Andorran'},\n           {name: 'Angolan'},\n           {name: 'Antiguans'},\n           {name: 'Argentinean'},\n           {name: 'Armenian'},\n           {name: 'Australian'},\n           {name: 'Austrian'},\n           {name: 'Azerbaijani'},\n           {name: 'Bahami'},\n           {name: 'Bahraini'},\n           {name: 'Bangladeshi'},\n           {name: 'Barbadian'},\n           {name: 'Barbudans'},\n           {name: 'Batswana'},\n           {name: 'Belarusian'},\n           {name: 'Belgian'},\n           {name: 'Belizean'},\n           {name: 'Beninese'},\n           {name: 'Bhutanese'},\n           {name: 'Bolivian'},\n           {name: 'Bosnian'},\n           {name: 'Brazilian'},\n           {name: 'British'},\n           {name: 'Bruneian'},\n           {name: 'Bulgarian'},\n           {name: 'Burkinabe'},\n           {name: 'Burmese'},\n           {name: 'Burundian'},\n           {name: 'Cambodian'},\n           {name: 'Cameroonian'},\n           {name: 'Canadian'},\n           {name: 'Cape Verdean'},\n           {name: 'Central African'},\n           {name: 'Chadian'},\n           {name: 'Chilean'},\n           {name: 'Chinese'},\n           {name: 'Colombian'},\n           {name: 'Comoran'},\n           {name: 'Congolese'},\n           {name: 'Costa Rican'},\n           {name: 'Croatian'},\n           {name: 'Cuban'},\n           {name: 'Cypriot'},\n           {name: 'Czech'},\n           {name: 'Danish'},\n           {name: 'Djibouti'},\n           {name: 'Dominican'},\n           {name: 'Dutch'},\n           {name: 'East Timorese'},\n           {name: 'Ecuadorean'},\n           {name: 'Egyptian'},\n           {name: 'Emirian'},\n           {name: 'Equatorial Guinean'},\n           {name: 'Eritrean'},\n           {name: 'Estonian'},\n           {name: 'Ethiopian'},\n           {name: 'Fijian'},\n           {name: 'Filipino'},\n           {name: 'Finnish'},\n           {name: 'French'},\n           {name: 'Gabonese'},\n           {name: 'Gambian'},\n           {name: 'Georgian'},\n           {name: 'German'},\n           {name: 'Ghanaian'},\n           {name: 'Greek'},\n           {name: 'Grenadian'},\n           {name: 'Guatemalan'},\n           {name: 'Guinea-Bissauan'},\n           {name: 'Guinean'},\n           {name: 'Guyanese'},\n           {name: 'Haitian'},\n           {name: 'Herzegovinian'},\n           {name: 'Honduran'},\n           {name: 'Hungarian'},\n           {name: 'I-Kiribati'},\n           {name: 'Icelander'},\n           {name: 'Indian'},\n           {name: 'Indonesian'},\n           {name: 'Iranian'},\n           {name: 'Iraqi'},\n           {name: 'Irish'},\n           {name: 'Israeli'},\n           {name: 'Italian'},\n           {name: 'Ivorian'},\n           {name: 'Jamaican'},\n           {name: 'Japanese'},\n           {name: 'Jordanian'},\n           {name: 'Kazakhstani'},\n           {name: 'Kenyan'},\n           {name: 'Kittian and Nevisian'},\n           {name: 'Kuwaiti'},\n           {name: 'Kyrgyz'},\n           {name: 'Laotian'},\n           {name: 'Latvian'},\n           {name: 'Lebanese'},\n           {name: 'Liberian'},\n           {name: 'Libyan'},\n           {name: 'Liechtensteiner'},\n           {name: 'Lithuanian'},\n           {name: 'Luxembourger'},\n           {name: 'Macedonian'},\n           {name: 'Malagasy'},\n           {name: 'Malawian'},\n           {name: 'Malaysian'},\n           {name: 'Maldivan'},\n           {name: 'Malian'},\n           {name: 'Maltese'},\n           {name: 'Marshallese'},\n           {name: 'Mauritanian'},\n           {name: 'Mauritian'},\n           {name: 'Mexican'},\n           {name: 'Micronesian'},\n           {name: 'Moldovan'},\n           {name: 'Monacan'},\n           {name: 'Mongolian'},\n           {name: 'Moroccan'},\n           {name: 'Mosotho'},\n           {name: 'Motswana'},\n           {name: 'Mozambican'},\n           {name: 'Namibian'},\n           {name: 'Nauruan'},\n           {name: 'Nepalese'},\n           {name: 'New Zealander'},\n           {name: 'Nicaraguan'},\n           {name: 'Nigerian'},\n           {name: 'Nigerien'},\n           {name: 'North Korean'},\n           {name: 'Northern Irish'},\n           {name: 'Norwegian'},\n           {name: 'Omani'},\n           {name: 'Pakistani'},\n           {name: 'Palauan'},\n           {name: 'Panamanian'},\n           {name: 'Papua New Guinean'},\n           {name: 'Paraguayan'},\n           {name: 'Peruvian'},\n           {name: 'Polish'},\n           {name: 'Portuguese'},\n           {name: 'Qatari'},\n           {name: 'Romani'},\n           {name: 'Russian'},\n           {name: 'Rwandan'},\n           {name: 'Saint Lucian'},\n           {name: 'Salvadoran'},\n           {name: 'Samoan'},\n           {name: 'San Marinese'},\n           {name: 'Sao Tomean'},\n           {name: 'Saudi'},\n           {name: 'Scottish'},\n           {name: 'Senegalese'},\n           {name: 'Serbian'},\n           {name: 'Seychellois'},\n           {name: 'Sierra Leonean'},\n           {name: 'Singaporean'},\n           {name: 'Slovakian'},\n           {name: 'Slovenian'},\n           {name: 'Solomon Islander'},\n           {name: 'Somali'},\n           {name: 'South African'},\n           {name: 'South Korean'},\n           {name: 'Spanish'},\n           {name: 'Sri Lankan'},\n           {name: 'Sudanese'},\n           {name: 'Surinamer'},\n           {name: 'Swazi'},\n           {name: 'Swedish'},\n           {name: 'Swiss'},\n           {name: 'Syrian'},\n           {name: 'Taiwanese'},\n           {name: 'Tajik'},\n           {name: 'Tanzanian'},\n           {name: 'Thai'},\n           {name: 'Togolese'},\n           {name: 'Tongan'},\n           {name: 'Trinidadian or Tobagonian'},\n           {name: 'Tunisian'},\n           {name: 'Turkish'},\n           {name: 'Tuvaluan'},\n           {name: 'Ugandan'},\n           {name: 'Ukrainian'},\n           {name: 'Uruguaya'},\n           {name: 'Uzbekistani'},\n           {name: 'Venezuela'},\n           {name: 'Vietnamese'},\n           {name: 'Wels'},\n           {name: 'Yemenit'},\n           {name: 'Zambia'},\n           {name: 'Zimbabwe'},\n        ],\n          // http://www.loc.gov/standards/iso639-2/php/code_list.php (ISO-639-1 codes)\n        locale_languages: [\n          \"aa\",\n          \"ab\",\n          \"ae\",\n          \"af\",\n          \"ak\",\n          \"am\",\n          \"an\",\n          \"ar\",\n          \"as\",\n          \"av\",\n          \"ay\",\n          \"az\",\n          \"ba\",\n          \"be\",\n          \"bg\",\n          \"bh\",\n          \"bi\",\n          \"bm\",\n          \"bn\",\n          \"bo\",\n          \"br\",\n          \"bs\",\n          \"ca\",\n          \"ce\",\n          \"ch\",\n          \"co\",\n          \"cr\",\n          \"cs\",\n          \"cu\",\n          \"cv\",\n          \"cy\",\n          \"da\",\n          \"de\",\n          \"dv\",\n          \"dz\",\n          \"ee\",\n          \"el\",\n          \"en\",\n          \"eo\",\n          \"es\",\n          \"et\",\n          \"eu\",\n          \"fa\",\n          \"ff\",\n          \"fi\",\n          \"fj\",\n          \"fo\",\n          \"fr\",\n          \"fy\",\n          \"ga\",\n          \"gd\",\n          \"gl\",\n          \"gn\",\n          \"gu\",\n          \"gv\",\n          \"ha\",\n          \"he\",\n          \"hi\",\n          \"ho\",\n          \"hr\",\n          \"ht\",\n          \"hu\",\n          \"hy\",\n          \"hz\",\n          \"ia\",\n          \"id\",\n          \"ie\",\n          \"ig\",\n          \"ii\",\n          \"ik\",\n          \"io\",\n          \"is\",\n          \"it\",\n          \"iu\",\n          \"ja\",\n          \"jv\",\n          \"ka\",\n          \"kg\",\n          \"ki\",\n          \"kj\",\n          \"kk\",\n          \"kl\",\n          \"km\",\n          \"kn\",\n          \"ko\",\n          \"kr\",\n          \"ks\",\n          \"ku\",\n          \"kv\",\n          \"kw\",\n          \"ky\",\n          \"la\",\n          \"lb\",\n          \"lg\",\n          \"li\",\n          \"ln\",\n          \"lo\",\n          \"lt\",\n          \"lu\",\n          \"lv\",\n          \"mg\",\n          \"mh\",\n          \"mi\",\n          \"mk\",\n          \"ml\",\n          \"mn\",\n          \"mr\",\n          \"ms\",\n          \"mt\",\n          \"my\",\n          \"na\",\n          \"nb\",\n          \"nd\",\n          \"ne\",\n          \"ng\",\n          \"nl\",\n          \"nn\",\n          \"no\",\n          \"nr\",\n          \"nv\",\n          \"ny\",\n          \"oc\",\n          \"oj\",\n          \"om\",\n          \"or\",\n          \"os\",\n          \"pa\",\n          \"pi\",\n          \"pl\",\n          \"ps\",\n          \"pt\",\n          \"qu\",\n          \"rm\",\n          \"rn\",\n          \"ro\",\n          \"ru\",\n          \"rw\",\n          \"sa\",\n          \"sc\",\n          \"sd\",\n          \"se\",\n          \"sg\",\n          \"si\",\n          \"sk\",\n          \"sl\",\n          \"sm\",\n          \"sn\",\n          \"so\",\n          \"sq\",\n          \"sr\",\n          \"ss\",\n          \"st\",\n          \"su\",\n          \"sv\",\n          \"sw\",\n          \"ta\",\n          \"te\",\n          \"tg\",\n          \"th\",\n          \"ti\",\n          \"tk\",\n          \"tl\",\n          \"tn\",\n          \"to\",\n          \"tr\",\n          \"ts\",\n          \"tt\",\n          \"tw\",\n          \"ty\",\n          \"ug\",\n          \"uk\",\n          \"ur\",\n          \"uz\",\n          \"ve\",\n          \"vi\",\n          \"vo\",\n          \"wa\",\n          \"wo\",\n          \"xh\",\n          \"yi\",\n          \"yo\",\n          \"za\",\n          \"zh\",\n          \"zu\"\n        ],\n\n        // From http://data.okfn.org/data/core/language-codes#resource-language-codes-full (IETF language tags)\n        locale_regions: [\n          \"agq-CM\",\n          \"asa-TZ\",\n          \"ast-ES\",\n          \"bas-CM\",\n          \"bem-ZM\",\n          \"bez-TZ\",\n          \"brx-IN\",\n          \"cgg-UG\",\n          \"chr-US\",\n          \"dav-KE\",\n          \"dje-NE\",\n          \"dsb-DE\",\n          \"dua-CM\",\n          \"dyo-SN\",\n          \"ebu-KE\",\n          \"ewo-CM\",\n          \"fil-PH\",\n          \"fur-IT\",\n          \"gsw-CH\",\n          \"gsw-FR\",\n          \"gsw-LI\",\n          \"guz-KE\",\n          \"haw-US\",\n          \"hsb-DE\",\n          \"jgo-CM\",\n          \"jmc-TZ\",\n          \"kab-DZ\",\n          \"kam-KE\",\n          \"kde-TZ\",\n          \"kea-CV\",\n          \"khq-ML\",\n          \"kkj-CM\",\n          \"kln-KE\",\n          \"kok-IN\",\n          \"ksb-TZ\",\n          \"ksf-CM\",\n          \"ksh-DE\",\n          \"lag-TZ\",\n          \"lkt-US\",\n          \"luo-KE\",\n          \"luy-KE\",\n          \"mas-KE\",\n          \"mas-TZ\",\n          \"mer-KE\",\n          \"mfe-MU\",\n          \"mgh-MZ\",\n          \"mgo-CM\",\n          \"mua-CM\",\n          \"naq-NA\",\n          \"nmg-CM\",\n          \"nnh-CM\",\n          \"nus-SD\",\n          \"nyn-UG\",\n          \"rof-TZ\",\n          \"rwk-TZ\",\n          \"sah-RU\",\n          \"saq-KE\",\n          \"sbp-TZ\",\n          \"seh-MZ\",\n          \"ses-ML\",\n          \"shi-Latn\",\n          \"shi-Latn-MA\",\n          \"shi-Tfng\",\n          \"shi-Tfng-MA\",\n          \"smn-FI\",\n          \"teo-KE\",\n          \"teo-UG\",\n          \"twq-NE\",\n          \"tzm-Latn\",\n          \"tzm-Latn-MA\",\n          \"vai-Latn\",\n          \"vai-Latn-LR\",\n          \"vai-Vaii\",\n          \"vai-Vaii-LR\",\n          \"vun-TZ\",\n          \"wae-CH\",\n          \"xog-UG\",\n          \"yav-CM\",\n          \"zgh-MA\",\n          \"af-NA\",\n          \"af-ZA\",\n          \"ak-GH\",\n          \"am-ET\",\n          \"ar-001\",\n          \"ar-AE\",\n          \"ar-BH\",\n          \"ar-DJ\",\n          \"ar-DZ\",\n          \"ar-EG\",\n          \"ar-EH\",\n          \"ar-ER\",\n          \"ar-IL\",\n          \"ar-IQ\",\n          \"ar-JO\",\n          \"ar-KM\",\n          \"ar-KW\",\n          \"ar-LB\",\n          \"ar-LY\",\n          \"ar-MA\",\n          \"ar-MR\",\n          \"ar-OM\",\n          \"ar-PS\",\n          \"ar-QA\",\n          \"ar-SA\",\n          \"ar-SD\",\n          \"ar-SO\",\n          \"ar-SS\",\n          \"ar-SY\",\n          \"ar-TD\",\n          \"ar-TN\",\n          \"ar-YE\",\n          \"as-IN\",\n          \"az-Cyrl\",\n          \"az-Cyrl-AZ\",\n          \"az-Latn\",\n          \"az-Latn-AZ\",\n          \"be-BY\",\n          \"bg-BG\",\n          \"bm-Latn\",\n          \"bm-Latn-ML\",\n          \"bn-BD\",\n          \"bn-IN\",\n          \"bo-CN\",\n          \"bo-IN\",\n          \"br-FR\",\n          \"bs-Cyrl\",\n          \"bs-Cyrl-BA\",\n          \"bs-Latn\",\n          \"bs-Latn-BA\",\n          \"ca-AD\",\n          \"ca-ES\",\n          \"ca-ES-VALENCIA\",\n          \"ca-FR\",\n          \"ca-IT\",\n          \"cs-CZ\",\n          \"cy-GB\",\n          \"da-DK\",\n          \"da-GL\",\n          \"de-AT\",\n          \"de-BE\",\n          \"de-CH\",\n          \"de-DE\",\n          \"de-LI\",\n          \"de-LU\",\n          \"dz-BT\",\n          \"ee-GH\",\n          \"ee-TG\",\n          \"el-CY\",\n          \"el-GR\",\n          \"en-001\",\n          \"en-150\",\n          \"en-AG\",\n          \"en-AI\",\n          \"en-AS\",\n          \"en-AU\",\n          \"en-BB\",\n          \"en-BE\",\n          \"en-BM\",\n          \"en-BS\",\n          \"en-BW\",\n          \"en-BZ\",\n          \"en-CA\",\n          \"en-CC\",\n          \"en-CK\",\n          \"en-CM\",\n          \"en-CX\",\n          \"en-DG\",\n          \"en-DM\",\n          \"en-ER\",\n          \"en-FJ\",\n          \"en-FK\",\n          \"en-FM\",\n          \"en-GB\",\n          \"en-GD\",\n          \"en-GG\",\n          \"en-GH\",\n          \"en-GI\",\n          \"en-GM\",\n          \"en-GU\",\n          \"en-GY\",\n          \"en-HK\",\n          \"en-IE\",\n          \"en-IM\",\n          \"en-IN\",\n          \"en-IO\",\n          \"en-JE\",\n          \"en-JM\",\n          \"en-KE\",\n          \"en-KI\",\n          \"en-KN\",\n          \"en-KY\",\n          \"en-LC\",\n          \"en-LR\",\n          \"en-LS\",\n          \"en-MG\",\n          \"en-MH\",\n          \"en-MO\",\n          \"en-MP\",\n          \"en-MS\",\n          \"en-MT\",\n          \"en-MU\",\n          \"en-MW\",\n          \"en-MY\",\n          \"en-NA\",\n          \"en-NF\",\n          \"en-NG\",\n          \"en-NR\",\n          \"en-NU\",\n          \"en-NZ\",\n          \"en-PG\",\n          \"en-PH\",\n          \"en-PK\",\n          \"en-PN\",\n          \"en-PR\",\n          \"en-PW\",\n          \"en-RW\",\n          \"en-SB\",\n          \"en-SC\",\n          \"en-SD\",\n          \"en-SG\",\n          \"en-SH\",\n          \"en-SL\",\n          \"en-SS\",\n          \"en-SX\",\n          \"en-SZ\",\n          \"en-TC\",\n          \"en-TK\",\n          \"en-TO\",\n          \"en-TT\",\n          \"en-TV\",\n          \"en-TZ\",\n          \"en-UG\",\n          \"en-UM\",\n          \"en-US\",\n          \"en-US-POSIX\",\n          \"en-VC\",\n          \"en-VG\",\n          \"en-VI\",\n          \"en-VU\",\n          \"en-WS\",\n          \"en-ZA\",\n          \"en-ZM\",\n          \"en-ZW\",\n          \"eo-001\",\n          \"es-419\",\n          \"es-AR\",\n          \"es-BO\",\n          \"es-CL\",\n          \"es-CO\",\n          \"es-CR\",\n          \"es-CU\",\n          \"es-DO\",\n          \"es-EA\",\n          \"es-EC\",\n          \"es-ES\",\n          \"es-GQ\",\n          \"es-GT\",\n          \"es-HN\",\n          \"es-IC\",\n          \"es-MX\",\n          \"es-NI\",\n          \"es-PA\",\n          \"es-PE\",\n          \"es-PH\",\n          \"es-PR\",\n          \"es-PY\",\n          \"es-SV\",\n          \"es-US\",\n          \"es-UY\",\n          \"es-VE\",\n          \"et-EE\",\n          \"eu-ES\",\n          \"fa-AF\",\n          \"fa-IR\",\n          \"ff-CM\",\n          \"ff-GN\",\n          \"ff-MR\",\n          \"ff-SN\",\n          \"fi-FI\",\n          \"fo-FO\",\n          \"fr-BE\",\n          \"fr-BF\",\n          \"fr-BI\",\n          \"fr-BJ\",\n          \"fr-BL\",\n          \"fr-CA\",\n          \"fr-CD\",\n          \"fr-CF\",\n          \"fr-CG\",\n          \"fr-CH\",\n          \"fr-CI\",\n          \"fr-CM\",\n          \"fr-DJ\",\n          \"fr-DZ\",\n          \"fr-FR\",\n          \"fr-GA\",\n          \"fr-GF\",\n          \"fr-GN\",\n          \"fr-GP\",\n          \"fr-GQ\",\n          \"fr-HT\",\n          \"fr-KM\",\n          \"fr-LU\",\n          \"fr-MA\",\n          \"fr-MC\",\n          \"fr-MF\",\n          \"fr-MG\",\n          \"fr-ML\",\n          \"fr-MQ\",\n          \"fr-MR\",\n          \"fr-MU\",\n          \"fr-NC\",\n          \"fr-NE\",\n          \"fr-PF\",\n          \"fr-PM\",\n          \"fr-RE\",\n          \"fr-RW\",\n          \"fr-SC\",\n          \"fr-SN\",\n          \"fr-SY\",\n          \"fr-TD\",\n          \"fr-TG\",\n          \"fr-TN\",\n          \"fr-VU\",\n          \"fr-WF\",\n          \"fr-YT\",\n          \"fy-NL\",\n          \"ga-IE\",\n          \"gd-GB\",\n          \"gl-ES\",\n          \"gu-IN\",\n          \"gv-IM\",\n          \"ha-Latn\",\n          \"ha-Latn-GH\",\n          \"ha-Latn-NE\",\n          \"ha-Latn-NG\",\n          \"he-IL\",\n          \"hi-IN\",\n          \"hr-BA\",\n          \"hr-HR\",\n          \"hu-HU\",\n          \"hy-AM\",\n          \"id-ID\",\n          \"ig-NG\",\n          \"ii-CN\",\n          \"is-IS\",\n          \"it-CH\",\n          \"it-IT\",\n          \"it-SM\",\n          \"ja-JP\",\n          \"ka-GE\",\n          \"ki-KE\",\n          \"kk-Cyrl\",\n          \"kk-Cyrl-KZ\",\n          \"kl-GL\",\n          \"km-KH\",\n          \"kn-IN\",\n          \"ko-KP\",\n          \"ko-KR\",\n          \"ks-Arab\",\n          \"ks-Arab-IN\",\n          \"kw-GB\",\n          \"ky-Cyrl\",\n          \"ky-Cyrl-KG\",\n          \"lb-LU\",\n          \"lg-UG\",\n          \"ln-AO\",\n          \"ln-CD\",\n          \"ln-CF\",\n          \"ln-CG\",\n          \"lo-LA\",\n          \"lt-LT\",\n          \"lu-CD\",\n          \"lv-LV\",\n          \"mg-MG\",\n          \"mk-MK\",\n          \"ml-IN\",\n          \"mn-Cyrl\",\n          \"mn-Cyrl-MN\",\n          \"mr-IN\",\n          \"ms-Latn\",\n          \"ms-Latn-BN\",\n          \"ms-Latn-MY\",\n          \"ms-Latn-SG\",\n          \"mt-MT\",\n          \"my-MM\",\n          \"nb-NO\",\n          \"nb-SJ\",\n          \"nd-ZW\",\n          \"ne-IN\",\n          \"ne-NP\",\n          \"nl-AW\",\n          \"nl-BE\",\n          \"nl-BQ\",\n          \"nl-CW\",\n          \"nl-NL\",\n          \"nl-SR\",\n          \"nl-SX\",\n          \"nn-NO\",\n          \"om-ET\",\n          \"om-KE\",\n          \"or-IN\",\n          \"os-GE\",\n          \"os-RU\",\n          \"pa-Arab\",\n          \"pa-Arab-PK\",\n          \"pa-Guru\",\n          \"pa-Guru-IN\",\n          \"pl-PL\",\n          \"ps-AF\",\n          \"pt-AO\",\n          \"pt-BR\",\n          \"pt-CV\",\n          \"pt-GW\",\n          \"pt-MO\",\n          \"pt-MZ\",\n          \"pt-PT\",\n          \"pt-ST\",\n          \"pt-TL\",\n          \"qu-BO\",\n          \"qu-EC\",\n          \"qu-PE\",\n          \"rm-CH\",\n          \"rn-BI\",\n          \"ro-MD\",\n          \"ro-RO\",\n          \"ru-BY\",\n          \"ru-KG\",\n          \"ru-KZ\",\n          \"ru-MD\",\n          \"ru-RU\",\n          \"ru-UA\",\n          \"rw-RW\",\n          \"se-FI\",\n          \"se-NO\",\n          \"se-SE\",\n          \"sg-CF\",\n          \"si-LK\",\n          \"sk-SK\",\n          \"sl-SI\",\n          \"sn-ZW\",\n          \"so-DJ\",\n          \"so-ET\",\n          \"so-KE\",\n          \"so-SO\",\n          \"sq-AL\",\n          \"sq-MK\",\n          \"sq-XK\",\n          \"sr-Cyrl\",\n          \"sr-Cyrl-BA\",\n          \"sr-Cyrl-ME\",\n          \"sr-Cyrl-RS\",\n          \"sr-Cyrl-XK\",\n          \"sr-Latn\",\n          \"sr-Latn-BA\",\n          \"sr-Latn-ME\",\n          \"sr-Latn-RS\",\n          \"sr-Latn-XK\",\n          \"sv-AX\",\n          \"sv-FI\",\n          \"sv-SE\",\n          \"sw-CD\",\n          \"sw-KE\",\n          \"sw-TZ\",\n          \"sw-UG\",\n          \"ta-IN\",\n          \"ta-LK\",\n          \"ta-MY\",\n          \"ta-SG\",\n          \"te-IN\",\n          \"th-TH\",\n          \"ti-ER\",\n          \"ti-ET\",\n          \"to-TO\",\n          \"tr-CY\",\n          \"tr-TR\",\n          \"ug-Arab\",\n          \"ug-Arab-CN\",\n          \"uk-UA\",\n          \"ur-IN\",\n          \"ur-PK\",\n          \"uz-Arab\",\n          \"uz-Arab-AF\",\n          \"uz-Cyrl\",\n          \"uz-Cyrl-UZ\",\n          \"uz-Latn\",\n          \"uz-Latn-UZ\",\n          \"vi-VN\",\n          \"yi-001\",\n          \"yo-BJ\",\n          \"yo-NG\",\n          \"zh-Hans\",\n          \"zh-Hans-CN\",\n          \"zh-Hans-HK\",\n          \"zh-Hans-MO\",\n          \"zh-Hans-SG\",\n          \"zh-Hant\",\n          \"zh-Hant-HK\",\n          \"zh-Hant-MO\",\n          \"zh-Hant-TW\",\n          \"zu-ZA\"\n        ],\n\n        us_states_and_dc: [\n            {name: 'Alabama', abbreviation: 'AL'},\n            {name: 'Alaska', abbreviation: 'AK'},\n            {name: 'Arizona', abbreviation: 'AZ'},\n            {name: 'Arkansas', abbreviation: 'AR'},\n            {name: 'California', abbreviation: 'CA'},\n            {name: 'Colorado', abbreviation: 'CO'},\n            {name: 'Connecticut', abbreviation: 'CT'},\n            {name: 'Delaware', abbreviation: 'DE'},\n            {name: 'District of Columbia', abbreviation: 'DC'},\n            {name: 'Florida', abbreviation: 'FL'},\n            {name: 'Georgia', abbreviation: 'GA'},\n            {name: 'Hawaii', abbreviation: 'HI'},\n            {name: 'Idaho', abbreviation: 'ID'},\n            {name: 'Illinois', abbreviation: 'IL'},\n            {name: 'Indiana', abbreviation: 'IN'},\n            {name: 'Iowa', abbreviation: 'IA'},\n            {name: 'Kansas', abbreviation: 'KS'},\n            {name: 'Kentucky', abbreviation: 'KY'},\n            {name: 'Louisiana', abbreviation: 'LA'},\n            {name: 'Maine', abbreviation: 'ME'},\n            {name: 'Maryland', abbreviation: 'MD'},\n            {name: 'Massachusetts', abbreviation: 'MA'},\n            {name: 'Michigan', abbreviation: 'MI'},\n            {name: 'Minnesota', abbreviation: 'MN'},\n            {name: 'Mississippi', abbreviation: 'MS'},\n            {name: 'Missouri', abbreviation: 'MO'},\n            {name: 'Montana', abbreviation: 'MT'},\n            {name: 'Nebraska', abbreviation: 'NE'},\n            {name: 'Nevada', abbreviation: 'NV'},\n            {name: 'New Hampshire', abbreviation: 'NH'},\n            {name: 'New Jersey', abbreviation: 'NJ'},\n            {name: 'New Mexico', abbreviation: 'NM'},\n            {name: 'New York', abbreviation: 'NY'},\n            {name: 'North Carolina', abbreviation: 'NC'},\n            {name: 'North Dakota', abbreviation: 'ND'},\n            {name: 'Ohio', abbreviation: 'OH'},\n            {name: 'Oklahoma', abbreviation: 'OK'},\n            {name: 'Oregon', abbreviation: 'OR'},\n            {name: 'Pennsylvania', abbreviation: 'PA'},\n            {name: 'Rhode Island', abbreviation: 'RI'},\n            {name: 'South Carolina', abbreviation: 'SC'},\n            {name: 'South Dakota', abbreviation: 'SD'},\n            {name: 'Tennessee', abbreviation: 'TN'},\n            {name: 'Texas', abbreviation: 'TX'},\n            {name: 'Utah', abbreviation: 'UT'},\n            {name: 'Vermont', abbreviation: 'VT'},\n            {name: 'Virginia', abbreviation: 'VA'},\n            {name: 'Washington', abbreviation: 'WA'},\n            {name: 'West Virginia', abbreviation: 'WV'},\n            {name: 'Wisconsin', abbreviation: 'WI'},\n            {name: 'Wyoming', abbreviation: 'WY'}\n        ],\n\n        territories: [\n            {name: 'American Samoa', abbreviation: 'AS'},\n            {name: 'Federated States of Micronesia', abbreviation: 'FM'},\n            {name: 'Guam', abbreviation: 'GU'},\n            {name: 'Marshall Islands', abbreviation: 'MH'},\n            {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n            {name: 'Puerto Rico', abbreviation: 'PR'},\n            {name: 'Virgin Islands, U.S.', abbreviation: 'VI'}\n        ],\n\n        armed_forces: [\n            {name: 'Armed Forces Europe', abbreviation: 'AE'},\n            {name: 'Armed Forces Pacific', abbreviation: 'AP'},\n            {name: 'Armed Forces the Americas', abbreviation: 'AA'}\n        ],\n\n        country_regions: {\n            it: [\n                { name: \"Valle d'Aosta\", abbreviation: \"VDA\" },\n                { name: \"Piemonte\", abbreviation: \"PIE\" },\n                { name: \"Lombardia\", abbreviation: \"LOM\" },\n                { name: \"Veneto\", abbreviation: \"VEN\" },\n                { name: \"Trentino Alto Adige\", abbreviation: \"TAA\" },\n                { name: \"Friuli Venezia Giulia\", abbreviation: \"FVG\" },\n                { name: \"Liguria\", abbreviation: \"LIG\" },\n                { name: \"Emilia Romagna\", abbreviation: \"EMR\" },\n                { name: \"Toscana\", abbreviation: \"TOS\" },\n                { name: \"Umbria\", abbreviation: \"UMB\" },\n                { name: \"Marche\", abbreviation: \"MAR\" },\n                { name: \"Abruzzo\", abbreviation: \"ABR\" },\n                { name: \"Lazio\", abbreviation: \"LAZ\" },\n                { name: \"Campania\", abbreviation: \"CAM\" },\n                { name: \"Puglia\", abbreviation: \"PUG\" },\n                { name: \"Basilicata\", abbreviation: \"BAS\" },\n                { name: \"Molise\", abbreviation: \"MOL\" },\n                { name: \"Calabria\", abbreviation: \"CAL\" },\n                { name: \"Sicilia\", abbreviation: \"SIC\" },\n                { name: \"Sardegna\", abbreviation: \"SAR\" }\n            ],\n            mx: [\n                { name: 'Aguascalientes', abbreviation: 'AGU' },\n                { name: 'Baja California', abbreviation: 'BCN' },\n                { name: 'Baja California Sur', abbreviation: 'BCS' },\n                { name: 'Campeche', abbreviation: 'CAM' },\n                { name: 'Chiapas', abbreviation: 'CHP' },\n                { name: 'Chihuahua', abbreviation: 'CHH' },\n                { name: 'Ciudad de México', abbreviation: 'DIF' },\n                { name: 'Coahuila', abbreviation: 'COA' },\n                { name: 'Colima', abbreviation: 'COL' },\n                { name: 'Durango', abbreviation: 'DUR' },\n                { name: 'Guanajuato', abbreviation: 'GUA' },\n                { name: 'Guerrero', abbreviation: 'GRO' },\n                { name: 'Hidalgo', abbreviation: 'HID' },\n                { name: 'Jalisco', abbreviation: 'JAL' },\n                { name: 'México', abbreviation: 'MEX' },\n                { name: 'Michoacán', abbreviation: 'MIC' },\n                { name: 'Morelos', abbreviation: 'MOR' },\n                { name: 'Nayarit', abbreviation: 'NAY' },\n                { name: 'Nuevo León', abbreviation: 'NLE' },\n                { name: 'Oaxaca', abbreviation: 'OAX' },\n                { name: 'Puebla', abbreviation: 'PUE' },\n                { name: 'Querétaro', abbreviation: 'QUE' },\n                { name: 'Quintana Roo', abbreviation: 'ROO' },\n                { name: 'San Luis Potosí', abbreviation: 'SLP' },\n                { name: 'Sinaloa', abbreviation: 'SIN' },\n                { name: 'Sonora', abbreviation: 'SON' },\n                { name: 'Tabasco', abbreviation: 'TAB' },\n                { name: 'Tamaulipas', abbreviation: 'TAM' },\n                { name: 'Tlaxcala', abbreviation: 'TLA' },\n                { name: 'Veracruz', abbreviation: 'VER' },\n                { name: 'Yucatán', abbreviation: 'YUC' },\n                { name: 'Zacatecas', abbreviation: 'ZAC' }\n            ]\n        },\n\n        street_suffixes: {\n            'us': [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Boulevard', abbreviation: 'Blvd'},\n                {name: 'Center', abbreviation: 'Ctr'},\n                {name: 'Circle', abbreviation: 'Cir'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Extension', abbreviation: 'Ext'},\n                {name: 'Glen', abbreviation: 'Gln'},\n                {name: 'Grove', abbreviation: 'Grv'},\n                {name: 'Heights', abbreviation: 'Hts'},\n                {name: 'Highway', abbreviation: 'Hwy'},\n                {name: 'Junction', abbreviation: 'Jct'},\n                {name: 'Key', abbreviation: 'Key'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Loop', abbreviation: 'Loop'},\n                {name: 'Manor', abbreviation: 'Mnr'},\n                {name: 'Mill', abbreviation: 'Mill'},\n                {name: 'Park', abbreviation: 'Park'},\n                {name: 'Parkway', abbreviation: 'Pkwy'},\n                {name: 'Pass', abbreviation: 'Pass'},\n                {name: 'Path', abbreviation: 'Path'},\n                {name: 'Pike', abbreviation: 'Pike'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Plaza', abbreviation: 'Plz'},\n                {name: 'Point', abbreviation: 'Pt'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'River', abbreviation: 'Riv'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Trail', abbreviation: 'Trl'},\n                {name: 'Turnpike', abbreviation: 'Tpke'},\n                {name: 'View', abbreviation: 'Vw'},\n                {name: 'Way', abbreviation: 'Way'}\n            ],\n            'it': [\n                { name: 'Accesso', abbreviation: 'Acc.' },\n                { name: 'Alzaia', abbreviation: 'Alz.' },\n                { name: 'Arco', abbreviation: 'Arco' },\n                { name: 'Archivolto', abbreviation: 'Acv.' },\n                { name: 'Arena', abbreviation: 'Arena' },\n                { name: 'Argine', abbreviation: 'Argine' },\n                { name: 'Bacino', abbreviation: 'Bacino' },\n                { name: 'Banchi', abbreviation: 'Banchi' },\n                { name: 'Banchina', abbreviation: 'Ban.' },\n                { name: 'Bastioni', abbreviation: 'Bas.' },\n                { name: 'Belvedere', abbreviation: 'Belv.' },\n                { name: 'Borgata', abbreviation: 'B.ta' },\n                { name: 'Borgo', abbreviation: 'B.go' },\n                { name: 'Calata', abbreviation: 'Cal.' },\n                { name: 'Calle', abbreviation: 'Calle' },\n                { name: 'Campiello', abbreviation: 'Cam.' },\n                { name: 'Campo', abbreviation: 'Cam.' },\n                { name: 'Canale', abbreviation: 'Can.' },\n                { name: 'Carraia', abbreviation: 'Carr.' },\n                { name: 'Cascina', abbreviation: 'Cascina' },\n                { name: 'Case sparse', abbreviation: 'c.s.' },\n                { name: 'Cavalcavia', abbreviation: 'Cv.' },\n                { name: 'Circonvallazione', abbreviation: 'Cv.' },\n                { name: 'Complanare', abbreviation: 'C.re' },\n                { name: 'Contrada', abbreviation: 'C.da' },\n                { name: 'Corso', abbreviation: 'C.so' },\n                { name: 'Corte', abbreviation: 'C.te' },\n                { name: 'Cortile', abbreviation: 'C.le' },\n                { name: 'Diramazione', abbreviation: 'Dir.' },\n                { name: 'Fondaco', abbreviation: 'F.co' },\n                { name: 'Fondamenta', abbreviation: 'F.ta' },\n                { name: 'Fondo', abbreviation: 'F.do' },\n                { name: 'Frazione', abbreviation: 'Fr.' },\n                { name: 'Isola', abbreviation: 'Is.' },\n                { name: 'Largo', abbreviation: 'L.go' },\n                { name: 'Litoranea', abbreviation: 'Lit.' },\n                { name: 'Lungolago', abbreviation: 'L.go lago' },\n                { name: 'Lungo Po', abbreviation: 'l.go Po' },\n                { name: 'Molo', abbreviation: 'Molo' },\n                { name: 'Mura', abbreviation: 'Mura' },\n                { name: 'Passaggio privato', abbreviation: 'pass. priv.' },\n                { name: 'Passeggiata', abbreviation: 'Pass.' },\n                { name: 'Piazza', abbreviation: 'P.zza' },\n                { name: 'Piazzale', abbreviation: 'P.le' },\n                { name: 'Ponte', abbreviation: 'P.te' },\n                { name: 'Portico', abbreviation: 'P.co' },\n                { name: 'Rampa', abbreviation: 'Rampa' },\n                { name: 'Regione', abbreviation: 'Reg.' },\n                { name: 'Rione', abbreviation: 'R.ne' },\n                { name: 'Rio', abbreviation: 'Rio' },\n                { name: 'Ripa', abbreviation: 'Ripa' },\n                { name: 'Riva', abbreviation: 'Riva' },\n                { name: 'Rondò', abbreviation: 'Rondò' },\n                { name: 'Rotonda', abbreviation: 'Rot.' },\n                { name: 'Sagrato', abbreviation: 'Sagr.' },\n                { name: 'Salita', abbreviation: 'Sal.' },\n                { name: 'Scalinata', abbreviation: 'Scal.' },\n                { name: 'Scalone', abbreviation: 'Scal.' },\n                { name: 'Slargo', abbreviation: 'Sl.' },\n                { name: 'Sottoportico', abbreviation: 'Sott.' },\n                { name: 'Strada', abbreviation: 'Str.' },\n                { name: 'Stradale', abbreviation: 'Str.le' },\n                { name: 'Strettoia', abbreviation: 'Strett.' },\n                { name: 'Traversa', abbreviation: 'Trav.' },\n                { name: 'Via', abbreviation: 'V.' },\n                { name: 'Viale', abbreviation: 'V.le' },\n                { name: 'Vicinale', abbreviation: 'Vic.le' },\n                { name: 'Vicolo', abbreviation: 'Vic.' }\n            ],\n            'uk' : [\n                {name: 'Avenue', abbreviation: 'Ave'},\n                {name: 'Close', abbreviation: 'Cl'},\n                {name: 'Court', abbreviation: 'Ct'},\n                {name: 'Crescent', abbreviation: 'Cr'},\n                {name: 'Drive', abbreviation: 'Dr'},\n                {name: 'Garden', abbreviation: 'Gdn'},\n                {name: 'Gardens', abbreviation: 'Gdns'},\n                {name: 'Green', abbreviation: 'Gn'},\n                {name: 'Grove', abbreviation: 'Gr'},\n                {name: 'Lane', abbreviation: 'Ln'},\n                {name: 'Mount', abbreviation: 'Mt'},\n                {name: 'Place', abbreviation: 'Pl'},\n                {name: 'Park', abbreviation: 'Pk'},\n                {name: 'Ridge', abbreviation: 'Rdg'},\n                {name: 'Road', abbreviation: 'Rd'},\n                {name: 'Square', abbreviation: 'Sq'},\n                {name: 'Street', abbreviation: 'St'},\n                {name: 'Terrace', abbreviation: 'Ter'},\n                {name: 'Valley', abbreviation: 'Val'}\n            ]\n        },\n\n        months: [\n            {name: 'January', short_name: 'Jan', numeric: '01', days: 31},\n            // Not messing with leap years...\n            {name: 'February', short_name: 'Feb', numeric: '02', days: 28},\n            {name: 'March', short_name: 'Mar', numeric: '03', days: 31},\n            {name: 'April', short_name: 'Apr', numeric: '04', days: 30},\n            {name: 'May', short_name: 'May', numeric: '05', days: 31},\n            {name: 'June', short_name: 'Jun', numeric: '06', days: 30},\n            {name: 'July', short_name: 'Jul', numeric: '07', days: 31},\n            {name: 'August', short_name: 'Aug', numeric: '08', days: 31},\n            {name: 'September', short_name: 'Sep', numeric: '09', days: 30},\n            {name: 'October', short_name: 'Oct', numeric: '10', days: 31},\n            {name: 'November', short_name: 'Nov', numeric: '11', days: 30},\n            {name: 'December', short_name: 'Dec', numeric: '12', days: 31}\n        ],\n\n        // http://en.wikipedia.org/wiki/Bank_card_number#Issuer_identification_number_.28IIN.29\n        cc_types: [\n            {name: \"American Express\", short_name: 'amex', prefix: '34', length: 15},\n            {name: \"Bankcard\", short_name: 'bankcard', prefix: '5610', length: 16},\n            {name: \"China UnionPay\", short_name: 'chinaunion', prefix: '62', length: 16},\n            {name: \"Diners Club Carte Blanche\", short_name: 'dccarte', prefix: '300', length: 14},\n            {name: \"Diners Club enRoute\", short_name: 'dcenroute', prefix: '2014', length: 15},\n            {name: \"Diners Club International\", short_name: 'dcintl', prefix: '36', length: 14},\n            {name: \"Diners Club United States & Canada\", short_name: 'dcusc', prefix: '54', length: 16},\n            {name: \"Discover Card\", short_name: 'discover', prefix: '6011', length: 16},\n            {name: \"InstaPayment\", short_name: 'instapay', prefix: '637', length: 16},\n            {name: \"JCB\", short_name: 'jcb', prefix: '3528', length: 16},\n            {name: \"Laser\", short_name: 'laser', prefix: '6304', length: 16},\n            {name: \"Maestro\", short_name: 'maestro', prefix: '5018', length: 16},\n            {name: \"Mastercard\", short_name: 'mc', prefix: '51', length: 16},\n            {name: \"Solo\", short_name: 'solo', prefix: '6334', length: 16},\n            {name: \"Switch\", short_name: 'switch', prefix: '4903', length: 16},\n            {name: \"Visa\", short_name: 'visa', prefix: '4', length: 16},\n            {name: \"Visa Electron\", short_name: 'electron', prefix: '4026', length: 16}\n        ],\n\n        //return all world currency by ISO 4217\n        currency_types: [\n            {'code' : 'AED', 'name' : 'United Arab Emirates Dirham'},\n            {'code' : 'AFN', 'name' : 'Afghanistan Afghani'},\n            {'code' : 'ALL', 'name' : 'Albania Lek'},\n            {'code' : 'AMD', 'name' : 'Armenia Dram'},\n            {'code' : 'ANG', 'name' : 'Netherlands Antilles Guilder'},\n            {'code' : 'AOA', 'name' : 'Angola Kwanza'},\n            {'code' : 'ARS', 'name' : 'Argentina Peso'},\n            {'code' : 'AUD', 'name' : 'Australia Dollar'},\n            {'code' : 'AWG', 'name' : 'Aruba Guilder'},\n            {'code' : 'AZN', 'name' : 'Azerbaijan New Manat'},\n            {'code' : 'BAM', 'name' : 'Bosnia and Herzegovina Convertible Marka'},\n            {'code' : 'BBD', 'name' : 'Barbados Dollar'},\n            {'code' : 'BDT', 'name' : 'Bangladesh Taka'},\n            {'code' : 'BGN', 'name' : 'Bulgaria Lev'},\n            {'code' : 'BHD', 'name' : 'Bahrain Dinar'},\n            {'code' : 'BIF', 'name' : 'Burundi Franc'},\n            {'code' : 'BMD', 'name' : 'Bermuda Dollar'},\n            {'code' : 'BND', 'name' : 'Brunei Darussalam Dollar'},\n            {'code' : 'BOB', 'name' : 'Bolivia Boliviano'},\n            {'code' : 'BRL', 'name' : 'Brazil Real'},\n            {'code' : 'BSD', 'name' : 'Bahamas Dollar'},\n            {'code' : 'BTN', 'name' : 'Bhutan Ngultrum'},\n            {'code' : 'BWP', 'name' : 'Botswana Pula'},\n            {'code' : 'BYR', 'name' : 'Belarus Ruble'},\n            {'code' : 'BZD', 'name' : 'Belize Dollar'},\n            {'code' : 'CAD', 'name' : 'Canada Dollar'},\n            {'code' : 'CDF', 'name' : 'Congo/Kinshasa Franc'},\n            {'code' : 'CHF', 'name' : 'Switzerland Franc'},\n            {'code' : 'CLP', 'name' : 'Chile Peso'},\n            {'code' : 'CNY', 'name' : 'China Yuan Renminbi'},\n            {'code' : 'COP', 'name' : 'Colombia Peso'},\n            {'code' : 'CRC', 'name' : 'Costa Rica Colon'},\n            {'code' : 'CUC', 'name' : 'Cuba Convertible Peso'},\n            {'code' : 'CUP', 'name' : 'Cuba Peso'},\n            {'code' : 'CVE', 'name' : 'Cape Verde Escudo'},\n            {'code' : 'CZK', 'name' : 'Czech Republic Koruna'},\n            {'code' : 'DJF', 'name' : 'Djibouti Franc'},\n            {'code' : 'DKK', 'name' : 'Denmark Krone'},\n            {'code' : 'DOP', 'name' : 'Dominican Republic Peso'},\n            {'code' : 'DZD', 'name' : 'Algeria Dinar'},\n            {'code' : 'EGP', 'name' : 'Egypt Pound'},\n            {'code' : 'ERN', 'name' : 'Eritrea Nakfa'},\n            {'code' : 'ETB', 'name' : 'Ethiopia Birr'},\n            {'code' : 'EUR', 'name' : 'Euro Member Countries'},\n            {'code' : 'FJD', 'name' : 'Fiji Dollar'},\n            {'code' : 'FKP', 'name' : 'Falkland Islands (Malvinas) Pound'},\n            {'code' : 'GBP', 'name' : 'United Kingdom Pound'},\n            {'code' : 'GEL', 'name' : 'Georgia Lari'},\n            {'code' : 'GGP', 'name' : 'Guernsey Pound'},\n            {'code' : 'GHS', 'name' : 'Ghana Cedi'},\n            {'code' : 'GIP', 'name' : 'Gibraltar Pound'},\n            {'code' : 'GMD', 'name' : 'Gambia Dalasi'},\n            {'code' : 'GNF', 'name' : 'Guinea Franc'},\n            {'code' : 'GTQ', 'name' : 'Guatemala Quetzal'},\n            {'code' : 'GYD', 'name' : 'Guyana Dollar'},\n            {'code' : 'HKD', 'name' : 'Hong Kong Dollar'},\n            {'code' : 'HNL', 'name' : 'Honduras Lempira'},\n            {'code' : 'HRK', 'name' : 'Croatia Kuna'},\n            {'code' : 'HTG', 'name' : 'Haiti Gourde'},\n            {'code' : 'HUF', 'name' : 'Hungary Forint'},\n            {'code' : 'IDR', 'name' : 'Indonesia Rupiah'},\n            {'code' : 'ILS', 'name' : 'Israel Shekel'},\n            {'code' : 'IMP', 'name' : 'Isle of Man Pound'},\n            {'code' : 'INR', 'name' : 'India Rupee'},\n            {'code' : 'IQD', 'name' : 'Iraq Dinar'},\n            {'code' : 'IRR', 'name' : 'Iran Rial'},\n            {'code' : 'ISK', 'name' : 'Iceland Krona'},\n            {'code' : 'JEP', 'name' : 'Jersey Pound'},\n            {'code' : 'JMD', 'name' : 'Jamaica Dollar'},\n            {'code' : 'JOD', 'name' : 'Jordan Dinar'},\n            {'code' : 'JPY', 'name' : 'Japan Yen'},\n            {'code' : 'KES', 'name' : 'Kenya Shilling'},\n            {'code' : 'KGS', 'name' : 'Kyrgyzstan Som'},\n            {'code' : 'KHR', 'name' : 'Cambodia Riel'},\n            {'code' : 'KMF', 'name' : 'Comoros Franc'},\n            {'code' : 'KPW', 'name' : 'Korea (North) Won'},\n            {'code' : 'KRW', 'name' : 'Korea (South) Won'},\n            {'code' : 'KWD', 'name' : 'Kuwait Dinar'},\n            {'code' : 'KYD', 'name' : 'Cayman Islands Dollar'},\n            {'code' : 'KZT', 'name' : 'Kazakhstan Tenge'},\n            {'code' : 'LAK', 'name' : 'Laos Kip'},\n            {'code' : 'LBP', 'name' : 'Lebanon Pound'},\n            {'code' : 'LKR', 'name' : 'Sri Lanka Rupee'},\n            {'code' : 'LRD', 'name' : 'Liberia Dollar'},\n            {'code' : 'LSL', 'name' : 'Lesotho Loti'},\n            {'code' : 'LTL', 'name' : 'Lithuania Litas'},\n            {'code' : 'LYD', 'name' : 'Libya Dinar'},\n            {'code' : 'MAD', 'name' : 'Morocco Dirham'},\n            {'code' : 'MDL', 'name' : 'Moldova Leu'},\n            {'code' : 'MGA', 'name' : 'Madagascar Ariary'},\n            {'code' : 'MKD', 'name' : 'Macedonia Denar'},\n            {'code' : 'MMK', 'name' : 'Myanmar (Burma) Kyat'},\n            {'code' : 'MNT', 'name' : 'Mongolia Tughrik'},\n            {'code' : 'MOP', 'name' : 'Macau Pataca'},\n            {'code' : 'MRO', 'name' : 'Mauritania Ouguiya'},\n            {'code' : 'MUR', 'name' : 'Mauritius Rupee'},\n            {'code' : 'MVR', 'name' : 'Maldives (Maldive Islands) Rufiyaa'},\n            {'code' : 'MWK', 'name' : 'Malawi Kwacha'},\n            {'code' : 'MXN', 'name' : 'Mexico Peso'},\n            {'code' : 'MYR', 'name' : 'Malaysia Ringgit'},\n            {'code' : 'MZN', 'name' : 'Mozambique Metical'},\n            {'code' : 'NAD', 'name' : 'Namibia Dollar'},\n            {'code' : 'NGN', 'name' : 'Nigeria Naira'},\n            {'code' : 'NIO', 'name' : 'Nicaragua Cordoba'},\n            {'code' : 'NOK', 'name' : 'Norway Krone'},\n            {'code' : 'NPR', 'name' : 'Nepal Rupee'},\n            {'code' : 'NZD', 'name' : 'New Zealand Dollar'},\n            {'code' : 'OMR', 'name' : 'Oman Rial'},\n            {'code' : 'PAB', 'name' : 'Panama Balboa'},\n            {'code' : 'PEN', 'name' : 'Peru Nuevo Sol'},\n            {'code' : 'PGK', 'name' : 'Papua New Guinea Kina'},\n            {'code' : 'PHP', 'name' : 'Philippines Peso'},\n            {'code' : 'PKR', 'name' : 'Pakistan Rupee'},\n            {'code' : 'PLN', 'name' : 'Poland Zloty'},\n            {'code' : 'PYG', 'name' : 'Paraguay Guarani'},\n            {'code' : 'QAR', 'name' : 'Qatar Riyal'},\n            {'code' : 'RON', 'name' : 'Romania New Leu'},\n            {'code' : 'RSD', 'name' : 'Serbia Dinar'},\n            {'code' : 'RUB', 'name' : 'Russia Ruble'},\n            {'code' : 'RWF', 'name' : 'Rwanda Franc'},\n            {'code' : 'SAR', 'name' : 'Saudi Arabia Riyal'},\n            {'code' : 'SBD', 'name' : 'Solomon Islands Dollar'},\n            {'code' : 'SCR', 'name' : 'Seychelles Rupee'},\n            {'code' : 'SDG', 'name' : 'Sudan Pound'},\n            {'code' : 'SEK', 'name' : 'Sweden Krona'},\n            {'code' : 'SGD', 'name' : 'Singapore Dollar'},\n            {'code' : 'SHP', 'name' : 'Saint Helena Pound'},\n            {'code' : 'SLL', 'name' : 'Sierra Leone Leone'},\n            {'code' : 'SOS', 'name' : 'Somalia Shilling'},\n            {'code' : 'SPL', 'name' : 'Seborga Luigino'},\n            {'code' : 'SRD', 'name' : 'Suriname Dollar'},\n            {'code' : 'STD', 'name' : 'São Tomé and Príncipe Dobra'},\n            {'code' : 'SVC', 'name' : 'El Salvador Colon'},\n            {'code' : 'SYP', 'name' : 'Syria Pound'},\n            {'code' : 'SZL', 'name' : 'Swaziland Lilangeni'},\n            {'code' : 'THB', 'name' : 'Thailand Baht'},\n            {'code' : 'TJS', 'name' : 'Tajikistan Somoni'},\n            {'code' : 'TMT', 'name' : 'Turkmenistan Manat'},\n            {'code' : 'TND', 'name' : 'Tunisia Dinar'},\n            {'code' : 'TOP', 'name' : 'Tonga Pa\\'anga'},\n            {'code' : 'TRY', 'name' : 'Turkey Lira'},\n            {'code' : 'TTD', 'name' : 'Trinidad and Tobago Dollar'},\n            {'code' : 'TVD', 'name' : 'Tuvalu Dollar'},\n            {'code' : 'TWD', 'name' : 'Taiwan New Dollar'},\n            {'code' : 'TZS', 'name' : 'Tanzania Shilling'},\n            {'code' : 'UAH', 'name' : 'Ukraine Hryvnia'},\n            {'code' : 'UGX', 'name' : 'Uganda Shilling'},\n            {'code' : 'USD', 'name' : 'United States Dollar'},\n            {'code' : 'UYU', 'name' : 'Uruguay Peso'},\n            {'code' : 'UZS', 'name' : 'Uzbekistan Som'},\n            {'code' : 'VEF', 'name' : 'Venezuela Bolivar'},\n            {'code' : 'VND', 'name' : 'Viet Nam Dong'},\n            {'code' : 'VUV', 'name' : 'Vanuatu Vatu'},\n            {'code' : 'WST', 'name' : 'Samoa Tala'},\n            {'code' : 'XAF', 'name' : 'Communauté Financière Africaine (BEAC) CFA Franc BEAC'},\n            {'code' : 'XCD', 'name' : 'East Caribbean Dollar'},\n            {'code' : 'XDR', 'name' : 'International Monetary Fund (IMF) Special Drawing Rights'},\n            {'code' : 'XOF', 'name' : 'Communauté Financière Africaine (BCEAO) Franc'},\n            {'code' : 'XPF', 'name' : 'Comptoirs Français du Pacifique (CFP) Franc'},\n            {'code' : 'YER', 'name' : 'Yemen Rial'},\n            {'code' : 'ZAR', 'name' : 'South Africa Rand'},\n            {'code' : 'ZMW', 'name' : 'Zambia Kwacha'},\n            {'code' : 'ZWD', 'name' : 'Zimbabwe Dollar'}\n        ],\n\n        // return the names of all valide colors\n        colorNames : [  \"AliceBlue\", \"Black\", \"Navy\", \"DarkBlue\", \"MediumBlue\", \"Blue\", \"DarkGreen\", \"Green\", \"Teal\", \"DarkCyan\", \"DeepSkyBlue\", \"DarkTurquoise\", \"MediumSpringGreen\", \"Lime\", \"SpringGreen\",\n            \"Aqua\", \"Cyan\", \"MidnightBlue\", \"DodgerBlue\", \"LightSeaGreen\", \"ForestGreen\", \"SeaGreen\", \"DarkSlateGray\", \"LimeGreen\", \"MediumSeaGreen\", \"Turquoise\", \"RoyalBlue\", \"SteelBlue\", \"DarkSlateBlue\", \"MediumTurquoise\",\n            \"Indigo\", \"DarkOliveGreen\", \"CadetBlue\", \"CornflowerBlue\", \"RebeccaPurple\", \"MediumAquaMarine\", \"DimGray\", \"SlateBlue\", \"OliveDrab\", \"SlateGray\", \"LightSlateGray\", \"MediumSlateBlue\", \"LawnGreen\", \"Chartreuse\",\n            \"Aquamarine\", \"Maroon\", \"Purple\", \"Olive\", \"Gray\", \"SkyBlue\", \"LightSkyBlue\", \"BlueViolet\", \"DarkRed\", \"DarkMagenta\", \"SaddleBrown\", \"Ivory\", \"White\",\n            \"DarkSeaGreen\", \"LightGreen\", \"MediumPurple\", \"DarkViolet\", \"PaleGreen\", \"DarkOrchid\", \"YellowGreen\", \"Sienna\", \"Brown\", \"DarkGray\", \"LightBlue\", \"GreenYellow\", \"PaleTurquoise\", \"LightSteelBlue\", \"PowderBlue\",\n            \"FireBrick\", \"DarkGoldenRod\", \"MediumOrchid\", \"RosyBrown\", \"DarkKhaki\", \"Silver\", \"MediumVioletRed\", \"IndianRed\", \"Peru\", \"Chocolate\", \"Tan\", \"LightGray\", \"Thistle\", \"Orchid\", \"GoldenRod\", \"PaleVioletRed\",\n            \"Crimson\", \"Gainsboro\", \"Plum\", \"BurlyWood\", \"LightCyan\", \"Lavender\", \"DarkSalmon\", \"Violet\", \"PaleGoldenRod\", \"LightCoral\", \"Khaki\", \"AliceBlue\", \"HoneyDew\", \"Azure\", \"SandyBrown\", \"Wheat\", \"Beige\", \"WhiteSmoke\",\n            \"MintCream\", \"GhostWhite\", \"Salmon\", \"AntiqueWhite\", \"Linen\", \"LightGoldenRodYellow\", \"OldLace\", \"Red\", \"Fuchsia\", \"Magenta\", \"DeepPink\", \"OrangeRed\", \"Tomato\", \"HotPink\", \"Coral\", \"DarkOrange\", \"LightSalmon\", \"Orange\",\n            \"LightPink\", \"Pink\", \"Gold\", \"PeachPuff\", \"NavajoWhite\", \"Moccasin\", \"Bisque\", \"MistyRose\", \"BlanchedAlmond\", \"PapayaWhip\", \"LavenderBlush\", \"SeaShell\", \"Cornsilk\", \"LemonChiffon\", \"FloralWhite\", \"Snow\", \"Yellow\", \"LightYellow\"\n        ],\n\n        // Data taken from https://www.sec.gov/rules/other/4-460list.htm\n        company: [ \"3Com Corp\",\n        \"3M Company\",\n        \"A.G. Edwards Inc.\",\n        \"Abbott Laboratories\",\n        \"Abercrombie & Fitch Co.\",\n        \"ABM Industries Incorporated\",\n        \"Ace Hardware Corporation\",\n        \"ACT Manufacturing Inc.\",\n        \"Acterna Corp.\",\n        \"Adams Resources & Energy, Inc.\",\n        \"ADC Telecommunications, Inc.\",\n        \"Adelphia Communications Corporation\",\n        \"Administaff, Inc.\",\n        \"Adobe Systems Incorporated\",\n        \"Adolph Coors Company\",\n        \"Advance Auto Parts, Inc.\",\n        \"Advanced Micro Devices, Inc.\",\n        \"AdvancePCS, Inc.\",\n        \"Advantica Restaurant Group, Inc.\",\n        \"The AES Corporation\",\n        \"Aetna Inc.\",\n        \"Affiliated Computer Services, Inc.\",\n        \"AFLAC Incorporated\",\n        \"AGCO Corporation\",\n        \"Agilent Technologies, Inc.\",\n        \"Agway Inc.\",\n        \"Apartment Investment and Management Company\",\n        \"Air Products and Chemicals, Inc.\",\n        \"Airborne, Inc.\",\n        \"Airgas, Inc.\",\n        \"AK Steel Holding Corporation\",\n        \"Alaska Air Group, Inc.\",\n        \"Alberto-Culver Company\",\n        \"Albertson's, Inc.\",\n        \"Alcoa Inc.\",\n        \"Alleghany Corporation\",\n        \"Allegheny Energy, Inc.\",\n        \"Allegheny Technologies Incorporated\",\n        \"Allergan, Inc.\",\n        \"ALLETE, Inc.\",\n        \"Alliant Energy Corporation\",\n        \"Allied Waste Industries, Inc.\",\n        \"Allmerica Financial Corporation\",\n        \"The Allstate Corporation\",\n        \"ALLTEL Corporation\",\n        \"The Alpine Group, Inc.\",\n        \"Amazon.com, Inc.\",\n        \"AMC Entertainment Inc.\",\n        \"American Power Conversion Corporation\",\n        \"Amerada Hess Corporation\",\n        \"AMERCO\",\n        \"Ameren Corporation\",\n        \"America West Holdings Corporation\",\n        \"American Axle & Manufacturing Holdings, Inc.\",\n        \"American Eagle Outfitters, Inc.\",\n        \"American Electric Power Company, Inc.\",\n        \"American Express Company\",\n        \"American Financial Group, Inc.\",\n        \"American Greetings Corporation\",\n        \"American International Group, Inc.\",\n        \"American Standard Companies Inc.\",\n        \"American Water Works Company, Inc.\",\n        \"AmerisourceBergen Corporation\",\n        \"Ames Department Stores, Inc.\",\n        \"Amgen Inc.\",\n        \"Amkor Technology, Inc.\",\n        \"AMR Corporation\",\n        \"AmSouth Bancorp.\",\n        \"Amtran, Inc.\",\n        \"Anadarko Petroleum Corporation\",\n        \"Analog Devices, Inc.\",\n        \"Anheuser-Busch Companies, Inc.\",\n        \"Anixter International Inc.\",\n        \"AnnTaylor Inc.\",\n        \"Anthem, Inc.\",\n        \"AOL Time Warner Inc.\",\n        \"Aon Corporation\",\n        \"Apache Corporation\",\n        \"Apple Computer, Inc.\",\n        \"Applera Corporation\",\n        \"Applied Industrial Technologies, Inc.\",\n        \"Applied Materials, Inc.\",\n        \"Aquila, Inc.\",\n        \"ARAMARK Corporation\",\n        \"Arch Coal, Inc.\",\n        \"Archer Daniels Midland Company\",\n        \"Arkansas Best Corporation\",\n        \"Armstrong Holdings, Inc.\",\n        \"Arrow Electronics, Inc.\",\n        \"ArvinMeritor, Inc.\",\n        \"Ashland Inc.\",\n        \"Astoria Financial Corporation\",\n        \"AT&T Corp.\",\n        \"Atmel Corporation\",\n        \"Atmos Energy Corporation\",\n        \"Audiovox Corporation\",\n        \"Autoliv, Inc.\",\n        \"Automatic Data Processing, Inc.\",\n        \"AutoNation, Inc.\",\n        \"AutoZone, Inc.\",\n        \"Avaya Inc.\",\n        \"Avery Dennison Corporation\",\n        \"Avista Corporation\",\n        \"Avnet, Inc.\",\n        \"Avon Products, Inc.\",\n        \"Baker Hughes Incorporated\",\n        \"Ball Corporation\",\n        \"Bank of America Corporation\",\n        \"The Bank of New York Company, Inc.\",\n        \"Bank One Corporation\",\n        \"Banknorth Group, Inc.\",\n        \"Banta Corporation\",\n        \"Barnes & Noble, Inc.\",\n        \"Bausch & Lomb Incorporated\",\n        \"Baxter International Inc.\",\n        \"BB&T Corporation\",\n        \"The Bear Stearns Companies Inc.\",\n        \"Beazer Homes USA, Inc.\",\n        \"Beckman Coulter, Inc.\",\n        \"Becton, Dickinson and Company\",\n        \"Bed Bath & Beyond Inc.\",\n        \"Belk, Inc.\",\n        \"Bell Microproducts Inc.\",\n        \"BellSouth Corporation\",\n        \"Belo Corp.\",\n        \"Bemis Company, Inc.\",\n        \"Benchmark Electronics, Inc.\",\n        \"Berkshire Hathaway Inc.\",\n        \"Best Buy Co., Inc.\",\n        \"Bethlehem Steel Corporation\",\n        \"Beverly Enterprises, Inc.\",\n        \"Big Lots, Inc.\",\n        \"BJ Services Company\",\n        \"BJ's Wholesale Club, Inc.\",\n        \"The Black & Decker Corporation\",\n        \"Black Hills Corporation\",\n        \"BMC Software, Inc.\",\n        \"The Boeing Company\",\n        \"Boise Cascade Corporation\",\n        \"Borders Group, Inc.\",\n        \"BorgWarner Inc.\",\n        \"Boston Scientific Corporation\",\n        \"Bowater Incorporated\",\n        \"Briggs & Stratton Corporation\",\n        \"Brightpoint, Inc.\",\n        \"Brinker International, Inc.\",\n        \"Bristol-Myers Squibb Company\",\n        \"Broadwing, Inc.\",\n        \"Brown Shoe Company, Inc.\",\n        \"Brown-Forman Corporation\",\n        \"Brunswick Corporation\",\n        \"Budget Group, Inc.\",\n        \"Burlington Coat Factory Warehouse Corporation\",\n        \"Burlington Industries, Inc.\",\n        \"Burlington Northern Santa Fe Corporation\",\n        \"Burlington Resources Inc.\",\n        \"C. H. Robinson Worldwide Inc.\",\n        \"Cablevision Systems Corp\",\n        \"Cabot Corp\",\n        \"Cadence Design Systems, Inc.\",\n        \"Calpine Corp.\",\n        \"Campbell Soup Co.\",\n        \"Capital One Financial Corp.\",\n        \"Cardinal Health Inc.\",\n        \"Caremark Rx Inc.\",\n        \"Carlisle Cos. Inc.\",\n        \"Carpenter Technology Corp.\",\n        \"Casey's General Stores Inc.\",\n        \"Caterpillar Inc.\",\n        \"CBRL Group Inc.\",\n        \"CDI Corp.\",\n        \"CDW Computer Centers Inc.\",\n        \"CellStar Corp.\",\n        \"Cendant Corp\",\n        \"Cenex Harvest States Cooperatives\",\n        \"Centex Corp.\",\n        \"CenturyTel Inc.\",\n        \"Ceridian Corp.\",\n        \"CH2M Hill Cos. Ltd.\",\n        \"Champion Enterprises Inc.\",\n        \"Charles Schwab Corp.\",\n        \"Charming Shoppes Inc.\",\n        \"Charter Communications Inc.\",\n        \"Charter One Financial Inc.\",\n        \"ChevronTexaco Corp.\",\n        \"Chiquita Brands International Inc.\",\n        \"Chubb Corp\",\n        \"Ciena Corp.\",\n        \"Cigna Corp\",\n        \"Cincinnati Financial Corp.\",\n        \"Cinergy Corp.\",\n        \"Cintas Corp.\",\n        \"Circuit City Stores Inc.\",\n        \"Cisco Systems Inc.\",\n        \"Citigroup, Inc\",\n        \"Citizens Communications Co.\",\n        \"CKE Restaurants Inc.\",\n        \"Clear Channel Communications Inc.\",\n        \"The Clorox Co.\",\n        \"CMGI Inc.\",\n        \"CMS Energy Corp.\",\n        \"CNF Inc.\",\n        \"Coca-Cola Co.\",\n        \"Coca-Cola Enterprises Inc.\",\n        \"Colgate-Palmolive Co.\",\n        \"Collins & Aikman Corp.\",\n        \"Comcast Corp.\",\n        \"Comdisco Inc.\",\n        \"Comerica Inc.\",\n        \"Comfort Systems USA Inc.\",\n        \"Commercial Metals Co.\",\n        \"Community Health Systems Inc.\",\n        \"Compass Bancshares Inc\",\n        \"Computer Associates International Inc.\",\n        \"Computer Sciences Corp.\",\n        \"Compuware Corp.\",\n        \"Comverse Technology Inc.\",\n        \"ConAgra Foods Inc.\",\n        \"Concord EFS Inc.\",\n        \"Conectiv, Inc\",\n        \"Conoco Inc\",\n        \"Conseco Inc.\",\n        \"Consolidated Freightways Corp.\",\n        \"Consolidated Edison Inc.\",\n        \"Constellation Brands Inc.\",\n        \"Constellation Emergy Group Inc.\",\n        \"Continental Airlines Inc.\",\n        \"Convergys Corp.\",\n        \"Cooper Cameron Corp.\",\n        \"Cooper Industries Ltd.\",\n        \"Cooper Tire & Rubber Co.\",\n        \"Corn Products International Inc.\",\n        \"Corning Inc.\",\n        \"Costco Wholesale Corp.\",\n        \"Countrywide Credit Industries Inc.\",\n        \"Coventry Health Care Inc.\",\n        \"Cox Communications Inc.\",\n        \"Crane Co.\",\n        \"Crompton Corp.\",\n        \"Crown Cork & Seal Co. Inc.\",\n        \"CSK Auto Corp.\",\n        \"CSX Corp.\",\n        \"Cummins Inc.\",\n        \"CVS Corp.\",\n        \"Cytec Industries Inc.\",\n        \"D&K Healthcare Resources, Inc.\",\n        \"D.R. Horton Inc.\",\n        \"Dana Corporation\",\n        \"Danaher Corporation\",\n        \"Darden Restaurants Inc.\",\n        \"DaVita Inc.\",\n        \"Dean Foods Company\",\n        \"Deere & Company\",\n        \"Del Monte Foods Co\",\n        \"Dell Computer Corporation\",\n        \"Delphi Corp.\",\n        \"Delta Air Lines Inc.\",\n        \"Deluxe Corporation\",\n        \"Devon Energy Corporation\",\n        \"Di Giorgio Corporation\",\n        \"Dial Corporation\",\n        \"Diebold Incorporated\",\n        \"Dillard's Inc.\",\n        \"DIMON Incorporated\",\n        \"Dole Food Company, Inc.\",\n        \"Dollar General Corporation\",\n        \"Dollar Tree Stores, Inc.\",\n        \"Dominion Resources, Inc.\",\n        \"Domino's Pizza LLC\",\n        \"Dover Corporation, Inc.\",\n        \"Dow Chemical Company\",\n        \"Dow Jones & Company, Inc.\",\n        \"DPL Inc.\",\n        \"DQE Inc.\",\n        \"Dreyer's Grand Ice Cream, Inc.\",\n        \"DST Systems, Inc.\",\n        \"DTE Energy Co.\",\n        \"E.I. Du Pont de Nemours and Company\",\n        \"Duke Energy Corp\",\n        \"Dun & Bradstreet Inc.\",\n        \"DURA Automotive Systems Inc.\",\n        \"DynCorp\",\n        \"Dynegy Inc.\",\n        \"E*Trade Group, Inc.\",\n        \"E.W. Scripps Company\",\n        \"Earthlink, Inc.\",\n        \"Eastman Chemical Company\",\n        \"Eastman Kodak Company\",\n        \"Eaton Corporation\",\n        \"Echostar Communications Corporation\",\n        \"Ecolab Inc.\",\n        \"Edison International\",\n        \"EGL Inc.\",\n        \"El Paso Corporation\",\n        \"Electronic Arts Inc.\",\n        \"Electronic Data Systems Corp.\",\n        \"Eli Lilly and Company\",\n        \"EMC Corporation\",\n        \"Emcor Group Inc.\",\n        \"Emerson Electric Co.\",\n        \"Encompass Services Corporation\",\n        \"Energizer Holdings Inc.\",\n        \"Energy East Corporation\",\n        \"Engelhard Corporation\",\n        \"Enron Corp.\",\n        \"Entergy Corporation\",\n        \"Enterprise Products Partners L.P.\",\n        \"EOG Resources, Inc.\",\n        \"Equifax Inc.\",\n        \"Equitable Resources Inc.\",\n        \"Equity Office Properties Trust\",\n        \"Equity Residential Properties Trust\",\n        \"Estee Lauder Companies Inc.\",\n        \"Exelon Corporation\",\n        \"Exide Technologies\",\n        \"Expeditors International of Washington Inc.\",\n        \"Express Scripts Inc.\",\n        \"ExxonMobil Corporation\",\n        \"Fairchild Semiconductor International Inc.\",\n        \"Family Dollar Stores Inc.\",\n        \"Farmland Industries Inc.\",\n        \"Federal Mogul Corp.\",\n        \"Federated Department Stores Inc.\",\n        \"Federal Express Corp.\",\n        \"Felcor Lodging Trust Inc.\",\n        \"Ferro Corp.\",\n        \"Fidelity National Financial Inc.\",\n        \"Fifth Third Bancorp\",\n        \"First American Financial Corp.\",\n        \"First Data Corp.\",\n        \"First National of Nebraska Inc.\",\n        \"First Tennessee National Corp.\",\n        \"FirstEnergy Corp.\",\n        \"Fiserv Inc.\",\n        \"Fisher Scientific International Inc.\",\n        \"FleetBoston Financial Co.\",\n        \"Fleetwood Enterprises Inc.\",\n        \"Fleming Companies Inc.\",\n        \"Flowers Foods Inc.\",\n        \"Flowserv Corp\",\n        \"Fluor Corp\",\n        \"FMC Corp\",\n        \"Foamex International Inc\",\n        \"Foot Locker Inc\",\n        \"Footstar Inc.\",\n        \"Ford Motor Co\",\n        \"Forest Laboratories Inc.\",\n        \"Fortune Brands Inc.\",\n        \"Foster Wheeler Ltd.\",\n        \"FPL Group Inc.\",\n        \"Franklin Resources Inc.\",\n        \"Freeport McMoran Copper & Gold Inc.\",\n        \"Frontier Oil Corp\",\n        \"Furniture Brands International Inc.\",\n        \"Gannett Co., Inc.\",\n        \"Gap Inc.\",\n        \"Gateway Inc.\",\n        \"GATX Corporation\",\n        \"Gemstar-TV Guide International Inc.\",\n        \"GenCorp Inc.\",\n        \"General Cable Corporation\",\n        \"General Dynamics Corporation\",\n        \"General Electric Company\",\n        \"General Mills Inc\",\n        \"General Motors Corporation\",\n        \"Genesis Health Ventures Inc.\",\n        \"Gentek Inc.\",\n        \"Gentiva Health Services Inc.\",\n        \"Genuine Parts Company\",\n        \"Genuity Inc.\",\n        \"Genzyme Corporation\",\n        \"Georgia Gulf Corporation\",\n        \"Georgia-Pacific Corporation\",\n        \"Gillette Company\",\n        \"Gold Kist Inc.\",\n        \"Golden State Bancorp Inc.\",\n        \"Golden West Financial Corporation\",\n        \"Goldman Sachs Group Inc.\",\n        \"Goodrich Corporation\",\n        \"The Goodyear Tire & Rubber Company\",\n        \"Granite Construction Incorporated\",\n        \"Graybar Electric Company Inc.\",\n        \"Great Lakes Chemical Corporation\",\n        \"Great Plains Energy Inc.\",\n        \"GreenPoint Financial Corp.\",\n        \"Greif Bros. Corporation\",\n        \"Grey Global Group Inc.\",\n        \"Group 1 Automotive Inc.\",\n        \"Guidant Corporation\",\n        \"H&R Block Inc.\",\n        \"H.B. Fuller Company\",\n        \"H.J. Heinz Company\",\n        \"Halliburton Co.\",\n        \"Harley-Davidson Inc.\",\n        \"Harman International Industries Inc.\",\n        \"Harrah's Entertainment Inc.\",\n        \"Harris Corp.\",\n        \"Harsco Corp.\",\n        \"Hartford Financial Services Group Inc.\",\n        \"Hasbro Inc.\",\n        \"Hawaiian Electric Industries Inc.\",\n        \"HCA Inc.\",\n        \"Health Management Associates Inc.\",\n        \"Health Net Inc.\",\n        \"Healthsouth Corp\",\n        \"Henry Schein Inc.\",\n        \"Hercules Inc.\",\n        \"Herman Miller Inc.\",\n        \"Hershey Foods Corp.\",\n        \"Hewlett-Packard Company\",\n        \"Hibernia Corp.\",\n        \"Hillenbrand Industries Inc.\",\n        \"Hilton Hotels Corp.\",\n        \"Hollywood Entertainment Corp.\",\n        \"Home Depot Inc.\",\n        \"Hon Industries Inc.\",\n        \"Honeywell International Inc.\",\n        \"Hormel Foods Corp.\",\n        \"Host Marriott Corp.\",\n        \"Household International Corp.\",\n        \"Hovnanian Enterprises Inc.\",\n        \"Hub Group Inc.\",\n        \"Hubbell Inc.\",\n        \"Hughes Supply Inc.\",\n        \"Humana Inc.\",\n        \"Huntington Bancshares Inc.\",\n        \"Idacorp Inc.\",\n        \"IDT Corporation\",\n        \"IKON Office Solutions Inc.\",\n        \"Illinois Tool Works Inc.\",\n        \"IMC Global Inc.\",\n        \"Imperial Sugar Company\",\n        \"IMS Health Inc.\",\n        \"Ingles Market Inc\",\n        \"Ingram Micro Inc.\",\n        \"Insight Enterprises Inc.\",\n        \"Integrated Electrical Services Inc.\",\n        \"Intel Corporation\",\n        \"International Paper Co.\",\n        \"Interpublic Group of Companies Inc.\",\n        \"Interstate Bakeries Corporation\",\n        \"International Business Machines Corp.\",\n        \"International Flavors & Fragrances Inc.\",\n        \"International Multifoods Corporation\",\n        \"Intuit Inc.\",\n        \"IT Group Inc.\",\n        \"ITT Industries Inc.\",\n        \"Ivax Corp.\",\n        \"J.B. Hunt Transport Services Inc.\",\n        \"J.C. Penny Co.\",\n        \"J.P. Morgan Chase & Co.\",\n        \"Jabil Circuit Inc.\",\n        \"Jack In The Box Inc.\",\n        \"Jacobs Engineering Group Inc.\",\n        \"JDS Uniphase Corp.\",\n        \"Jefferson-Pilot Co.\",\n        \"John Hancock Financial Services Inc.\",\n        \"Johnson & Johnson\",\n        \"Johnson Controls Inc.\",\n        \"Jones Apparel Group Inc.\",\n        \"KB Home\",\n        \"Kellogg Company\",\n        \"Kellwood Company\",\n        \"Kelly Services Inc.\",\n        \"Kemet Corp.\",\n        \"Kennametal Inc.\",\n        \"Kerr-McGee Corporation\",\n        \"KeyCorp\",\n        \"KeySpan Corp.\",\n        \"Kimball International Inc.\",\n        \"Kimberly-Clark Corporation\",\n        \"Kindred Healthcare Inc.\",\n        \"KLA-Tencor Corporation\",\n        \"K-Mart Corp.\",\n        \"Knight-Ridder Inc.\",\n        \"Kohl's Corp.\",\n        \"KPMG Consulting Inc.\",\n        \"Kroger Co.\",\n        \"L-3 Communications Holdings Inc.\",\n        \"Laboratory Corporation of America Holdings\",\n        \"Lam Research Corporation\",\n        \"LandAmerica Financial Group Inc.\",\n        \"Lands' End Inc.\",\n        \"Landstar System Inc.\",\n        \"La-Z-Boy Inc.\",\n        \"Lear Corporation\",\n        \"Legg Mason Inc.\",\n        \"Leggett & Platt Inc.\",\n        \"Lehman Brothers Holdings Inc.\",\n        \"Lennar Corporation\",\n        \"Lennox International Inc.\",\n        \"Level 3 Communications Inc.\",\n        \"Levi Strauss & Co.\",\n        \"Lexmark International Inc.\",\n        \"Limited Inc.\",\n        \"Lincoln National Corporation\",\n        \"Linens 'n Things Inc.\",\n        \"Lithia Motors Inc.\",\n        \"Liz Claiborne Inc.\",\n        \"Lockheed Martin Corporation\",\n        \"Loews Corporation\",\n        \"Longs Drug Stores Corporation\",\n        \"Louisiana-Pacific Corporation\",\n        \"Lowe's Companies Inc.\",\n        \"LSI Logic Corporation\",\n        \"The LTV Corporation\",\n        \"The Lubrizol Corporation\",\n        \"Lucent Technologies Inc.\",\n        \"Lyondell Chemical Company\",\n        \"M & T Bank Corporation\",\n        \"Magellan Health Services Inc.\",\n        \"Mail-Well Inc.\",\n        \"Mandalay Resort Group\",\n        \"Manor Care Inc.\",\n        \"Manpower Inc.\",\n        \"Marathon Oil Corporation\",\n        \"Mariner Health Care Inc.\",\n        \"Markel Corporation\",\n        \"Marriott International Inc.\",\n        \"Marsh & McLennan Companies Inc.\",\n        \"Marsh Supermarkets Inc.\",\n        \"Marshall & Ilsley Corporation\",\n        \"Martin Marietta Materials Inc.\",\n        \"Masco Corporation\",\n        \"Massey Energy Company\",\n        \"MasTec Inc.\",\n        \"Mattel Inc.\",\n        \"Maxim Integrated Products Inc.\",\n        \"Maxtor Corporation\",\n        \"Maxxam Inc.\",\n        \"The May Department Stores Company\",\n        \"Maytag Corporation\",\n        \"MBNA Corporation\",\n        \"McCormick & Company Incorporated\",\n        \"McDonald's Corporation\",\n        \"The McGraw-Hill Companies Inc.\",\n        \"McKesson Corporation\",\n        \"McLeodUSA Incorporated\",\n        \"M.D.C. Holdings Inc.\",\n        \"MDU Resources Group Inc.\",\n        \"MeadWestvaco Corporation\",\n        \"Medtronic Inc.\",\n        \"Mellon Financial Corporation\",\n        \"The Men's Wearhouse Inc.\",\n        \"Merck & Co., Inc.\",\n        \"Mercury General Corporation\",\n        \"Merrill Lynch & Co. Inc.\",\n        \"Metaldyne Corporation\",\n        \"Metals USA Inc.\",\n        \"MetLife Inc.\",\n        \"Metris Companies Inc\",\n        \"MGIC Investment Corporation\",\n        \"MGM Mirage\",\n        \"Michaels Stores Inc.\",\n        \"Micron Technology Inc.\",\n        \"Microsoft Corporation\",\n        \"Milacron Inc.\",\n        \"Millennium Chemicals Inc.\",\n        \"Mirant Corporation\",\n        \"Mohawk Industries Inc.\",\n        \"Molex Incorporated\",\n        \"The MONY Group Inc.\",\n        \"Morgan Stanley Dean Witter & Co.\",\n        \"Motorola Inc.\",\n        \"MPS Group Inc.\",\n        \"Murphy Oil Corporation\",\n        \"Nabors Industries Inc\",\n        \"Nacco Industries Inc\",\n        \"Nash Finch Company\",\n        \"National City Corp.\",\n        \"National Commerce Financial Corporation\",\n        \"National Fuel Gas Company\",\n        \"National Oilwell Inc\",\n        \"National Rural Utilities Cooperative Finance Corporation\",\n        \"National Semiconductor Corporation\",\n        \"National Service Industries Inc\",\n        \"Navistar International Corporation\",\n        \"NCR Corporation\",\n        \"The Neiman Marcus Group Inc.\",\n        \"New Jersey Resources Corporation\",\n        \"New York Times Company\",\n        \"Newell Rubbermaid Inc\",\n        \"Newmont Mining Corporation\",\n        \"Nextel Communications Inc\",\n        \"Nicor Inc\",\n        \"Nike Inc\",\n        \"NiSource Inc\",\n        \"Noble Energy Inc\",\n        \"Nordstrom Inc\",\n        \"Norfolk Southern Corporation\",\n        \"Nortek Inc\",\n        \"North Fork Bancorporation Inc\",\n        \"Northeast Utilities System\",\n        \"Northern Trust Corporation\",\n        \"Northrop Grumman Corporation\",\n        \"NorthWestern Corporation\",\n        \"Novellus Systems Inc\",\n        \"NSTAR\",\n        \"NTL Incorporated\",\n        \"Nucor Corp\",\n        \"Nvidia Corp\",\n        \"NVR Inc\",\n        \"Northwest Airlines Corp\",\n        \"Occidental Petroleum Corp\",\n        \"Ocean Energy Inc\",\n        \"Office Depot Inc.\",\n        \"OfficeMax Inc\",\n        \"OGE Energy Corp\",\n        \"Oglethorpe Power Corp.\",\n        \"Ohio Casualty Corp.\",\n        \"Old Republic International Corp.\",\n        \"Olin Corp.\",\n        \"OM Group Inc\",\n        \"Omnicare Inc\",\n        \"Omnicom Group\",\n        \"On Semiconductor Corp\",\n        \"ONEOK Inc\",\n        \"Oracle Corp\",\n        \"Oshkosh Truck Corp\",\n        \"Outback Steakhouse Inc.\",\n        \"Owens & Minor Inc.\",\n        \"Owens Corning\",\n        \"Owens-Illinois Inc\",\n        \"Oxford Health Plans Inc\",\n        \"Paccar Inc\",\n        \"PacifiCare Health Systems Inc\",\n        \"Packaging Corp. of America\",\n        \"Pactiv Corp\",\n        \"Pall Corp\",\n        \"Pantry Inc\",\n        \"Park Place Entertainment Corp\",\n        \"Parker Hannifin Corp.\",\n        \"Pathmark Stores Inc.\",\n        \"Paychex Inc\",\n        \"Payless Shoesource Inc\",\n        \"Penn Traffic Co.\",\n        \"Pennzoil-Quaker State Company\",\n        \"Pentair Inc\",\n        \"Peoples Energy Corp.\",\n        \"PeopleSoft Inc\",\n        \"Pep Boys Manny, Moe & Jack\",\n        \"Potomac Electric Power Co.\",\n        \"Pepsi Bottling Group Inc.\",\n        \"PepsiAmericas Inc.\",\n        \"PepsiCo Inc.\",\n        \"Performance Food Group Co.\",\n        \"Perini Corp\",\n        \"PerkinElmer Inc\",\n        \"Perot Systems Corp\",\n        \"Petco Animal Supplies Inc.\",\n        \"Peter Kiewit Sons', Inc.\",\n        \"PETsMART Inc\",\n        \"Pfizer Inc\",\n        \"Pacific Gas & Electric Corp.\",\n        \"Pharmacia Corp\",\n        \"Phar Mor Inc.\",\n        \"Phelps Dodge Corp.\",\n        \"Philip Morris Companies Inc.\",\n        \"Phillips Petroleum Co\",\n        \"Phillips Van Heusen Corp.\",\n        \"Phoenix Companies Inc\",\n        \"Pier 1 Imports Inc.\",\n        \"Pilgrim's Pride Corporation\",\n        \"Pinnacle West Capital Corp\",\n        \"Pioneer-Standard Electronics Inc.\",\n        \"Pitney Bowes Inc.\",\n        \"Pittston Brinks Group\",\n        \"Plains All American Pipeline LP\",\n        \"PNC Financial Services Group Inc.\",\n        \"PNM Resources Inc\",\n        \"Polaris Industries Inc.\",\n        \"Polo Ralph Lauren Corp\",\n        \"PolyOne Corp\",\n        \"Popular Inc\",\n        \"Potlatch Corp\",\n        \"PPG Industries Inc\",\n        \"PPL Corp\",\n        \"Praxair Inc\",\n        \"Precision Castparts Corp\",\n        \"Premcor Inc.\",\n        \"Pride International Inc\",\n        \"Primedia Inc\",\n        \"Principal Financial Group Inc.\",\n        \"Procter & Gamble Co.\",\n        \"Pro-Fac Cooperative Inc.\",\n        \"Progress Energy Inc\",\n        \"Progressive Corporation\",\n        \"Protective Life Corp\",\n        \"Provident Financial Group\",\n        \"Providian Financial Corp.\",\n        \"Prudential Financial Inc.\",\n        \"PSS World Medical Inc\",\n        \"Public Service Enterprise Group Inc.\",\n        \"Publix Super Markets Inc.\",\n        \"Puget Energy Inc.\",\n        \"Pulte Homes Inc\",\n        \"Qualcomm Inc\",\n        \"Quanta Services Inc.\",\n        \"Quantum Corp\",\n        \"Quest Diagnostics Inc.\",\n        \"Questar Corp\",\n        \"Quintiles Transnational\",\n        \"Qwest Communications Intl Inc\",\n        \"R.J. Reynolds Tobacco Company\",\n        \"R.R. Donnelley & Sons Company\",\n        \"Radio Shack Corporation\",\n        \"Raymond James Financial Inc.\",\n        \"Raytheon Company\",\n        \"Reader's Digest Association Inc.\",\n        \"Reebok International Ltd.\",\n        \"Regions Financial Corp.\",\n        \"Regis Corporation\",\n        \"Reliance Steel & Aluminum Co.\",\n        \"Reliant Energy Inc.\",\n        \"Rent A Center Inc\",\n        \"Republic Services Inc\",\n        \"Revlon Inc\",\n        \"RGS Energy Group Inc\",\n        \"Rite Aid Corp\",\n        \"Riverwood Holding Inc.\",\n        \"RoadwayCorp\",\n        \"Robert Half International Inc.\",\n        \"Rock-Tenn Co\",\n        \"Rockwell Automation Inc\",\n        \"Rockwell Collins Inc\",\n        \"Rohm & Haas Co.\",\n        \"Ross Stores Inc\",\n        \"RPM Inc.\",\n        \"Ruddick Corp\",\n        \"Ryder System Inc\",\n        \"Ryerson Tull Inc\",\n        \"Ryland Group Inc.\",\n        \"Sabre Holdings Corp\",\n        \"Safeco Corp\",\n        \"Safeguard Scientifics Inc.\",\n        \"Safeway Inc\",\n        \"Saks Inc\",\n        \"Sanmina-SCI Inc\",\n        \"Sara Lee Corp\",\n        \"SBC Communications Inc\",\n        \"Scana Corp.\",\n        \"Schering-Plough Corp\",\n        \"Scholastic Corp\",\n        \"SCI Systems Onc.\",\n        \"Science Applications Intl. Inc.\",\n        \"Scientific-Atlanta Inc\",\n        \"Scotts Company\",\n        \"Seaboard Corp\",\n        \"Sealed Air Corp\",\n        \"Sears Roebuck & Co\",\n        \"Sempra Energy\",\n        \"Sequa Corp\",\n        \"Service Corp. International\",\n        \"ServiceMaster Co\",\n        \"Shaw Group Inc\",\n        \"Sherwin-Williams Company\",\n        \"Shopko Stores Inc\",\n        \"Siebel Systems Inc\",\n        \"Sierra Health Services Inc\",\n        \"Sierra Pacific Resources\",\n        \"Silgan Holdings Inc.\",\n        \"Silicon Graphics Inc\",\n        \"Simon Property Group Inc\",\n        \"SLM Corporation\",\n        \"Smith International Inc\",\n        \"Smithfield Foods Inc\",\n        \"Smurfit-Stone Container Corp\",\n        \"Snap-On Inc\",\n        \"Solectron Corp\",\n        \"Solutia Inc\",\n        \"Sonic Automotive Inc.\",\n        \"Sonoco Products Co.\",\n        \"Southern Company\",\n        \"Southern Union Company\",\n        \"SouthTrust Corp.\",\n        \"Southwest Airlines Co\",\n        \"Southwest Gas Corp\",\n        \"Sovereign Bancorp Inc.\",\n        \"Spartan Stores Inc\",\n        \"Spherion Corp\",\n        \"Sports Authority Inc\",\n        \"Sprint Corp.\",\n        \"SPX Corp\",\n        \"St. Jude Medical Inc\",\n        \"St. Paul Cos.\",\n        \"Staff Leasing Inc.\",\n        \"StanCorp Financial Group Inc\",\n        \"Standard Pacific Corp.\",\n        \"Stanley Works\",\n        \"Staples Inc\",\n        \"Starbucks Corp\",\n        \"Starwood Hotels & Resorts Worldwide Inc\",\n        \"State Street Corp.\",\n        \"Stater Bros. Holdings Inc.\",\n        \"Steelcase Inc\",\n        \"Stein Mart Inc\",\n        \"Stewart & Stevenson Services Inc\",\n        \"Stewart Information Services Corp\",\n        \"Stilwell Financial Inc\",\n        \"Storage Technology Corporation\",\n        \"Stryker Corp\",\n        \"Sun Healthcare Group Inc.\",\n        \"Sun Microsystems Inc.\",\n        \"SunGard Data Systems Inc.\",\n        \"Sunoco Inc.\",\n        \"SunTrust Banks Inc\",\n        \"Supervalu Inc\",\n        \"Swift Transportation, Co., Inc\",\n        \"Symbol Technologies Inc\",\n        \"Synovus Financial Corp.\",\n        \"Sysco Corp\",\n        \"Systemax Inc.\",\n        \"Target Corp.\",\n        \"Tech Data Corporation\",\n        \"TECO Energy Inc\",\n        \"Tecumseh Products Company\",\n        \"Tektronix Inc\",\n        \"Teleflex Incorporated\",\n        \"Telephone & Data Systems Inc\",\n        \"Tellabs Inc.\",\n        \"Temple-Inland Inc\",\n        \"Tenet Healthcare Corporation\",\n        \"Tenneco Automotive Inc.\",\n        \"Teradyne Inc\",\n        \"Terex Corp\",\n        \"Tesoro Petroleum Corp.\",\n        \"Texas Industries Inc.\",\n        \"Texas Instruments Incorporated\",\n        \"Textron Inc\",\n        \"Thermo Electron Corporation\",\n        \"Thomas & Betts Corporation\",\n        \"Tiffany & Co\",\n        \"Timken Company\",\n        \"TJX Companies Inc\",\n        \"TMP Worldwide Inc\",\n        \"Toll Brothers Inc\",\n        \"Torchmark Corporation\",\n        \"Toro Company\",\n        \"Tower Automotive Inc.\",\n        \"Toys 'R' Us Inc\",\n        \"Trans World Entertainment Corp.\",\n        \"TransMontaigne Inc\",\n        \"Transocean Inc\",\n        \"TravelCenters of America Inc.\",\n        \"Triad Hospitals Inc\",\n        \"Tribune Company\",\n        \"Trigon Healthcare Inc.\",\n        \"Trinity Industries Inc\",\n        \"Trump Hotels & Casino Resorts Inc.\",\n        \"TruServ Corporation\",\n        \"TRW Inc\",\n        \"TXU Corp\",\n        \"Tyson Foods Inc\",\n        \"U.S. Bancorp\",\n        \"U.S. Industries Inc.\",\n        \"UAL Corporation\",\n        \"UGI Corporation\",\n        \"Unified Western Grocers Inc\",\n        \"Union Pacific Corporation\",\n        \"Union Planters Corp\",\n        \"Unisource Energy Corp\",\n        \"Unisys Corporation\",\n        \"United Auto Group Inc\",\n        \"United Defense Industries Inc.\",\n        \"United Parcel Service Inc\",\n        \"United Rentals Inc\",\n        \"United Stationers Inc\",\n        \"United Technologies Corporation\",\n        \"UnitedHealth Group Incorporated\",\n        \"Unitrin Inc\",\n        \"Universal Corporation\",\n        \"Universal Forest Products Inc\",\n        \"Universal Health Services Inc\",\n        \"Unocal Corporation\",\n        \"Unova Inc\",\n        \"UnumProvident Corporation\",\n        \"URS Corporation\",\n        \"US Airways Group Inc\",\n        \"US Oncology Inc\",\n        \"USA Interactive\",\n        \"USFreighways Corporation\",\n        \"USG Corporation\",\n        \"UST Inc\",\n        \"Valero Energy Corporation\",\n        \"Valspar Corporation\",\n        \"Value City Department Stores Inc\",\n        \"Varco International Inc\",\n        \"Vectren Corporation\",\n        \"Veritas Software Corporation\",\n        \"Verizon Communications Inc\",\n        \"VF Corporation\",\n        \"Viacom Inc\",\n        \"Viad Corp\",\n        \"Viasystems Group Inc\",\n        \"Vishay Intertechnology Inc\",\n        \"Visteon Corporation\",\n        \"Volt Information Sciences Inc\",\n        \"Vulcan Materials Company\",\n        \"W.R. Berkley Corporation\",\n        \"W.R. Grace & Co\",\n        \"W.W. Grainger Inc\",\n        \"Wachovia Corporation\",\n        \"Wakenhut Corporation\",\n        \"Walgreen Co\",\n        \"Wallace Computer Services Inc\",\n        \"Wal-Mart Stores Inc\",\n        \"Walt Disney Co\",\n        \"Walter Industries Inc\",\n        \"Washington Mutual Inc\",\n        \"Washington Post Co.\",\n        \"Waste Management Inc\",\n        \"Watsco Inc\",\n        \"Weatherford International Inc\",\n        \"Weis Markets Inc.\",\n        \"Wellpoint Health Networks Inc\",\n        \"Wells Fargo & Company\",\n        \"Wendy's International Inc\",\n        \"Werner Enterprises Inc\",\n        \"WESCO International Inc\",\n        \"Western Digital Inc\",\n        \"Western Gas Resources Inc\",\n        \"WestPoint Stevens Inc\",\n        \"Weyerhauser Company\",\n        \"WGL Holdings Inc\",\n        \"Whirlpool Corporation\",\n        \"Whole Foods Market Inc\",\n        \"Willamette Industries Inc.\",\n        \"Williams Companies Inc\",\n        \"Williams Sonoma Inc\",\n        \"Winn Dixie Stores Inc\",\n        \"Wisconsin Energy Corporation\",\n        \"Wm Wrigley Jr Company\",\n        \"World Fuel Services Corporation\",\n        \"WorldCom Inc\",\n        \"Worthington Industries Inc\",\n        \"WPS Resources Corporation\",\n        \"Wyeth\",\n        \"Wyndham International Inc\",\n        \"Xcel Energy Inc\",\n        \"Xerox Corp\",\n        \"Xilinx Inc\",\n        \"XO Communications Inc\",\n        \"Yellow Corporation\",\n        \"York International Corp\",\n        \"Yum Brands Inc.\",\n        \"Zale Corporation\",\n        \"Zions Bancorporation\"\n      ],\n\n        fileExtension : {\n            \"raster\"    : [\"bmp\", \"gif\", \"gpl\", \"ico\", \"jpeg\", \"psd\", \"png\", \"psp\", \"raw\", \"tiff\"],\n            \"vector\"    : [\"3dv\", \"amf\", \"awg\", \"ai\", \"cgm\", \"cdr\", \"cmx\", \"dxf\", \"e2d\", \"egt\", \"eps\", \"fs\", \"odg\", \"svg\", \"xar\"],\n            \"3d\"        : [\"3dmf\", \"3dm\", \"3mf\", \"3ds\", \"an8\", \"aoi\", \"blend\", \"cal3d\", \"cob\", \"ctm\", \"iob\", \"jas\", \"max\", \"mb\", \"mdx\", \"obj\", \"x\", \"x3d\"],\n            \"document\"  : [\"doc\", \"docx\", \"dot\", \"html\", \"xml\", \"odt\", \"odm\", \"ott\", \"csv\", \"rtf\", \"tex\", \"xhtml\", \"xps\"]\n        },\n\n        // Data taken from https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json\n        timezones: [\n                  {\n                    \"name\": \"Dateline Standard Time\",\n                    \"abbr\": \"DST\",\n                    \"offset\": -12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-12:00) International Date Line West\",\n                    \"utc\": [\n                      \"Etc/GMT+12\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-11\",\n                    \"abbr\": \"U\",\n                    \"offset\": -11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-11:00) Coordinated Universal Time-11\",\n                    \"utc\": [\n                      \"Etc/GMT+11\",\n                      \"Pacific/Midway\",\n                      \"Pacific/Niue\",\n                      \"Pacific/Pago_Pago\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Hawaiian Standard Time\",\n                    \"abbr\": \"HST\",\n                    \"offset\": -10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-10:00) Hawaii\",\n                    \"utc\": [\n                      \"Etc/GMT+10\",\n                      \"Pacific/Honolulu\",\n                      \"Pacific/Johnston\",\n                      \"Pacific/Rarotonga\",\n                      \"Pacific/Tahiti\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Alaskan Standard Time\",\n                    \"abbr\": \"AKDT\",\n                    \"offset\": -8,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-09:00) Alaska\",\n                    \"utc\": [\n                      \"America/Anchorage\",\n                      \"America/Juneau\",\n                      \"America/Nome\",\n                      \"America/Sitka\",\n                      \"America/Yakutat\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time (Mexico)\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-08:00) Baja California\",\n                    \"utc\": [\n                      \"America/Santa_Isabel\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Daylight Time\",\n                    \"abbr\": \"PDT\",\n                    \"offset\": -7,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific Standard Time\",\n                    \"abbr\": \"PST\",\n                    \"offset\": -8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-08:00) Pacific Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Dawson\",\n                      \"America/Los_Angeles\",\n                      \"America/Tijuana\",\n                      \"America/Vancouver\",\n                      \"America/Whitehorse\",\n                      \"PST8PDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Mountain Standard Time\",\n                    \"abbr\": \"UMST\",\n                    \"offset\": -7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-07:00) Arizona\",\n                    \"utc\": [\n                      \"America/Creston\",\n                      \"America/Dawson_Creek\",\n                      \"America/Hermosillo\",\n                      \"America/Phoenix\",\n                      \"Etc/GMT+7\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time (Mexico)\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Chihuahua, La Paz, Mazatlan\",\n                    \"utc\": [\n                      \"America/Chihuahua\",\n                      \"America/Mazatlan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mountain Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -6,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-07:00) Mountain Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Boise\",\n                      \"America/Cambridge_Bay\",\n                      \"America/Denver\",\n                      \"America/Edmonton\",\n                      \"America/Inuvik\",\n                      \"America/Ojinaga\",\n                      \"America/Yellowknife\",\n                      \"MST7MDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central America Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Central America\",\n                    \"utc\": [\n                      \"America/Belize\",\n                      \"America/Costa_Rica\",\n                      \"America/El_Salvador\",\n                      \"America/Guatemala\",\n                      \"America/Managua\",\n                      \"America/Tegucigalpa\",\n                      \"Etc/GMT+6\",\n                      \"Pacific/Galapagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Central Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Chicago\",\n                      \"America/Indiana/Knox\",\n                      \"America/Indiana/Tell_City\",\n                      \"America/Matamoros\",\n                      \"America/Menominee\",\n                      \"America/North_Dakota/Beulah\",\n                      \"America/North_Dakota/Center\",\n                      \"America/North_Dakota/New_Salem\",\n                      \"America/Rainy_River\",\n                      \"America/Rankin_Inlet\",\n                      \"America/Resolute\",\n                      \"America/Winnipeg\",\n                      \"CST6CDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Standard Time (Mexico)\",\n                    \"abbr\": \"CDT\",\n                    \"offset\": -5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-06:00) Guadalajara, Mexico City, Monterrey\",\n                    \"utc\": [\n                      \"America/Bahia_Banderas\",\n                      \"America/Cancun\",\n                      \"America/Merida\",\n                      \"America/Mexico_City\",\n                      \"America/Monterrey\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Canada Central Standard Time\",\n                    \"abbr\": \"CCST\",\n                    \"offset\": -6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-06:00) Saskatchewan\",\n                    \"utc\": [\n                      \"America/Regina\",\n                      \"America/Swift_Current\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Pacific Standard Time\",\n                    \"abbr\": \"SPST\",\n                    \"offset\": -5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-05:00) Bogota, Lima, Quito\",\n                    \"utc\": [\n                      \"America/Bogota\",\n                      \"America/Cayman\",\n                      \"America/Coral_Harbour\",\n                      \"America/Eirunepe\",\n                      \"America/Guayaquil\",\n                      \"America/Jamaica\",\n                      \"America/Lima\",\n                      \"America/Panama\",\n                      \"America/Rio_Branco\",\n                      \"Etc/GMT+5\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Eastern Standard Time\",\n                    \"abbr\": \"EDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Eastern Time (US & Canada)\",\n                    \"utc\": [\n                      \"America/Detroit\",\n                      \"America/Havana\",\n                      \"America/Indiana/Petersburg\",\n                      \"America/Indiana/Vincennes\",\n                      \"America/Indiana/Winamac\",\n                      \"America/Iqaluit\",\n                      \"America/Kentucky/Monticello\",\n                      \"America/Louisville\",\n                      \"America/Montreal\",\n                      \"America/Nassau\",\n                      \"America/New_York\",\n                      \"America/Nipigon\",\n                      \"America/Pangnirtung\",\n                      \"America/Port-au-Prince\",\n                      \"America/Thunder_Bay\",\n                      \"America/Toronto\",\n                      \"EST5EDT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"US Eastern Standard Time\",\n                    \"abbr\": \"UEDT\",\n                    \"offset\": -4,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-05:00) Indiana (East)\",\n                    \"utc\": [\n                      \"America/Indiana/Marengo\",\n                      \"America/Indiana/Vevay\",\n                      \"America/Indianapolis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Venezuela Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": -4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:30) Caracas\",\n                    \"utc\": [\n                      \"America/Caracas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Paraguay Standard Time\",\n                    \"abbr\": \"PYT\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Asuncion\",\n                    \"utc\": [\n                      \"America/Asuncion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Atlantic Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-04:00) Atlantic Time (Canada)\",\n                    \"utc\": [\n                      \"America/Glace_Bay\",\n                      \"America/Goose_Bay\",\n                      \"America/Halifax\",\n                      \"America/Moncton\",\n                      \"America/Thule\",\n                      \"Atlantic/Bermuda\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Brazilian Standard Time\",\n                    \"abbr\": \"CBST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Cuiaba\",\n                    \"utc\": [\n                      \"America/Campo_Grande\",\n                      \"America/Cuiaba\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Western Standard Time\",\n                    \"abbr\": \"SWST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Georgetown, La Paz, Manaus, San Juan\",\n                    \"utc\": [\n                      \"America/Anguilla\",\n                      \"America/Antigua\",\n                      \"America/Aruba\",\n                      \"America/Barbados\",\n                      \"America/Blanc-Sablon\",\n                      \"America/Boa_Vista\",\n                      \"America/Curacao\",\n                      \"America/Dominica\",\n                      \"America/Grand_Turk\",\n                      \"America/Grenada\",\n                      \"America/Guadeloupe\",\n                      \"America/Guyana\",\n                      \"America/Kralendijk\",\n                      \"America/La_Paz\",\n                      \"America/Lower_Princes\",\n                      \"America/Manaus\",\n                      \"America/Marigot\",\n                      \"America/Martinique\",\n                      \"America/Montserrat\",\n                      \"America/Port_of_Spain\",\n                      \"America/Porto_Velho\",\n                      \"America/Puerto_Rico\",\n                      \"America/Santo_Domingo\",\n                      \"America/St_Barthelemy\",\n                      \"America/St_Kitts\",\n                      \"America/St_Lucia\",\n                      \"America/St_Thomas\",\n                      \"America/St_Vincent\",\n                      \"America/Tortola\",\n                      \"Etc/GMT+4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pacific SA Standard Time\",\n                    \"abbr\": \"PSST\",\n                    \"offset\": -4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-04:00) Santiago\",\n                    \"utc\": [\n                      \"America/Santiago\",\n                      \"Antarctica/Palmer\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Newfoundland Standard Time\",\n                    \"abbr\": \"NDT\",\n                    \"offset\": -2.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:30) Newfoundland\",\n                    \"utc\": [\n                      \"America/St_Johns\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. South America Standard Time\",\n                    \"abbr\": \"ESAST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Brasilia\",\n                    \"utc\": [\n                      \"America/Sao_Paulo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Argentina Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Buenos Aires\",\n                    \"utc\": [\n                      \"America/Argentina/La_Rioja\",\n                      \"America/Argentina/Rio_Gallegos\",\n                      \"America/Argentina/Salta\",\n                      \"America/Argentina/San_Juan\",\n                      \"America/Argentina/San_Luis\",\n                      \"America/Argentina/Tucuman\",\n                      \"America/Argentina/Ushuaia\",\n                      \"America/Buenos_Aires\",\n                      \"America/Catamarca\",\n                      \"America/Cordoba\",\n                      \"America/Jujuy\",\n                      \"America/Mendoza\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SA Eastern Standard Time\",\n                    \"abbr\": \"SEST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Cayenne, Fortaleza\",\n                    \"utc\": [\n                      \"America/Araguaina\",\n                      \"America/Belem\",\n                      \"America/Cayenne\",\n                      \"America/Fortaleza\",\n                      \"America/Maceio\",\n                      \"America/Paramaribo\",\n                      \"America/Recife\",\n                      \"America/Santarem\",\n                      \"Antarctica/Rothera\",\n                      \"Atlantic/Stanley\",\n                      \"Etc/GMT+3\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenland Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": -3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-03:00) Greenland\",\n                    \"utc\": [\n                      \"America/Godthab\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Montevideo Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Montevideo\",\n                    \"utc\": [\n                      \"America/Montevideo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bahia Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": -3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-03:00) Salvador\",\n                    \"utc\": [\n                      \"America/Bahia\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC-02\",\n                    \"abbr\": \"U\",\n                    \"offset\": -2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-02:00) Coordinated Universal Time-02\",\n                    \"utc\": [\n                      \"America/Noronha\",\n                      \"Atlantic/South_Georgia\",\n                      \"Etc/GMT+2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mid-Atlantic Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": -1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-02:00) Mid-Atlantic - Old\",\n                    \"utc\": []\n                  },\n                  {\n                    \"name\": \"Azores Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 0,\n                    \"isdst\": true,\n                    \"text\": \"(UTC-01:00) Azores\",\n                    \"utc\": [\n                      \"America/Scoresbysund\",\n                      \"Atlantic/Azores\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cape Verde Standard Time\",\n                    \"abbr\": \"CVST\",\n                    \"offset\": -1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC-01:00) Cape Verde Is.\",\n                    \"utc\": [\n                      \"Atlantic/Cape_Verde\",\n                      \"Etc/GMT+1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Morocco Standard Time\",\n                    \"abbr\": \"MDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Casablanca\",\n                    \"utc\": [\n                      \"Africa/Casablanca\",\n                      \"Africa/El_Aaiun\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC\",\n                    \"abbr\": \"UTC\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Coordinated Universal Time\",\n                    \"utc\": [\n                      \"America/Danmarkshavn\",\n                      \"Etc/GMT\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GMT\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Edinburgh, London\",\n                    \"utc\": [\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Jersey\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"British Summer Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Edinburgh, London\",\n                    \"utc\": [\n                      \"Europe/Isle_of_Man\",\n                      \"Europe/Guernsey\",\n                      \"Europe/Jersey\",\n                      \"Europe/London\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GMT Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 1,\n                    \"isdst\": true,\n                    \"text\": \"(UTC) Dublin, Lisbon\",\n                    \"utc\": [\n                      \"Atlantic/Canary\",\n                      \"Atlantic/Faeroe\",\n                      \"Atlantic/Madeira\",\n                      \"Europe/Dublin\",\n                      \"Europe/Lisbon\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Greenwich Standard Time\",\n                    \"abbr\": \"GST\",\n                    \"offset\": 0,\n                    \"isdst\": false,\n                    \"text\": \"(UTC) Monrovia, Reykjavik\",\n                    \"utc\": [\n                      \"Africa/Abidjan\",\n                      \"Africa/Accra\",\n                      \"Africa/Bamako\",\n                      \"Africa/Banjul\",\n                      \"Africa/Bissau\",\n                      \"Africa/Conakry\",\n                      \"Africa/Dakar\",\n                      \"Africa/Freetown\",\n                      \"Africa/Lome\",\n                      \"Africa/Monrovia\",\n                      \"Africa/Nouakchott\",\n                      \"Africa/Ouagadougou\",\n                      \"Africa/Sao_Tome\",\n                      \"Atlantic/Reykjavik\",\n                      \"Atlantic/St_Helena\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Europe Standard Time\",\n                    \"abbr\": \"WEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna\",\n                    \"utc\": [\n                      \"Arctic/Longyearbyen\",\n                      \"Europe/Amsterdam\",\n                      \"Europe/Andorra\",\n                      \"Europe/Berlin\",\n                      \"Europe/Busingen\",\n                      \"Europe/Gibraltar\",\n                      \"Europe/Luxembourg\",\n                      \"Europe/Malta\",\n                      \"Europe/Monaco\",\n                      \"Europe/Oslo\",\n                      \"Europe/Rome\",\n                      \"Europe/San_Marino\",\n                      \"Europe/Stockholm\",\n                      \"Europe/Vaduz\",\n                      \"Europe/Vatican\",\n                      \"Europe/Vienna\",\n                      \"Europe/Zurich\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Europe Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague\",\n                    \"utc\": [\n                      \"Europe/Belgrade\",\n                      \"Europe/Bratislava\",\n                      \"Europe/Budapest\",\n                      \"Europe/Ljubljana\",\n                      \"Europe/Podgorica\",\n                      \"Europe/Prague\",\n                      \"Europe/Tirane\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Romance Standard Time\",\n                    \"abbr\": \"RDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Brussels, Copenhagen, Madrid, Paris\",\n                    \"utc\": [\n                      \"Africa/Ceuta\",\n                      \"Europe/Brussels\",\n                      \"Europe/Copenhagen\",\n                      \"Europe/Madrid\",\n                      \"Europe/Paris\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central European Standard Time\",\n                    \"abbr\": \"CEDT\",\n                    \"offset\": 2,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb\",\n                    \"utc\": [\n                      \"Europe/Sarajevo\",\n                      \"Europe/Skopje\",\n                      \"Europe/Warsaw\",\n                      \"Europe/Zagreb\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Central Africa Standard Time\",\n                    \"abbr\": \"WCAST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) West Central Africa\",\n                    \"utc\": [\n                      \"Africa/Algiers\",\n                      \"Africa/Bangui\",\n                      \"Africa/Brazzaville\",\n                      \"Africa/Douala\",\n                      \"Africa/Kinshasa\",\n                      \"Africa/Lagos\",\n                      \"Africa/Libreville\",\n                      \"Africa/Luanda\",\n                      \"Africa/Malabo\",\n                      \"Africa/Ndjamena\",\n                      \"Africa/Niamey\",\n                      \"Africa/Porto-Novo\",\n                      \"Africa/Tunis\",\n                      \"Etc/GMT-1\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Namibia Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 1,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+01:00) Windhoek\",\n                    \"utc\": [\n                      \"Africa/Windhoek\"\n                    ]\n                  },\n                  {\n                    \"name\": \"GTB Standard Time\",\n                    \"abbr\": \"GDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Athens, Bucharest\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Middle East Standard Time\",\n                    \"abbr\": \"MEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Beirut\",\n                    \"utc\": [\n                      \"Asia/Beirut\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Egypt Standard Time\",\n                    \"abbr\": \"EST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Cairo\",\n                    \"utc\": [\n                      \"Africa/Cairo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Syria Standard Time\",\n                    \"abbr\": \"SDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Damascus\",\n                    \"utc\": [\n                      \"Asia/Damascus\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Europe Standard Time\",\n                    \"abbr\": \"EEDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) E. Europe\",\n                    \"utc\": [\n                      \"Asia/Nicosia\",\n                      \"Europe/Athens\",\n                      \"Europe/Bucharest\",\n                      \"Europe/Chisinau\",\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Nicosia\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"South Africa Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Harare, Pretoria\",\n                    \"utc\": [\n                      \"Africa/Blantyre\",\n                      \"Africa/Bujumbura\",\n                      \"Africa/Gaborone\",\n                      \"Africa/Harare\",\n                      \"Africa/Johannesburg\",\n                      \"Africa/Kigali\",\n                      \"Africa/Lubumbashi\",\n                      \"Africa/Lusaka\",\n                      \"Africa/Maputo\",\n                      \"Africa/Maseru\",\n                      \"Africa/Mbabane\",\n                      \"Etc/GMT-2\"\n                    ]\n                  },\n                  {\n                    \"name\": \"FLE Standard Time\",\n                    \"abbr\": \"FDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius\",\n                    \"utc\": [\n                      \"Europe/Helsinki\",\n                      \"Europe/Kiev\",\n                      \"Europe/Mariehamn\",\n                      \"Europe/Riga\",\n                      \"Europe/Sofia\",\n                      \"Europe/Tallinn\",\n                      \"Europe/Uzhgorod\",\n                      \"Europe/Vilnius\",\n                      \"Europe/Zaporozhye\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Turkey Standard Time\",\n                    \"abbr\": \"TDT\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Istanbul\",\n                    \"utc\": [\n                      \"Europe/Istanbul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Israel Standard Time\",\n                    \"abbr\": \"JDT\",\n                    \"offset\": 3,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+02:00) Jerusalem\",\n                    \"utc\": [\n                      \"Asia/Jerusalem\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Libya Standard Time\",\n                    \"abbr\": \"LST\",\n                    \"offset\": 2,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Tripoli\",\n                    \"utc\": [\n                      \"Africa/Tripoli\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Jordan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Amman\",\n                    \"utc\": [\n                      \"Asia/Amman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabic Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Baghdad\",\n                    \"utc\": [\n                      \"Asia/Baghdad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kaliningrad Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+02:00) Kaliningrad\",\n                    \"utc\": [\n                      \"Europe/Kaliningrad\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arab Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Kuwait, Riyadh\",\n                    \"utc\": [\n                      \"Asia/Aden\",\n                      \"Asia/Bahrain\",\n                      \"Asia/Kuwait\",\n                      \"Asia/Qatar\",\n                      \"Asia/Riyadh\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Africa Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Nairobi\",\n                    \"utc\": [\n                      \"Africa/Addis_Ababa\",\n                      \"Africa/Asmera\",\n                      \"Africa/Dar_es_Salaam\",\n                      \"Africa/Djibouti\",\n                      \"Africa/Juba\",\n                      \"Africa/Kampala\",\n                      \"Africa/Khartoum\",\n                      \"Africa/Mogadishu\",\n                      \"Africa/Nairobi\",\n                      \"Antarctica/Syowa\",\n                      \"Etc/GMT-3\",\n                      \"Indian/Antananarivo\",\n                      \"Indian/Comoro\",\n                      \"Indian/Mayotte\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Moscow Standard Time\",\n                    \"abbr\": \"MSK\",\n                    \"offset\": 3,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk\",\n                    \"utc\": [\n                        \"Europe/Kirov\",\n                      \"Europe/Moscow\",\n                      \"Europe/Simferopol\",\n                      \"Europe/Volgograd\",\n                      \"Europe/Minsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samara Time\",\n                    \"abbr\": \"SAMT\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Samara, Ulyanovsk, Saratov\",\n                    \"utc\": [\n                        \"Europe/Astrakhan\",\n                      \"Europe/Samara\",\n                        \"Europe/Ulyanovsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Iran Standard Time\",\n                    \"abbr\": \"IDT\",\n                    \"offset\": 4.5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+03:30) Tehran\",\n                    \"utc\": [\n                      \"Asia/Tehran\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Arabian Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Abu Dhabi, Muscat\",\n                    \"utc\": [\n                      \"Asia/Dubai\",\n                      \"Asia/Muscat\",\n                      \"Etc/GMT-4\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Azerbaijan Standard Time\",\n                    \"abbr\": \"ADT\",\n                    \"offset\": 5,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+04:00) Baku\",\n                    \"utc\": [\n                      \"Asia/Baku\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Mauritius Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Port Louis\",\n                    \"utc\": [\n                      \"Indian/Mahe\",\n                      \"Indian/Mauritius\",\n                      \"Indian/Reunion\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Georgian Standard Time\",\n                    \"abbr\": \"GET\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Tbilisi\",\n                    \"utc\": [\n                      \"Asia/Tbilisi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Caucasus Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 4,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:00) Yerevan\",\n                    \"utc\": [\n                      \"Asia/Yerevan\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Afghanistan Standard Time\",\n                    \"abbr\": \"AST\",\n                    \"offset\": 4.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+04:30) Kabul\",\n                    \"utc\": [\n                      \"Asia/Kabul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Asia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Ashgabat, Tashkent\",\n                    \"utc\": [\n                      \"Antarctica/Mawson\",\n                      \"Asia/Aqtau\",\n                      \"Asia/Aqtobe\",\n                      \"Asia/Ashgabat\",\n                      \"Asia/Dushanbe\",\n                      \"Asia/Oral\",\n                      \"Asia/Samarkand\",\n                      \"Asia/Tashkent\",\n                      \"Etc/GMT-5\",\n                      \"Indian/Kerguelen\",\n                      \"Indian/Maldives\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yekaterinburg Time\",\n                    \"abbr\": \"YEKT\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Yekaterinburg\",\n                    \"utc\": [\n                      \"Asia/Yekaterinburg\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Pakistan Standard Time\",\n                    \"abbr\": \"PKT\",\n                    \"offset\": 5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:00) Islamabad, Karachi\",\n                    \"utc\": [\n                      \"Asia/Karachi\"\n                    ]\n                  },\n                  {\n                    \"name\": \"India Standard Time\",\n                    \"abbr\": \"IST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi\",\n                    \"utc\": [\n                      \"Asia/Kolkata\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Sri Lanka Standard Time\",\n                    \"abbr\": \"SLST\",\n                    \"offset\": 5.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:30) Sri Jayawardenepura\",\n                    \"utc\": [\n                      \"Asia/Colombo\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Nepal Standard Time\",\n                    \"abbr\": \"NST\",\n                    \"offset\": 5.75,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+05:45) Kathmandu\",\n                    \"utc\": [\n                      \"Asia/Kathmandu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Asia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Nur-Sultan (Astana)\",\n                    \"utc\": [\n                      \"Antarctica/Vostok\",\n                      \"Asia/Almaty\",\n                      \"Asia/Bishkek\",\n                      \"Asia/Qyzylorda\",\n                      \"Asia/Urumqi\",\n                      \"Etc/GMT-6\",\n                      \"Indian/Chagos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Bangladesh Standard Time\",\n                    \"abbr\": \"BST\",\n                    \"offset\": 6,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:00) Dhaka\",\n                    \"utc\": [\n                      \"Asia/Dhaka\",\n                      \"Asia/Thimphu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Myanmar Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 6.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+06:30) Yangon (Rangoon)\",\n                    \"utc\": [\n                      \"Asia/Rangoon\",\n                      \"Indian/Cocos\"\n                    ]\n                  },\n                  {\n                    \"name\": \"SE Asia Standard Time\",\n                    \"abbr\": \"SAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Bangkok, Hanoi, Jakarta\",\n                    \"utc\": [\n                      \"Antarctica/Davis\",\n                      \"Asia/Bangkok\",\n                      \"Asia/Hovd\",\n                      \"Asia/Jakarta\",\n                      \"Asia/Phnom_Penh\",\n                      \"Asia/Pontianak\",\n                      \"Asia/Saigon\",\n                      \"Asia/Vientiane\",\n                      \"Etc/GMT-7\",\n                      \"Indian/Christmas\"\n                    ]\n                  },\n                  {\n                    \"name\": \"N. Central Asia Standard Time\",\n                    \"abbr\": \"NCAST\",\n                    \"offset\": 7,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+07:00) Novosibirsk\",\n                    \"utc\": [\n                      \"Asia/Novokuznetsk\",\n                      \"Asia/Novosibirsk\",\n                      \"Asia/Omsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"China Standard Time\",\n                    \"abbr\": \"CST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi\",\n                    \"utc\": [\n                      \"Asia/Hong_Kong\",\n                      \"Asia/Macau\",\n                      \"Asia/Shanghai\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia Standard Time\",\n                    \"abbr\": \"NAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Krasnoyarsk\",\n                    \"utc\": [\n                      \"Asia/Krasnoyarsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Singapore Standard Time\",\n                    \"abbr\": \"MPST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Kuala Lumpur, Singapore\",\n                    \"utc\": [\n                      \"Asia/Brunei\",\n                      \"Asia/Kuala_Lumpur\",\n                      \"Asia/Kuching\",\n                      \"Asia/Makassar\",\n                      \"Asia/Manila\",\n                      \"Asia/Singapore\",\n                      \"Etc/GMT-8\"\n                    ]\n                  },\n                  {\n                    \"name\": \"W. Australia Standard Time\",\n                    \"abbr\": \"WAST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Perth\",\n                    \"utc\": [\n                      \"Antarctica/Casey\",\n                      \"Australia/Perth\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Taipei Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Taipei\",\n                    \"utc\": [\n                      \"Asia/Taipei\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Ulaanbaatar Standard Time\",\n                    \"abbr\": \"UST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Ulaanbaatar\",\n                    \"utc\": [\n                      \"Asia/Choibalsan\",\n                      \"Asia/Ulaanbaatar\"\n                    ]\n                  },\n                  {\n                    \"name\": \"North Asia East Standard Time\",\n                    \"abbr\": \"NAEST\",\n                    \"offset\": 8,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+08:00) Irkutsk\",\n                    \"utc\": [\n                      \"Asia/Irkutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Japan Standard Time\",\n                    \"abbr\": \"JST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Osaka, Sapporo, Tokyo\",\n                    \"utc\": [\n                      \"Asia/Dili\",\n                      \"Asia/Jayapura\",\n                      \"Asia/Tokyo\",\n                      \"Etc/GMT-9\",\n                      \"Pacific/Palau\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Korea Standard Time\",\n                    \"abbr\": \"KST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Seoul\",\n                    \"utc\": [\n                      \"Asia/Pyongyang\",\n                      \"Asia/Seoul\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Cen. Australia Standard Time\",\n                    \"abbr\": \"CAST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Adelaide\",\n                    \"utc\": [\n                      \"Australia/Adelaide\",\n                      \"Australia/Broken_Hill\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Central Standard Time\",\n                    \"abbr\": \"ACST\",\n                    \"offset\": 9.5,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:30) Darwin\",\n                    \"utc\": [\n                      \"Australia/Darwin\"\n                    ]\n                  },\n                  {\n                    \"name\": \"E. Australia Standard Time\",\n                    \"abbr\": \"EAST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Brisbane\",\n                    \"utc\": [\n                      \"Australia/Brisbane\",\n                      \"Australia/Lindeman\"\n                    ]\n                  },\n                  {\n                    \"name\": \"AUS Eastern Standard Time\",\n                    \"abbr\": \"AEST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Canberra, Melbourne, Sydney\",\n                    \"utc\": [\n                      \"Australia/Melbourne\",\n                      \"Australia/Sydney\"\n                    ]\n                  },\n                  {\n                    \"name\": \"West Pacific Standard Time\",\n                    \"abbr\": \"WPST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Guam, Port Moresby\",\n                    \"utc\": [\n                      \"Antarctica/DumontDUrville\",\n                      \"Etc/GMT-10\",\n                      \"Pacific/Guam\",\n                      \"Pacific/Port_Moresby\",\n                      \"Pacific/Saipan\",\n                      \"Pacific/Truk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tasmania Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 10,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+10:00) Hobart\",\n                    \"utc\": [\n                      \"Australia/Currie\",\n                      \"Australia/Hobart\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Yakutsk Standard Time\",\n                    \"abbr\": \"YST\",\n                    \"offset\": 9,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+09:00) Yakutsk\",\n                    \"utc\": [\n                      \"Asia/Chita\",\n                      \"Asia/Khandyga\",\n                      \"Asia/Yakutsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Central Pacific Standard Time\",\n                    \"abbr\": \"CPST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Solomon Is., New Caledonia\",\n                    \"utc\": [\n                      \"Antarctica/Macquarie\",\n                      \"Etc/GMT-11\",\n                      \"Pacific/Efate\",\n                      \"Pacific/Guadalcanal\",\n                      \"Pacific/Kosrae\",\n                      \"Pacific/Noumea\",\n                      \"Pacific/Ponape\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Vladivostok Standard Time\",\n                    \"abbr\": \"VST\",\n                    \"offset\": 11,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+11:00) Vladivostok\",\n                    \"utc\": [\n                      \"Asia/Sakhalin\",\n                      \"Asia/Ust-Nera\",\n                      \"Asia/Vladivostok\"\n                    ]\n                  },\n                  {\n                    \"name\": \"New Zealand Standard Time\",\n                    \"abbr\": \"NZST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Auckland, Wellington\",\n                    \"utc\": [\n                      \"Antarctica/McMurdo\",\n                      \"Pacific/Auckland\"\n                    ]\n                  },\n                  {\n                    \"name\": \"UTC+12\",\n                    \"abbr\": \"U\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Coordinated Universal Time+12\",\n                    \"utc\": [\n                      \"Etc/GMT-12\",\n                      \"Pacific/Funafuti\",\n                      \"Pacific/Kwajalein\",\n                      \"Pacific/Majuro\",\n                      \"Pacific/Nauru\",\n                      \"Pacific/Tarawa\",\n                      \"Pacific/Wake\",\n                      \"Pacific/Wallis\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Fiji Standard Time\",\n                    \"abbr\": \"FST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Fiji\",\n                    \"utc\": [\n                      \"Pacific/Fiji\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Magadan Standard Time\",\n                    \"abbr\": \"MST\",\n                    \"offset\": 12,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+12:00) Magadan\",\n                    \"utc\": [\n                      \"Asia/Anadyr\",\n                      \"Asia/Kamchatka\",\n                      \"Asia/Magadan\",\n                      \"Asia/Srednekolymsk\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Kamchatka Standard Time\",\n                    \"abbr\": \"KDT\",\n                    \"offset\": 13,\n                    \"isdst\": true,\n                    \"text\": \"(UTC+12:00) Petropavlovsk-Kamchatsky - Old\",\n                    \"utc\": [\n                      \"Asia/Kamchatka\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Tonga Standard Time\",\n                    \"abbr\": \"TST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Nuku'alofa\",\n                    \"utc\": [\n                      \"Etc/GMT-13\",\n                      \"Pacific/Enderbury\",\n                      \"Pacific/Fakaofo\",\n                      \"Pacific/Tongatapu\"\n                    ]\n                  },\n                  {\n                    \"name\": \"Samoa Standard Time\",\n                    \"abbr\": \"SST\",\n                    \"offset\": 13,\n                    \"isdst\": false,\n                    \"text\": \"(UTC+13:00) Samoa\",\n                    \"utc\": [\n                      \"Pacific/Apia\"\n                    ]\n                  }\n                ],\n        //List source: http://answers.google.com/answers/threadview/id/589312.html\n        profession: [\n            \"Airline Pilot\",\n            \"Academic Team\",\n            \"Accountant\",\n            \"Account Executive\",\n            \"Actor\",\n            \"Actuary\",\n            \"Acquisition Analyst\",\n            \"Administrative Asst.\",\n            \"Administrative Analyst\",\n            \"Administrator\",\n            \"Advertising Director\",\n            \"Aerospace Engineer\",\n            \"Agent\",\n            \"Agricultural Inspector\",\n            \"Agricultural Scientist\",\n            \"Air Traffic Controller\",\n            \"Animal Trainer\",\n            \"Anthropologist\",\n            \"Appraiser\",\n            \"Architect\",\n            \"Art Director\",\n            \"Artist\",\n            \"Astronomer\",\n            \"Athletic Coach\",\n            \"Auditor\",\n            \"Author\",\n            \"Baker\",\n            \"Banker\",\n            \"Bankruptcy Attorney\",\n            \"Benefits Manager\",\n            \"Biologist\",\n            \"Bio-feedback Specialist\",\n            \"Biomedical Engineer\",\n            \"Biotechnical Researcher\",\n            \"Broadcaster\",\n            \"Broker\",\n            \"Building Manager\",\n            \"Building Contractor\",\n            \"Building Inspector\",\n            \"Business Analyst\",\n            \"Business Planner\",\n            \"Business Manager\",\n            \"Buyer\",\n            \"Call Center Manager\",\n            \"Career Counselor\",\n            \"Cash Manager\",\n            \"Ceramic Engineer\",\n            \"Chief Executive Officer\",\n            \"Chief Operation Officer\",\n            \"Chef\",\n            \"Chemical Engineer\",\n            \"Chemist\",\n            \"Child Care Manager\",\n            \"Chief Medical Officer\",\n            \"Chiropractor\",\n            \"Cinematographer\",\n            \"City Housing Manager\",\n            \"City Manager\",\n            \"Civil Engineer\",\n            \"Claims Manager\",\n            \"Clinical Research Assistant\",\n            \"Collections Manager\",\n            \"Compliance Manager\",\n            \"Comptroller\",\n            \"Computer Manager\",\n            \"Commercial Artist\",\n            \"Communications Affairs Director\",\n            \"Communications Director\",\n            \"Communications Engineer\",\n            \"Compensation Analyst\",\n            \"Computer Programmer\",\n            \"Computer Ops. Manager\",\n            \"Computer Engineer\",\n            \"Computer Operator\",\n            \"Computer Graphics Specialist\",\n            \"Construction Engineer\",\n            \"Construction Manager\",\n            \"Consultant\",\n            \"Consumer Relations Manager\",\n            \"Contract Administrator\",\n            \"Copyright Attorney\",\n            \"Copywriter\",\n            \"Corporate Planner\",\n            \"Corrections Officer\",\n            \"Cosmetologist\",\n            \"Credit Analyst\",\n            \"Cruise Director\",\n            \"Chief Information Officer\",\n            \"Chief Technology Officer\",\n            \"Customer Service Manager\",\n            \"Cryptologist\",\n            \"Dancer\",\n            \"Data Security Manager\",\n            \"Database Manager\",\n            \"Day Care Instructor\",\n            \"Dentist\",\n            \"Designer\",\n            \"Design Engineer\",\n            \"Desktop Publisher\",\n            \"Developer\",\n            \"Development Officer\",\n            \"Diamond Merchant\",\n            \"Dietitian\",\n            \"Direct Marketer\",\n            \"Director\",\n            \"Distribution Manager\",\n            \"Diversity Manager\",\n            \"Economist\",\n            \"EEO Compliance Manager\",\n            \"Editor\",\n            \"Education Adminator\",\n            \"Electrical Engineer\",\n            \"Electro Optical Engineer\",\n            \"Electronics Engineer\",\n            \"Embassy Management\",\n            \"Employment Agent\",\n            \"Engineer Technician\",\n            \"Entrepreneur\",\n            \"Environmental Analyst\",\n            \"Environmental Attorney\",\n            \"Environmental Engineer\",\n            \"Environmental Specialist\",\n            \"Escrow Officer\",\n            \"Estimator\",\n            \"Executive Assistant\",\n            \"Executive Director\",\n            \"Executive Recruiter\",\n            \"Facilities Manager\",\n            \"Family Counselor\",\n            \"Fashion Events Manager\",\n            \"Fashion Merchandiser\",\n            \"Fast Food Manager\",\n            \"Film Producer\",\n            \"Film Production Assistant\",\n            \"Financial Analyst\",\n            \"Financial Planner\",\n            \"Financier\",\n            \"Fine Artist\",\n            \"Wildlife Specialist\",\n            \"Fitness Consultant\",\n            \"Flight Attendant\",\n            \"Flight Engineer\",\n            \"Floral Designer\",\n            \"Food & Beverage Director\",\n            \"Food Service Manager\",\n            \"Forestry Technician\",\n            \"Franchise Management\",\n            \"Franchise Sales\",\n            \"Fraud Investigator\",\n            \"Freelance Writer\",\n            \"Fund Raiser\",\n            \"General Manager\",\n            \"Geologist\",\n            \"General Counsel\",\n            \"Geriatric Specialist\",\n            \"Gerontologist\",\n            \"Glamour Photographer\",\n            \"Golf Club Manager\",\n            \"Gourmet Chef\",\n            \"Graphic Designer\",\n            \"Grounds Keeper\",\n            \"Hazardous Waste Manager\",\n            \"Health Care Manager\",\n            \"Health Therapist\",\n            \"Health Service Administrator\",\n            \"Hearing Officer\",\n            \"Home Economist\",\n            \"Horticulturist\",\n            \"Hospital Administrator\",\n            \"Hotel Manager\",\n            \"Human Resources Manager\",\n            \"Importer\",\n            \"Industrial Designer\",\n            \"Industrial Engineer\",\n            \"Information Director\",\n            \"Inside Sales\",\n            \"Insurance Adjuster\",\n            \"Interior Decorator\",\n            \"Internal Controls Director\",\n            \"International Acct.\",\n            \"International Courier\",\n            \"International Lawyer\",\n            \"Interpreter\",\n            \"Investigator\",\n            \"Investment Banker\",\n            \"Investment Manager\",\n            \"IT Architect\",\n            \"IT Project Manager\",\n            \"IT Systems Analyst\",\n            \"Jeweler\",\n            \"Joint Venture Manager\",\n            \"Journalist\",\n            \"Labor Negotiator\",\n            \"Labor Organizer\",\n            \"Labor Relations Manager\",\n            \"Lab Services Director\",\n            \"Lab Technician\",\n            \"Land Developer\",\n            \"Landscape Architect\",\n            \"Law Enforcement Officer\",\n            \"Lawyer\",\n            \"Lead Software Engineer\",\n            \"Lead Software Test Engineer\",\n            \"Leasing Manager\",\n            \"Legal Secretary\",\n            \"Library Manager\",\n            \"Litigation Attorney\",\n            \"Loan Officer\",\n            \"Lobbyist\",\n            \"Logistics Manager\",\n            \"Maintenance Manager\",\n            \"Management Consultant\",\n            \"Managed Care Director\",\n            \"Managing Partner\",\n            \"Manufacturing Director\",\n            \"Manpower Planner\",\n            \"Marine Biologist\",\n            \"Market Res. Analyst\",\n            \"Marketing Director\",\n            \"Materials Manager\",\n            \"Mathematician\",\n            \"Membership Chairman\",\n            \"Mechanic\",\n            \"Mechanical Engineer\",\n            \"Media Buyer\",\n            \"Medical Investor\",\n            \"Medical Secretary\",\n            \"Medical Technician\",\n            \"Mental Health Counselor\",\n            \"Merchandiser\",\n            \"Metallurgical Engineering\",\n            \"Meteorologist\",\n            \"Microbiologist\",\n            \"MIS Manager\",\n            \"Motion Picture Director\",\n            \"Multimedia Director\",\n            \"Musician\",\n            \"Network Administrator\",\n            \"Network Specialist\",\n            \"Network Operator\",\n            \"New Product Manager\",\n            \"Novelist\",\n            \"Nuclear Engineer\",\n            \"Nuclear Specialist\",\n            \"Nutritionist\",\n            \"Nursing Administrator\",\n            \"Occupational Therapist\",\n            \"Oceanographer\",\n            \"Office Manager\",\n            \"Operations Manager\",\n            \"Operations Research Director\",\n            \"Optical Technician\",\n            \"Optometrist\",\n            \"Organizational Development Manager\",\n            \"Outplacement Specialist\",\n            \"Paralegal\",\n            \"Park Ranger\",\n            \"Patent Attorney\",\n            \"Payroll Specialist\",\n            \"Personnel Specialist\",\n            \"Petroleum Engineer\",\n            \"Pharmacist\",\n            \"Photographer\",\n            \"Physical Therapist\",\n            \"Physician\",\n            \"Physician Assistant\",\n            \"Physicist\",\n            \"Planning Director\",\n            \"Podiatrist\",\n            \"Political Analyst\",\n            \"Political Scientist\",\n            \"Politician\",\n            \"Portfolio Manager\",\n            \"Preschool Management\",\n            \"Preschool Teacher\",\n            \"Principal\",\n            \"Private Banker\",\n            \"Private Investigator\",\n            \"Probation Officer\",\n            \"Process Engineer\",\n            \"Producer\",\n            \"Product Manager\",\n            \"Product Engineer\",\n            \"Production Engineer\",\n            \"Production Planner\",\n            \"Professional Athlete\",\n            \"Professional Coach\",\n            \"Professor\",\n            \"Project Engineer\",\n            \"Project Manager\",\n            \"Program Manager\",\n            \"Property Manager\",\n            \"Public Administrator\",\n            \"Public Safety Director\",\n            \"PR Specialist\",\n            \"Publisher\",\n            \"Purchasing Agent\",\n            \"Publishing Director\",\n            \"Quality Assurance Specialist\",\n            \"Quality Control Engineer\",\n            \"Quality Control Inspector\",\n            \"Radiology Manager\",\n            \"Railroad Engineer\",\n            \"Real Estate Broker\",\n            \"Recreational Director\",\n            \"Recruiter\",\n            \"Redevelopment Specialist\",\n            \"Regulatory Affairs Manager\",\n            \"Registered Nurse\",\n            \"Rehabilitation Counselor\",\n            \"Relocation Manager\",\n            \"Reporter\",\n            \"Research Specialist\",\n            \"Restaurant Manager\",\n            \"Retail Store Manager\",\n            \"Risk Analyst\",\n            \"Safety Engineer\",\n            \"Sales Engineer\",\n            \"Sales Trainer\",\n            \"Sales Promotion Manager\",\n            \"Sales Representative\",\n            \"Sales Manager\",\n            \"Service Manager\",\n            \"Sanitation Engineer\",\n            \"Scientific Programmer\",\n            \"Scientific Writer\",\n            \"Securities Analyst\",\n            \"Security Consultant\",\n            \"Security Director\",\n            \"Seminar Presenter\",\n            \"Ship's Officer\",\n            \"Singer\",\n            \"Social Director\",\n            \"Social Program Planner\",\n            \"Social Research\",\n            \"Social Scientist\",\n            \"Social Worker\",\n            \"Sociologist\",\n            \"Software Developer\",\n            \"Software Engineer\",\n            \"Software Test Engineer\",\n            \"Soil Scientist\",\n            \"Special Events Manager\",\n            \"Special Education Teacher\",\n            \"Special Projects Director\",\n            \"Speech Pathologist\",\n            \"Speech Writer\",\n            \"Sports Event Manager\",\n            \"Statistician\",\n            \"Store Manager\",\n            \"Strategic Alliance Director\",\n            \"Strategic Planning Director\",\n            \"Stress Reduction Specialist\",\n            \"Stockbroker\",\n            \"Surveyor\",\n            \"Structural Engineer\",\n            \"Superintendent\",\n            \"Supply Chain Director\",\n            \"System Engineer\",\n            \"Systems Analyst\",\n            \"Systems Programmer\",\n            \"System Administrator\",\n            \"Tax Specialist\",\n            \"Teacher\",\n            \"Technical Support Specialist\",\n            \"Technical Illustrator\",\n            \"Technical Writer\",\n            \"Technology Director\",\n            \"Telecom Analyst\",\n            \"Telemarketer\",\n            \"Theatrical Director\",\n            \"Title Examiner\",\n            \"Tour Escort\",\n            \"Tour Guide Director\",\n            \"Traffic Manager\",\n            \"Trainer Translator\",\n            \"Transportation Manager\",\n            \"Travel Agent\",\n            \"Treasurer\",\n            \"TV Programmer\",\n            \"Underwriter\",\n            \"Union Representative\",\n            \"University Administrator\",\n            \"University Dean\",\n            \"Urban Planner\",\n            \"Veterinarian\",\n            \"Vendor Relations Director\",\n            \"Viticulturist\",\n            \"Warehouse Manager\"\n        ],\n        animals : {\n          //list of ocean animals comes from https://owlcation.com/stem/list-of-ocean-animals\n          \"ocean\" : [\"Acantharea\",\"Anemone\",\"Angelfish King\",\"Ahi Tuna\",\"Albacore\",\"American Oyster\",\"Anchovy\",\"Armored Snail\",\"Arctic Char\",\"Atlantic Bluefin Tuna\",\"Atlantic Cod\",\"Atlantic Goliath Grouper\",\"Atlantic Trumpetfish\",\"Atlantic Wolffish\",\"Baleen Whale\",\"Banded Butterflyfish\",\"Banded Coral Shrimp\",\"Banded Sea Krait\",\"Barnacle\",\"Barndoor Skate\",\"Barracuda\",\"Basking Shark\",\"Bass\",\"Beluga Whale\",\"Bluebanded Goby\",\"Bluehead Wrasse\",\"Bluefish\",\"Bluestreak Cleaner-Wrasse\",\"Blue Marlin\",\"Blue Shark\",\"Blue Spiny Lobster\",\"Blue Tang\",\"Blue Whale\",\"Broadclub Cuttlefish\",\"Bull Shark\",\"Chambered Nautilus\",\"Chilean Basket Star\",\"Chilean Jack Mackerel\",\"Chinook Salmon\",\"Christmas Tree Worm\",\"Clam\",\"Clown Anemonefish\",\"Clown Triggerfish\",\"Cod\",\"Coelacanth\",\"Cockscomb Cup Coral\",\"Common Fangtooth\",\"Conch\",\"Cookiecutter Shark\",\"Copepod\",\"Coral\",\"Corydoras\",\"Cownose Ray\",\"Crab\",\"Crown-of-Thorns Starfish\",\"Cushion Star\",\"Cuttlefish\",\"California Sea Otters\",\"Dolphin\",\"Dolphinfish\",\"Dory\",\"Devil Fish\",\"Dugong\",\"Dumbo Octopus\",\"Dungeness Crab\",\"Eccentric Sand Dollar\",\"Edible Sea Cucumber\",\"Eel\",\"Elephant Seal\",\"Elkhorn Coral\",\"Emperor Shrimp\",\"Estuarine Crocodile\",\"Fathead Sculpin\",\"Fiddler Crab\",\"Fin Whale\",\"Flameback\",\"Flamingo Tongue Snail\",\"Flashlight Fish\",\"Flatback Turtle\",\"Flatfish\",\"Flying Fish\",\"Flounder\",\"Fluke\",\"French Angelfish\",\"Frilled Shark\",\"Fugu (also called Pufferfish)\",\"Gar\",\"Geoduck\",\"Giant Barrel Sponge\",\"Giant Caribbean Sea Anemone\",\"Giant Clam\",\"Giant Isopod\",\"Giant Kingfish\",\"Giant Oarfish\",\"Giant Pacific Octopus\",\"Giant Pyrosome\",\"Giant Sea Star\",\"Giant Squid\",\"Glowing Sucker Octopus\",\"Giant Tube Worm\",\"Goblin Shark\",\"Goosefish\",\"Great White Shark\",\"Greenland Shark\",\"Grey Atlantic Seal\",\"Grouper\",\"Grunion\",\"Guineafowl Puffer\",\"Haddock\",\"Hake\",\"Halibut\",\"Hammerhead Shark\",\"Hapuka\",\"Harbor Porpoise\",\"Harbor Seal\",\"Hatchetfish\",\"Hawaiian Monk Seal\",\"Hawksbill Turtle\",\"Hector's Dolphin\",\"Hermit Crab\",\"Herring\",\"Hoki\",\"Horn Shark\",\"Horseshoe Crab\",\"Humpback Anglerfish\",\"Humpback Whale\",\"Icefish\",\"Imperator Angelfish\",\"Irukandji Jellyfish\",\"Isopod\",\"Ivory Bush Coral\",\"Japanese Spider Crab\",\"Jellyfish\",\"John Dory\",\"Juan Fernandez Fur Seal\",\"Killer Whale\",\"Kiwa Hirsuta\",\"Krill\",\"Lagoon Triggerfish\",\"Lamprey\",\"Leafy Seadragon\",\"Leopard Seal\",\"Limpet\",\"Ling\",\"Lionfish\",\"Lions Mane Jellyfish\",\"Lobe Coral\",\"Lobster\",\"Loggerhead Turtle\",\"Longnose Sawshark\",\"Longsnout Seahorse\",\"Lophelia Coral\",\"Marrus Orthocanna\",\"Manatee\",\"Manta Ray\",\"Marlin\",\"Megamouth Shark\",\"Mexican Lookdown\",\"Mimic Octopus\",\"Moon Jelly\",\"Mollusk\",\"Monkfish\",\"Moray Eel\",\"Mullet\",\"Mussel\",\"Megaladon\",\"Napoleon Wrasse\",\"Nassau Grouper\",\"Narwhal\",\"Nautilus\",\"Needlefish\",\"Northern Seahorse\",\"North Atlantic Right Whale\",\"Northern Red Snapper\",\"Norway Lobster\",\"Nudibranch\",\"Nurse Shark\",\"Oarfish\",\"Ocean Sunfish\",\"Oceanic Whitetip Shark\",\"Octopus\",\"Olive Sea Snake\",\"Orange Roughy\",\"Ostracod\",\"Otter\",\"Oyster\",\"Pacific Angelshark\",\"Pacific Blackdragon\",\"Pacific Halibut\",\"Pacific Sardine\",\"Pacific Sea Nettle Jellyfish\",\"Pacific White Sided Dolphin\",\"Pantropical Spotted Dolphin\",\"Patagonian Toothfish\",\"Peacock Mantis Shrimp\",\"Pelagic Thresher Shark\",\"Penguin\",\"Peruvian Anchoveta\",\"Pilchard\",\"Pink Salmon\",\"Pinniped\",\"Plankton\",\"Porpoise\",\"Polar Bear\",\"Portuguese Man o' War\",\"Pycnogonid Sea Spider\",\"Quahog\",\"Queen Angelfish\",\"Queen Conch\",\"Queen Parrotfish\",\"Queensland Grouper\",\"Ragfish\",\"Ratfish\",\"Rattail Fish\",\"Ray\",\"Red Drum\",\"Red King Crab\",\"Ringed Seal\",\"Risso's Dolphin\",\"Ross Seals\",\"Sablefish\",\"Salmon\",\"Sand Dollar\",\"Sandbar Shark\",\"Sawfish\",\"Sarcastic Fringehead\",\"Scalloped Hammerhead Shark\",\"Seahorse\",\"Sea Cucumber\",\"Sea Lion\",\"Sea Urchin\",\"Seal\",\"Shark\",\"Shortfin Mako Shark\",\"Shovelnose Guitarfish\",\"Shrimp\",\"Silverside Fish\",\"Skipjack Tuna\",\"Slender Snipe Eel\",\"Smalltooth Sawfish\",\"Smelts\",\"Sockeye Salmon\",\"Southern Stingray\",\"Sponge\",\"Spotted Porcupinefish\",\"Spotted Dolphin\",\"Spotted Eagle Ray\",\"Spotted Moray\",\"Squid\",\"Squidworm\",\"Starfish\",\"Stickleback\",\"Stonefish\",\"Stoplight Loosejaw\",\"Sturgeon\",\"Swordfish\",\"Tan Bristlemouth\",\"Tasseled Wobbegong\",\"Terrible Claw Lobster\",\"Threespot Damselfish\",\"Tiger Prawn\",\"Tiger Shark\",\"Tilefish\",\"Toadfish\",\"Tropical Two-Wing Flyfish\",\"Tuna\",\"Umbrella Squid\",\"Velvet Crab\",\"Venus Flytrap Sea Anemone\",\"Vigtorniella Worm\",\"Viperfish\",\"Vampire Squid\",\"Vaquita\",\"Wahoo\",\"Walrus\",\"West Indian Manatee\",\"Whale\",\"Whale Shark\",\"Whiptail Gulper\",\"White-Beaked Dolphin\",\"White-Ring Garden Eel\",\"White Shrimp\",\"Wobbegong\",\"Wrasse\",\"Wreckfish\",\"Xiphosura\",\"Yellowtail Damselfish\",\"Yelloweye Rockfish\",\"Yellow Cup Black Coral\",\"Yellow Tube Sponge\",\"Yellowfin Tuna\",\"Zebrashark\",\"Zooplankton\"],\n          //list of desert, grassland, and forest animals comes from http://www.skyenimals.com/\n          \"desert\" : [\"Aardwolf\",\"Addax\",\"African Wild Ass\",\"Ant\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bat\",\"Bearded Dragon\",\"Beetle\",\"Bird\",\"Black-footed Cat\",\"Boa\",\"Brown Bear\",\"Bustard\",\"Butterfly\",\"Camel\",\"Caracal\",\"Caracara\",\"Caterpillar\",\"Centipede\",\"Cheetah\",\"Chipmunk\",\"Chuckwalla\",\"Climbing Mouse\",\"Coati\",\"Cobra\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Crane Fly\",\"Crow\",\"Dassie Rat\",\"Dove\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Emu\",\"Falcon\",\"Fly\",\"Fox\",\"Frogmouth\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Grasshopper\",\"Guanaco\",\"Gundi\",\"Hamster\",\"Hawk\",\"Hedgehog\",\"Hyena\",\"Hyrax\",\"Jackal\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kowari\",\"Kultarr\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pronghorn\",\"Python\",\"Rabbit\",\"Raccoon\",\"Rattlesnake\",\"Rhinoceros\",\"Sand Cat\",\"Spectacled Bear\",\"Spiny Mouse\",\"Starling\",\"Stick Bug\",\"Tarantula\",\"Tit\",\"Toad\",\"Tortoise\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Waxwing\",\"Xerus\",\"Zebra\"],\n          \"grassland\" : [\"Aardvark\",\"Aardwolf\",\"Accentor\",\"African Buffalo\",\"African Wild Dog\",\"Alpaca\",\"Anaconda\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Barbet\",\"Bat\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bird\",\"Bison\",\"Black-footed Cat\",\"Black-footed Ferret\",\"Bluebird\",\"Boa\",\"Bowerbird\",\"Brown Bear\",\"Bush Dog\",\"Bushshrike\",\"Bustard\",\"Butterfly\",\"Buzzard\",\"Caracal\",\"Caracara\",\"Cardinal\",\"Caterpillar\",\"Cheetah\",\"Chipmunk\",\"Civet\",\"Climbing Mouse\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Common Genet\",\"Cotton Rat\",\"Cougar\",\"Courser\",\"Coyote\",\"Crane\",\"Crane Fly\",\"Cricket\",\"Crow\",\"Culpeo\",\"Death Adder\",\"Deer\",\"Deer Mouse\",\"Dingo\",\"Dinosaur\",\"Dove\",\"Drongo\",\"Duck\",\"Duiker\",\"Dunnart\",\"Eagle\",\"Echidna\",\"Elephant\",\"Elk\",\"Emu\",\"Falcon\",\"Finch\",\"Flea\",\"Fly\",\"Flying Frog\",\"Fox\",\"Frog\",\"Frogmouth\",\"Garter Snake\",\"Gazelle\",\"Gecko\",\"Geoffroy's Cat\",\"Gerbil\",\"Giant Tortoise\",\"Giraffe\",\"Grasshopper\",\"Grison\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Guinea Pig\",\"Hamster\",\"Harrier\",\"Hartebeest\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hippopotamus\",\"Hornbill\",\"Hyena\",\"Hyrax\",\"Impala\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kangaroo\",\"Kangaroo Rat\",\"Kestrel\",\"Kultarr\",\"Ladybug\",\"Leopard\",\"Lion\",\"Macaw\",\"Meerkat\",\"Mouse\",\"Newt\",\"Oryx\",\"Ostrich\",\"Owl\",\"Pangolin\",\"Pheasant\",\"Prairie Dog\",\"Pronghorn\",\"Przewalski's Horse\",\"Python\",\"Quoll\",\"Rabbit\",\"Raven\",\"Rhinoceros\",\"Shelduck\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Tamandua\",\"Tasmanian Devil\",\"Thornbill\",\"Thrush\",\"Toad\",\"Tortoise\"],\n          \"forest\" : [\"Agouti\",\"Anaconda\",\"Anoa\",\"Ant\",\"Anteater\",\"Antelope\",\"Armadillo\",\"Asian Black Bear\",\"Aye-aye\",\"Babirusa\",\"Baboon\",\"Badger\",\"Bandicoot\",\"Banteng\",\"Barbet\",\"Basilisk\",\"Bat\",\"Bearded Dragon\",\"Bee\",\"Bee-eater\",\"Beetle\",\"Bettong\",\"Binturong\",\"Bird-of-paradise\",\"Bongo\",\"Bowerbird\",\"Bulbul\",\"Bush Dog\",\"Bushbaby\",\"Bushshrike\",\"Butterfly\",\"Buzzard\",\"Caecilian\",\"Cardinal\",\"Cassowary\",\"Caterpillar\",\"Centipede\",\"Chameleon\",\"Chimpanzee\",\"Cicada\",\"Civet\",\"Clouded Leopard\",\"Coati\",\"Cobra\",\"Cockatoo\",\"Cockroach\",\"Colugo\",\"Cotinga\",\"Cotton Rat\",\"Cougar\",\"Crane Fly\",\"Cricket\",\"Crocodile\",\"Crow\",\"Cuckoo\",\"Cuscus\",\"Death Adder\",\"Deer\",\"Dhole\",\"Dingo\",\"Dinosaur\",\"Drongo\",\"Duck\",\"Duiker\",\"Eagle\",\"Echidna\",\"Elephant\",\"Finch\",\"Flat-headed Cat\",\"Flea\",\"Flowerpecker\",\"Fly\",\"Flying Frog\",\"Fossa\",\"Frog\",\"Frogmouth\",\"Gaur\",\"Gecko\",\"Gorilla\",\"Grison\",\"Hawaiian Honeycreeper\",\"Hawk\",\"Hedgehog\",\"Helmetshrike\",\"Hornbill\",\"Hyrax\",\"Iguana\",\"Jackal\",\"Jaguar\",\"Jaguarundi\",\"Kestrel\",\"Ladybug\",\"Lemur\",\"Leopard\",\"Lion\",\"Macaw\",\"Mandrill\",\"Margay\",\"Monkey\",\"Mouse\",\"Mouse Deer\",\"Newt\",\"Okapi\",\"Old World Flycatcher\",\"Orangutan\",\"Owl\",\"Pangolin\",\"Peafowl\",\"Pheasant\",\"Possum\",\"Python\",\"Quokka\",\"Rabbit\",\"Raccoon\",\"Red Panda\",\"Red River Hog\",\"Rhinoceros\",\"Sloth Bear\",\"Spectacled Bear\",\"Squirrel\",\"Starling\",\"Stick Bug\",\"Sun Bear\",\"Tamandua\",\"Tamarin\",\"Tapir\",\"Tarantula\",\"Thrush\",\"Tiger\",\"Tit\",\"Toad\",\"Tortoise\",\"Toucan\",\"Trogon\",\"Trumpeter\",\"Turaco\",\"Turtle\",\"Tyrant Flycatcher\",\"Viper\",\"Vulture\",\"Wallaby\",\"Warbler\",\"Wasp\",\"Waxwing\",\"Weaver\",\"Weaver-finch\",\"Whistler\",\"White-eye\",\"Whydah\",\"Woodswallow\",\"Worm\",\"Wren\",\"Xenops\",\"Yellowjacket\",\"Accentor\",\"African Buffalo\",\"American Black Bear\",\"Anole\",\"Bird\",\"Bison\",\"Boa\",\"Brown Bear\",\"Chipmunk\",\"Common Genet\",\"Copperhead\",\"Coyote\",\"Deer Mouse\",\"Dormouse\",\"Elk\",\"Emu\",\"Fisher\",\"Fox\",\"Garter Snake\",\"Giant Panda\",\"Giant Tortoise\",\"Groundhog\",\"Grouse\",\"Guanaco\",\"Himalayan Tahr\",\"Kangaroo\",\"Koala\",\"Numbat\",\"Quoll\",\"Raccoon dog\",\"Tasmanian Devil\",\"Thornbill\",\"Turkey\",\"Vole\",\"Weasel\",\"Wildcat\",\"Wolf\",\"Wombat\",\"Woodchuck\",\"Woodpecker\"],\n          //list of farm animals comes from https://www.buzzle.com/articles/farm-animals-list.html\n          \"farm\" : [\"Alpaca\",\"Buffalo\",\"Banteng\",\"Cow\",\"Cat\",\"Chicken\",\"Carp\",\"Camel\",\"Donkey\",\"Dog\",\"Duck\",\"Emu\",\"Goat\",\"Gayal\",\"Guinea\",\"Goose\",\"Horse\",\"Honey\",\"Llama\",\"Pig\",\"Pigeon\",\"Rhea\",\"Rabbit\",\"Sheep\",\"Silkworm\",\"Turkey\",\"Yak\",\"Zebu\"],\n          //list of pet animals comes from https://www.dogbreedinfo.com/pets/pet.htm\n          \"pet\" : [\"Bearded Dragon\",\"Birds\",\"Burro\",\"Cats\",\"Chameleons\",\"Chickens\",\"Chinchillas\",\"Chinese Water Dragon\",\"Cows\",\"Dogs\",\"Donkey\",\"Ducks\",\"Ferrets\",\"Fish\",\"Geckos\",\"Geese\",\"Gerbils\",\"Goats\",\"Guinea Fowl\",\"Guinea Pigs\",\"Hamsters\",\"Hedgehogs\",\"Horses\",\"Iguanas\",\"Llamas\",\"Lizards\",\"Mice\",\"Mule\",\"Peafowl\",\"Pigs and Hogs\",\"Pigeons\",\"Ponies\",\"Pot Bellied Pig\",\"Rabbits\",\"Rats\",\"Sheep\",\"Skinks\",\"Snakes\",\"Stick Insects\",\"Sugar Gliders\",\"Tarantula\",\"Turkeys\",\"Turtles\"],\n          //list of zoo animals comes from https://bronxzoo.com/animals\n          \"zoo\" : [\"Aardvark\",\"African Wild Dog\",\"Aldabra Tortoise\",\"American Alligator\",\"American Bison\",\"Amur Tiger\",\"Anaconda\",\"Andean Condor\",\"Asian Elephant\",\"Baby Doll Sheep\",\"Bald Eagle\",\"Barred Owl\",\"Blue Iguana\",\"Boer Goat\",\"California Sea Lion\",\"Caribbean Flamingo\",\"Chinchilla\",\"Collared Lemur\",\"Coquerel's Sifaka\",\"Cuban Amazon Parrot\",\"Ebony Langur\",\"Fennec Fox\",\"Fossa\",\"Gelada\",\"Giant Anteater\",\"Giraffe\",\"Gorilla\",\"Grizzly Bear\",\"Henkel's Leaf-tailed Gecko\",\"Indian Gharial\",\"Indian Rhinoceros\",\"King Cobra\",\"King Vulture\",\"Komodo Dragon\",\"Linne's Two-toed Sloth\",\"Lion\",\"Little Penguin\",\"Madagascar Tree Boa\",\"Magellanic Penguin\",\"Malayan Tapir\",\"Malayan Tiger\",\"Matschies Tree Kangaroo\",\"Mini Donkey\",\"Monarch Butterfly\",\"Nile crocodile\",\"North American Porcupine\",\"Nubian Ibex\",\"Okapi\",\"Poison Dart Frog\",\"Polar Bear\",\"Pygmy Marmoset\",\"Radiated Tortoise\",\"Red Panda\",\"Red Ruffed Lemur\",\"Ring-tailed Lemur\",\"Ring-tailed Mongoose\",\"Rock Hyrax\",\"Small Clawed Asian Otter\",\"Snow Leopard\",\"Snowy Owl\",\"Southern White-faced Owl\",\"Southern White Rhinocerous\",\"Squirrel Monkey\",\"Tufted Puffin\",\"White Cheeked Gibbon\",\"White-throated Bee Eater\",\"Zebra\"]\n        },\n        primes: [\n            // 1230 first primes, i.e. all primes up to the first one greater than 10000, inclusive.\n            2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973,10007\n        ],\n        emotions: [\n            \"love\",\n            \"joy\",\n            \"surprise\",\n            \"anger\",\n            \"sadness\",\n            \"fear\"\n        ],\n        music_genres: {\n            'general': [\n                'Rock', \n                'Pop', \n                'Hip-Hop', \n                'Jazz', \n                'Classical', \n                'Electronic', \n                'Country', \n                'R&B', \n                'Reggae', \n                'Blues', \n                'Metal', \n                'Folk', \n                'Alternative', \n                'Punk',\n                'Disco', \n                'Funk', \n                'Techno',\n                'Indie',\n                'Gospel', \n                'Dance', \n                'Children\\'s', \n                'World'\n            ],\n            'alternative': [\n                'Art Punk',\n                'Alternative Rock',\n                'Britpunk',\n                'College Rock',\n                'Crossover Thrash',\n                'Crust Punk',\n                'Emo / Emocore',\n                'Experimental Rock',\n                'Folk Punk',\n                'Goth / Gothic Rock',\n                'Grunge',\n                'Hardcore Punk',\n                'Hard Rock',\n                'Indie Rock',\n                'Lo-fi',\n                'Musique Concrète',\n                'New Wave',\n                'Progressive Rock',\n                'Punk',\n                'Shoegaze',\n                'Steampunk',\n            ], 'blues': [\n                'Acoustic Blues',\n                'African Blues',\n                'Blues Rock',\n                'Blues Shouter',\n                'British Blues',\n                'Canadian Blues',\n                'Chicago Blues',\n                'Classic Blues',\n                'Classic Female Blues',\n                'Contemporary Blues',\n                'Country Blues',\n                'Dark Blues',\n                'Delta Blues',\n                'Detroit Blues',\n                'Doom Blues',\n                'Electric Blues',\n                'Folk Blues',\n                'Gospel Blues',\n                'Harmonica Blues',\n                'Hill Country Blues',\n                'Hokum Blues',\n                'Jazz Blues',\n                'Jump Blues',\n                'Kansas City Blues',\n                'Louisiana Blues',\n                'Memphis Blues',\n                'Modern Blues',\n                'New Orlean Blues',\n                'NY Blues',\n                'Piano Blues',\n                'Piedmont Blues',\n                'Punk Blues',\n                'Ragtime Blues',\n                'Rhythm Blues',\n                'Soul Blues',\n                'St.Louis Blues',\n                'Soul Blues',\n                'Swamp Blues',\n                'Texas Blues',\n                'Urban Blues',\n                'Vandeville',\n                'West Coast Blues',\n            ], 'children\\'s': [\n                'Lullabies',\n                'Sing - Along',\n                'Stories'\n            ], 'classical': [\n                'Avant-Garde',\n                'Ballet',\n                'Baroque',\n                'Cantata',\n                'Chamber Music',\n                'String Quartet',\n                'Chant',\n                'Choral',\n                'Classical Crossover',\n                'Concerto',\n                'Concerto Grosso',\n                'Contemporary Classical',\n                'Early Music',\n                'Expressionist',\n                'High Classical',\n                'Impressionist',\n                'Mass Requiem',\n                'Medieval',\n                'Minimalism',\n                'Modern Composition',\n                'Modern Classical',\n                'Opera',\n                'Oratorio',\n                'Orchestral',\n                'Organum',\n                'Renaissance',\n                'Romantic (early period)',\n                'Romantic (later period)',\n                'Sonata',\n                'Symphonic',\n                'Symphony',\n                'Twelve-tone',\n                'Wedding Music'\n            ], 'country': [\n                'Alternative Country',\n                'Americana',\n                'Australian Country',\n                'Bakersfield Sound',\n                'Bluegrass',\n                'Blues Country',\n                'Cajun Fiddle Tunes',\n                'Christian Country',\n                'Classic Country',\n                'Close Harmony',\n                'Contemporary Bluegrass',\n                'Contemporary Country',\n                'Country Gospel',\n                'Country Pop',\n                'Country Rap',\n                'Country Rock',\n                'Country Soul',\n                'Cowboy / Western',\n                'Cowpunk',\n                'Dansband',\n                'Honky Tonk',\n                'Franco-Country',\n                'Gulf and Western',\n                'Hellbilly Music',\n                'Honky Tonk',\n                'Instrumental Country',\n                'Lubbock Sound',\n                'Nashville Sound',\n                'Neotraditional Country',\n                'Outlaw Country',\n                'Progressive',\n                'Psychobilly / Punkabilly',\n                'Red Dirt',\n                'Sertanejo',\n                'Texas County',\n                'Traditional Bluegrass',\n                'Traditional Country',\n                'Truck-Driving Country',\n                'Urban Cowboy',\n                'Western Swing'\n            ], 'dance': [\n                'Club / Club Dance',\n                'Breakcore',\n                'Breakbeat / Breakstep',\n                'Chillstep',\n                'Deep House',\n                'Dubstep',\n                'Dancehall',\n                'Electro House',\n                'Electroswing',\n                'Exercise',\n                'Future Garage',\n                'Garage',\n                'Glitch Hop',\n                'Glitch Pop',\n                'Grime',\n                'Hardcore',\n                'Hard Dance',\n                'Hi-NRG / Eurodance',\n                'Horrorcore',\n                'House',\n                'Jackin House',\n                'Jungle / Drum n bass',\n                'Liquid Dub',\n                'Regstep',\n                'Speedcore',\n                'Techno',\n                'Trance',\n                'Trap'\n            ], electronic: [\n                '2-Step',\n                '8bit',\n                'Ambient',\n                'Asian Underground',\n                'Bassline',\n                'Chillwave',\n                'Chiptune',\n                'Crunk',\n                'Downtempo',\n                'Drum & Bass',\n                'Hard Step',\n                'Electro',\n                'Electro-swing',\n                'Electroacoustic',\n                'Electronica',\n                'Electronic Rock',\n                'Eurodance',\n                'Hardstyle',\n                'Hi-Nrg',\n                'IDM/Experimental',\n                'Industrial',\n                'Trip Hop',\n                'Vaporwave',\n                'UK Garage',\n                'House',\n                'Dubstep',\n                'Deep House',\n                'EDM',\n                'Future Bass',\n                'Psychedelic trance'\n            ], 'jazz' : [\n                'Acid Jazz',\n                'Afro-Cuban Jazz',\n                'Avant-Garde Jazz',\n                'Bebop',\n                'Big Band',\n                'Blue Note',\n                'British Dance Band (Jazz)',\n                'Cape Jazz',\n                'Chamber Jazz',\n                'Contemporary Jazz',\n                'Continental Jazz',\n                'Cool Jazz',\n                'Crossover Jazz',\n                'Dark Jazz',\n                'Dixieland',\n                'Early Jazz',\n                'Electro Swing (Jazz)',\n                'Ethio-jazz',\n                'Ethno-Jazz',\n                'European Free Jazz',\n                'Free Funk (Avant-Garde / Funk Jazz)',\n                'Free Jazz',\n                'Fusion',\n                'Gypsy Jazz',\n                'Hard Bop',\n                'Indo Jazz',\n                'Jazz Blues',\n                'Jazz-Funk (see Free Funk)',\n                'Jazz-Fusion',\n                'Jazz Rap',\n                'Jazz Rock',\n                'Kansas City Jazz',\n                'Latin Jazz',\n                'M-Base Jazz',\n                'Mainstream Jazz',\n                'Modal Jazz',\n                'Neo-Bop',\n                'Neo-Swing',\n                'Nu Jazz',\n                'Orchestral Jazz',\n                'Post-Bop',\n                'Punk Jazz',\n                'Ragtime',\n                'Ska Jazz',\n                'Skiffle (also Folk)',\n                'Smooth Jazz',\n                'Soul Jazz',\n                'Swing Jazz',\n                'Straight-Ahead Jazz',\n                'Trad Jazz',\n                'Third Stream',\n                'Jazz-Funk',\n                'Free Jazz',\n                'West Coast Jazz'\n            ], 'metal': [\n                'Heavy Metal',\n                'Speed Metal',\n                'Thrash Metal',\n                'Power Metal',\n                'Death Metal',\n                'Black Metal',\n                'Pagan Metal',\n                'Viking Metal',\n                'Folk Metal',\n                'Symphonic Metal',\n                'Gothic Metal',\n                'Glam Metal',\n                'Hair Metal',\n                'Doom Metal',\n                'Groove Metal',\n                'Industrial Metal',\n                'Modern Metal',\n                'Neoclassical Metal',\n                'New Wave Of British Heavy Metal',\n                'Post Metal',\n                'Progressive Metal',\n                'Avantgarde Metal',\n                'Sludge',\n                'Djent',\n                'Drone',\n                'Kawaii Metal',\n                'Pirate Metal',\n                'Nu Metal',\n                'Neue Deutsche Härte',\n                'Math Metal',\n                'Crossover',\n                'Grindcore',\n                'Hardcore',\n                'Metalcore',\n                'Deathcore',\n                'Post Hardcore',\n                'Mathcore'\n            ], 'folk': [\n                'American Folk Revival',\n                'Anti - Folk',\n                'British Folk Revival',\n                'Contemporary Folk',\n                'Filk Music',\n                'Freak Folk',\n                'Indie Folk',\n                'Industrial Folk',\n                'Neofolk',\n                'Progressive Folk',\n                'Psychedelic Folk',\n                'Sung Poetry',\n                'Techno - Folk',\n                'Folk Rock',\n                'Old-time Music',\n                'Bluegrass',\n                'Appalachian',\n                'Roots Revival',\n                'Celtic',\n                'Indie Folk'\n            ], 'pop': [\n                'Adult Contemporary',\n                'Arab Pop',\n                'Baroque',\n                'Britpop',\n                'Bubblegum Pop',\n                'Chamber Pop',\n                'Chanson',\n                'Christian Pop',\n                'Classical Crossover',\n                'Europop',\n                'Austropop',\n                'Balkan Pop',\n                'French Pop',\n                'Korean Pop',\n                'Japanese Pop',\n                'Chinese Pop',\n                'Latin Pop',\n                'Laïkó',\n                'Nederpop',\n                'Russian Pop',\n                'Dance Pop',\n                'Dream Pop',\n                'Electro Pop',\n                'Iranian Pop',\n                'Jangle Pop',\n                'Latin Ballad',\n                'Levenslied',\n                'Louisiana Swamp Pop',\n                'Mexican Pop',\n                'Motorpop',\n                'New Romanticism',\n                'Orchestral Pop',\n                'Pop Rap',\n                'Popera',\n                'Pop / Rock',\n                'Pop Punk',\n                'Power Pop',\n                'Psychedelic Pop',\n                'Russian Pop',\n                'Schlager',\n                'Soft Rock',\n                'Sophisti - Pop',\n                'Space Age Pop',\n                'Sunshine Pop',\n                'Surf Pop',\n                'Synthpop',\n                'Teen Pop',\n                'Traditional Pop Music',\n                'Turkish Pop',\n                'Vispop',\n                'Wonky Pop'\n            ], 'r&b': [\n                '(Carolina) Beach Music',\n                'Contemporary R & B',\n                'Disco',\n                'Doo Wop',\n                'Funk',\n                'Modern Soul',\n                'Motown',\n                'Neo - Soul',\n                'Northern Soul',\n                'Psychedelic Soul',\n                'Quiet Storm',\n                'Soul',\n                'Soul Blues',\n                'Southern Soul'\n            ], 'reggae': [\n                '2 - Tone',\n                'Dub',\n                'Roots Reggae',\n                'Reggae Fusion',\n                'Reggae en Español',\n                'Spanish Reggae',\n                'Reggae 110',\n                'Reggae Bultrón',\n                'Romantic Flow',\n                'Lovers Rock',\n                'Raggamuffin',\n                'Ragga',\n                'Dancehall',\n                'Ska',\n            ], 'rock': [\n                'Acid Rock',\n                'Adult - Oriented Rock',\n                'Afro Punk',\n                'Adult Alternative',\n                'Alternative Rock',\n                'American Traditional Rock',\n                'Anatolian Rock',\n                'Arena Rock',\n                'Art Rock',\n                'Blues - Rock',\n                'British Invasion',\n                'Cock Rock',\n                'Death Metal / Black Metal',\n                'Doom Metal',\n                'Glam Rock',\n                'Gothic Metal',\n                'Grind Core',\n                'Hair Metal',\n                'Hard Rock',\n                'Math Metal',\n                'Math Rock',\n                'Metal',\n                'Metal Core',\n                'Noise Rock',\n                'Jam Bands',\n                'Post Punk',\n                'Post Rock',\n                'Prog - Rock / Art Rock',\n                'Progressive Metal',\n                'Psychedelic',\n                'Rock & Roll',\n                'Rockabilly',\n                'Roots Rock',\n                'Singer / Songwriter',\n                'Southern Rock',\n                'Spazzcore',\n                'Stoner Metal',\n                'Surf',\n                'Technical Death Metal',\n                'Tex - Mex',\n                'Thrash Metal',\n                'Time Lord Rock(Trock)',\n                'Trip - hop',\n                'Yacht Rock',\n                'School House Rock'\n            ], 'hip-hop': [\n                'Alternative Rap',\n                'Avant - Garde',\n                'Bounce',\n                'Chap Hop',\n                'Christian Hip Hop',\n                'Conscious Hip Hop',\n                'Country - Rap',\n                'Grunk',\n                'Crunkcore',\n                'Cumbia Rap',\n                'Dirty South',\n                'East Coast',\n                'Brick City Club',\n                'Hardcore Hip Hop',\n                'Mafioso Rap',\n                'New Jersey Hip Hop',\n                'Freestyle Rap',\n                'G - Funk',\n                'Gangsta Rap',\n                'Golden Age',\n                'Grime',\n                'Hardcore Rap',\n                'Hip - Hop',\n                'Hip Pop',\n                'Horrorcore',\n                'Hyphy',\n                'Industrial Hip Hop',\n                'Instrumental Hip Hop',\n                'Jazz Rap',\n                'Latin Rap',\n                'Low Bap',\n                'Lyrical Hip Hop',\n                'Merenrap',\n                'Midwest Hip Hop',\n                'Chicago Hip Hop',\n                'Detroit Hip Hop',\n                'Horrorcore',\n                'St.Louis Hip Hop',\n                'Twin Cities Hip Hop',\n                'Motswako',\n                'Nerdcore',\n                'New Jack Swing',\n                'New School Hip Hop',\n                'Old School Rap',\n                'Rap',\n                'Trap',\n                'Turntablism',\n                'Underground Rap',\n                'West Coast Rap',\n                'East Coast Rap',\n                'Trap',\n                'UK Grime',\n                'Hyphy',\n                'Emo-rap',\n                'Cloud rap',\n                'G-funk',\n                'Boom Bap',\n                'Mumble',\n                'Drill',\n                'UK Drill',\n                'Soundcloud Rap',\n                'Lo-fi'\n            ], 'punk': [\n                'Afro-punk',\n                'Anarcho punk',\n                'Art punk',\n                'Christian punk',\n                'Crust punk',\n                'Deathrock',\n                'Egg punk',\n                'Garage punk',\n                'Glam punk',\n                'Hardcore punk',\n                'Horror punk',\n                'Incelcore/e-punk',\n                'Oi!',\n                'Peace punk',\n                'Punk pathetique',\n                'Queercore',\n                'Riot Grrrl',\n                'Skate punk',\n                'Street punk',\n                'Taqwacore',\n                'Trallpunk'\n            ], 'disco': [\n                'Nu-disco',\n                'Disco-funk',\n                'Hi-NRG',\n                'Italo Disco',\n                'Eurodisco',\n                'Boogie',\n                'Space Disco',\n                'Post-disco',\n                'Electro Disco',\n                'Disco House',\n                'Disco Pop',\n                'Soulful House'\n            ], 'funk': [\n                'Funk Rock',\n                'P-Funk (Parliament-Funkadelic)',\n                'Psychedelic Funk',\n                'Funk Metal',\n                'Electro-Funk',\n                'Go-go',\n                'Boogie-Funk',\n                'Jazz-Funk',\n                'Soul-Funk',\n                'Funky Disco',\n                'Nu-Funk',\n                'Afrobeat',\n                'Latin Funk',\n                'G-Funk',\n                'Acid Jazz',\n                'Funktronica',\n                'Folk-Funk',\n                'Space Funk',\n                'Ambient Funk',\n                'Hard Funk',\n                'Fusion Funk'\n            ], 'techno': [\n                'Acid Techno',\n                'Ambient Techno',\n                'Detroit Techno',\n                'Dub Techno',\n                'Minimal Techno',\n                'Industrial Techno',\n                'Hard Techno',\n                'Trance',\n                'Progressive Techno',\n                'Tech House',\n                'Electronica',\n                'Breakbeat Techno',\n                'Electro Techno',\n                'Melodic Techno',\n                'Experimental Techno',\n                'Dark Techno',\n                'Ebm',\n                'Hypnotic Techno',\n                'Psychedelic Techno',\n                'Rave Techno',\n                'Techno-Pop'\n            ], 'indie': [\n                'Indie Rock',\n                'Indie Pop',\n                'Indie Folk',\n                'Indie Electronic',\n                'Indie Punk',\n                'Indie Hip-Hop',\n                'Dream Pop',\n                'Shoegaze',\n                'Lo-fi',\n                'Chillwave',\n                'Freak Folk',\n                'Noise Pop',\n                'Math Rock',\n                'Post-Punk',\n                'Garage Rock',\n                'Experimental Indie',\n                'Surf Rock',\n                'Alternative Country',\n                'Indie Soul',\n                'Art Rock',\n                'Indie R&B',\n                'Indietronica',\n                'Emo',\n                'Post-Rock',\n                'Indie Pop-Rock',\n                'Indie Synthpop',\n                'Noise Rock',\n                'Psych Folk',\n                'Indie Blues'\n            ], 'gospel': [\n                'Traditional Gospel',\n                'Contemporary Gospel',\n                'Southern Gospel',\n                'Black Gospel',\n                'Urban Contemporary Gospel',\n                'Gospel Blues',\n                'Bluegrass Gospel',\n                'Country Gospel',\n                'Praise and Worship',\n                'Christian Hip-Hop',\n                'Gospel Jazz',\n                'Reggae Gospel',\n                'African Gospel',\n                'Latin Gospel',\n                'R&B Gospel',\n                'Gospel Choir',\n                'Acappella Gospel',\n                'Instrumental Gospel',\n                'Gospel Rap'\n            ], 'world': [\n                'African',\n                'Arabic',\n                'Asian',\n                'Caribbean',\n                'Celtic',\n                'European',\n                'Latin American',\n                'Middle Eastern',\n                'Native American',\n                'Polynesian',\n                'Reggae',\n                'Ska',\n                'Salsa',\n                'Flamenco',\n                'Bossa Nova',\n                'Tango',\n                'Fado',\n                'Klezmer',\n                'Balkan',\n                'Afrobeat',\n                'Mongolian Throat Singing',\n                'Indian Classical',\n                'Gamelan',\n                'Sufi Music',\n                'Zydeco',\n                'Kora Music',\n                'Andean Music',\n                'Irish Traditional',\n                'Gypsy Jazz',\n                'Bollywood',\n                'Bhangra',\n                'Jawaiian',\n                'Hawaiian Slack Key Guitar',\n                'Calypso',\n                'Cuban Son',\n                'Taiko Drumming',\n                'African Highlife',\n                'Merengue',\n                'Tuvan Throat Singing'\n            ]\n        },\n\n        // Data sourced from https://unicode.org/emoji/charts/full-emoji-list.html\n        emojis: {\n            \"smileys_and_emotion\": [\n                \"0x1f600\",\n                \"0x1f603\",\n                \"0x1f604\",\n                \"0x1f601\",\n                \"0x1f606\",\n                \"0x1f605\",\n                \"0x1f923\",\n                \"0x1f602\",\n                \"0x1f642\",\n                \"0x1f643\",\n                \"0x1fae0\",\n                \"0x1f609\",\n                \"0x1f60a\",\n                \"0x1f607\",\n                \"0x1f970\",\n                \"0x1f60d\",\n                \"0x1f929\",\n                \"0x1f618\",\n                \"0x1f617\",\n                \"0x263a\",\n                \"0x1f61a\",\n                \"0x1f619\",\n                \"0x1f972\",\n                \"0x1f60b\",\n                \"0x1f61b\",\n                \"0x1f61c\",\n                \"0x1f92a\",\n                \"0x1f61d\",\n                \"0x1f911\",\n                \"0x1f917\",\n                \"0x1f92d\",\n                \"0x1fae2\",\n                \"0x1fae3\",\n                \"0x1f92b\",\n                \"0x1f914\",\n                \"0x1fae1\",\n                \"0x1f910\",\n                \"0x1f928\",\n                \"0x1f610\",\n                \"0x1f611\",\n                \"0x1f636\",\n                \"0x1fae5\",\n                \"0x1f636\",\n                \"0x200d\",\n                \"0x1f32b\",\n                \"0xfe0f\",\n                \"0x1f60f\",\n                \"0x1f612\",\n                \"0x1f644\",\n                \"0x1f62c\",\n                \"0x1f62e\",\n                \"0x200d\",\n                \"0x1f4a8\",\n                \"0x1f925\",\n                \"0x1fae8\",\n                \"0x1f642\",\n                \"0x200d\",\n                \"0x2194\",\n                \"0xfe0f\",\n                \"0x1f642\",\n                \"0x200d\",\n                \"0x2195\",\n                \"0xfe0f\",\n                \"0x1f60c\",\n                \"0x1f614\",\n                \"0x1f62a\",\n                \"0x1f924\",\n                \"0x1f634\",\n                \"0x1f637\",\n                \"0x1f912\",\n                \"0x1f915\",\n                \"0x1f922\",\n                \"0x1f92e\",\n                \"0x1f927\",\n                \"0x1f975\",\n                \"0x1f976\",\n                \"0x1f974\",\n                \"0x1f635\",\n                \"0x1f635\",\n                \"0x200d\",\n                \"0x1f4ab\",\n                \"0x1f92f\",\n                \"0x1f920\",\n                \"0x1f973\",\n                \"0x1f978\",\n                \"0x1f60e\",\n                \"0x1f913\",\n                \"0x1f9d0\",\n                \"0x1f615\",\n                \"0x1fae4\",\n                \"0x1f61f\",\n                \"0x1f641\",\n                \"0x2639\",\n                \"0x1f62e\",\n                \"0x1f62f\",\n                \"0x1f632\",\n                \"0x1f633\",\n                \"0x1f97a\",\n                \"0x1f979\",\n                \"0x1f626\",\n                \"0x1f627\",\n                \"0x1f628\",\n                \"0x1f630\",\n                \"0x1f625\",\n                \"0x1f622\",\n                \"0x1f62d\",\n                \"0x1f631\",\n                \"0x1f616\",\n                \"0x1f623\",\n                \"0x1f61e\",\n                \"0x1f613\",\n                \"0x1f629\",\n                \"0x1f62b\",\n                \"0x1f971\",\n                \"0x1f624\",\n                \"0x1f621\",\n                \"0x1f620\",\n                \"0x1f92c\",\n                \"0x1f608\",\n                \"0x1f47f\",\n                \"0x1f480\",\n                \"0x2620\",\n                \"0x1f4a9\",\n                \"0x1f921\",\n                \"0x1f479\",\n                \"0x1f47a\",\n                \"0x1f47b\",\n                \"0x1f47d\",\n                \"0x1f47e\",\n                \"0x1f916\",\n                \"0x1f63a\",\n                \"0x1f638\",\n                \"0x1f639\",\n                \"0x1f63b\",\n                \"0x1f63c\",\n                \"0x1f63d\",\n                \"0x1f640\",\n                \"0x1f63f\",\n                \"0x1f63e\",\n                \"0x1f648\",\n                \"0x1f649\",\n                \"0x1f64a\",\n                \"0x1f48c\",\n                \"0x1f498\",\n                \"0x1f49d\",\n                \"0x1f496\",\n                \"0x1f497\",\n                \"0x1f493\",\n                \"0x1f49e\",\n                \"0x1f495\",\n                \"0x1f49f\",\n                \"0x2763\",\n                \"0x1f494\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f525\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1fa79\",\n                \"0x2764\",\n                \"0x1fa77\",\n                \"0x1f9e1\",\n                \"0x1f49b\",\n                \"0x1f49a\",\n                \"0x1f499\",\n                \"0x1fa75\",\n                \"0x1f49c\",\n                \"0x1f90e\",\n                \"0x1f5a4\",\n                \"0x1fa76\",\n                \"0x1f90d\",\n                \"0x1f48b\",\n                \"0x1f4af\",\n                \"0x1f4a2\",\n                \"0x1f4a5\",\n                \"0x1f4ab\",\n                \"0x1f4a6\",\n                \"0x1f4a8\",\n                \"0x1f573\",\n                \"0x1f4ac\",\n                \"0x1f441\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f5e8\",\n                \"0xfe0f\",\n                \"0x1f5e8\",\n                \"0x1f5ef\",\n                \"0x1f4ad\",\n                \"0x1f4a4\"\n            ],\n            \"people_and_body\": [\n                \"0x1f44b\",\n                \"0x1f91a\",\n                \"0x1f590\",\n                \"0x270b\",\n                \"0x1f596\",\n                \"0x1faf1\",\n                \"0x1faf2\",\n                \"0x1faf3\",\n                \"0x1faf4\",\n                \"0x1faf7\",\n                \"0x1faf8\",\n                \"0x1f44c\",\n                \"0x1f90c\",\n                \"0x1f90f\",\n                \"0x270c\",\n                \"0x1f91e\",\n                \"0x1faf0\",\n                \"0x1f91f\",\n                \"0x1f918\",\n                \"0x1f919\",\n                \"0x1f448\",\n                \"0x1f449\",\n                \"0x1f446\",\n                \"0x1f595\",\n                \"0x1f447\",\n                \"0x261d\",\n                \"0x1faf5\",\n                \"0x1f44d\",\n                \"0x1f44e\",\n                \"0x270a\",\n                \"0x1f44a\",\n                \"0x1f91b\",\n                \"0x1f91c\",\n                \"0x1f44f\",\n                \"0x1f64c\",\n                \"0x1faf6\",\n                \"0x1f450\",\n                \"0x1f932\",\n                \"0x1f91d\",\n                \"0x1f64f\",\n                \"0x270d\",\n                \"0x1f485\",\n                \"0x1f933\",\n                \"0x1f4aa\",\n                \"0x1f9be\",\n                \"0x1f9bf\",\n                \"0x1f9b5\",\n                \"0x1f9b6\",\n                \"0x1f442\",\n                \"0x1f9bb\",\n                \"0x1f443\",\n                \"0x1f9e0\",\n                \"0x1fac0\",\n                \"0x1fac1\",\n                \"0x1f9b7\",\n                \"0x1f9b4\",\n                \"0x1f440\",\n                \"0x1f441\",\n                \"0x1f445\",\n                \"0x1f444\",\n                \"0x1fae6\",\n                \"0x1f476\",\n                \"0x1f9d2\",\n                \"0x1f466\",\n                \"0x1f467\",\n                \"0x1f9d1\",\n                \"0x1f471\",\n                \"0x1f468\",\n                \"0x1f9d4\",\n                \"0x1f9d4\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9d4\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9b0\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9b1\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9b3\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9b2\",\n                \"0x1f469\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9b0\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9b0\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9b1\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9b1\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9b3\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9b3\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9b2\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9b2\",\n                \"0x1f471\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f471\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9d3\",\n                \"0x1f474\",\n                \"0x1f475\",\n                \"0x1f64d\",\n                \"0x1f64d\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f64d\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f64e\",\n                \"0x1f64e\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f64e\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f645\",\n                \"0x1f645\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f645\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f646\",\n                \"0x1f646\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f646\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f481\",\n                \"0x1f481\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f481\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f64b\",\n                \"0x1f64b\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f64b\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9cf\",\n                \"0x1f9cf\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9cf\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f647\",\n                \"0x1f647\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f647\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f926\",\n                \"0x1f926\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f926\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f937\",\n                \"0x1f937\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f937\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x2695\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x2695\",\n                \"0xfe0f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2695\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f393\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f393\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f393\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f3eb\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f3eb\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f3eb\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x2696\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x2696\",\n                \"0xfe0f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2696\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f33e\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f33e\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f33e\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f373\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f373\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f373\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f527\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f527\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f527\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f3ed\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f3ed\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f3ed\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f4bc\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f4bc\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f4bc\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f52c\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f52c\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f52c\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f4bb\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f4bb\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f4bb\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f3a4\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f3a4\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f3a4\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f3a8\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f3a8\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f3a8\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x2708\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x2708\",\n                \"0xfe0f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2708\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f680\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f680\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f680\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f692\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f692\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f692\",\n                \"0x1f46e\",\n                \"0x1f46e\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f46e\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f575\",\n                \"0x1f575\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f575\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f482\",\n                \"0x1f482\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f482\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f977\",\n                \"0x1f477\",\n                \"0x1f477\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f477\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1fac5\",\n                \"0x1f934\",\n                \"0x1f478\",\n                \"0x1f473\",\n                \"0x1f473\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f473\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f472\",\n                \"0x1f9d5\",\n                \"0x1f935\",\n                \"0x1f935\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f935\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f470\",\n                \"0x1f470\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f470\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f930\",\n                \"0x1fac3\",\n                \"0x1fac4\",\n                \"0x1f931\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f37c\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f37c\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f37c\",\n                \"0x1f47c\",\n                \"0x1f385\",\n                \"0x1f936\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f384\",\n                \"0x1f9b8\",\n                \"0x1f9b8\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9b8\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9b9\",\n                \"0x1f9b9\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9b9\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9d9\",\n                \"0x1f9d9\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9d9\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9da\",\n                \"0x1f9da\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9da\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9db\",\n                \"0x1f9db\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9db\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9dc\",\n                \"0x1f9dc\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9dc\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9dd\",\n                \"0x1f9dd\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9dd\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9de\",\n                \"0x1f9de\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9de\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9df\",\n                \"0x1f9df\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9df\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9cc\",\n                \"0x1f486\",\n                \"0x1f486\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f486\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f487\",\n                \"0x1f487\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f487\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f6b6\",\n                \"0x1f6b6\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f6b6\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f6b6\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f6b6\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f6b6\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f9cd\",\n                \"0x1f9cd\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9cd\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9ce\",\n                \"0x1f9ce\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9ce\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9ce\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f9ce\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f9ce\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9af\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9af\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9af\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9af\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9af\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9af\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9bc\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9bc\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9bc\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9bc\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9bc\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9bc\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9bd\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9bd\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9bd\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f9bd\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9bd\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f9bd\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f3c3\",\n                \"0x1f3c3\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f3c3\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f3c3\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f3c3\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f3c3\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x27a1\",\n                \"0xfe0f\",\n                \"0x1f483\",\n                \"0x1f57a\",\n                \"0x1f574\",\n                \"0x1f46f\",\n                \"0x1f46f\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f46f\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9d6\",\n                \"0x1f9d6\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9d6\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9d7\",\n                \"0x1f9d7\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9d7\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f93a\",\n                \"0x1f3c7\",\n                \"0x26f7\",\n                \"0x1f3c2\",\n                \"0x1f3cc\",\n                \"0x1f3cc\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f3cc\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f3c4\",\n                \"0x1f3c4\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f3c4\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f6a3\",\n                \"0x1f6a3\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f6a3\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f3ca\",\n                \"0x1f3ca\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f3ca\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x26f9\",\n                \"0x26f9\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x26f9\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f3cb\",\n                \"0x1f3cb\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f3cb\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f6b4\",\n                \"0x1f6b4\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f6b4\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f6b5\",\n                \"0x1f6b5\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f6b5\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f938\",\n                \"0x1f938\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f938\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f93c\",\n                \"0x1f93c\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f93c\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f93d\",\n                \"0x1f93d\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f93d\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f93e\",\n                \"0x1f93e\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f93e\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f939\",\n                \"0x1f939\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f939\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f9d8\",\n                \"0x1f9d8\",\n                \"0x200d\",\n                \"0x2642\",\n                \"0xfe0f\",\n                \"0x1f9d8\",\n                \"0x200d\",\n                \"0x2640\",\n                \"0xfe0f\",\n                \"0x1f6c0\",\n                \"0x1f6cc\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f91d\",\n                \"0x200d\",\n                \"0x1f9d1\",\n                \"0x1f46d\",\n                \"0x1f46b\",\n                \"0x1f46c\",\n                \"0x1f48f\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f48b\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f48b\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f48b\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x1f491\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x2764\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f468\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f466\",\n                \"0x1f469\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x200d\",\n                \"0x1f467\",\n                \"0x1f5e3\",\n                \"0x1f464\",\n                \"0x1f465\",\n                \"0x1fac2\",\n                \"0x1f46a\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9d2\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9d2\",\n                \"0x200d\",\n                \"0x1f9d2\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9d2\",\n                \"0x1f9d1\",\n                \"0x200d\",\n                \"0x1f9d2\",\n                \"0x200d\",\n                \"0x1f9d2\",\n                \"0x1f463\"\n            ],\n            \"animals_and_nature\": [\n                \"0x1f435\",\n                \"0x1f412\",\n                \"0x1f98d\",\n                \"0x1f9a7\",\n                \"0x1f436\",\n                \"0x1f415\",\n                \"0x1f9ae\",\n                \"0x1f415\",\n                \"0x200d\",\n                \"0x1f9ba\",\n                \"0x1f429\",\n                \"0x1f43a\",\n                \"0x1f98a\",\n                \"0x1f99d\",\n                \"0x1f431\",\n                \"0x1f408\",\n                \"0x1f408\",\n                \"0x200d\",\n                \"0x2b1b\",\n                \"0x1f981\",\n                \"0x1f42f\",\n                \"0x1f405\",\n                \"0x1f406\",\n                \"0x1f434\",\n                \"0x1face\",\n                \"0x1facf\",\n                \"0x1f40e\",\n                \"0x1f984\",\n                \"0x1f993\",\n                \"0x1f98c\",\n                \"0x1f9ac\",\n                \"0x1f42e\",\n                \"0x1f402\",\n                \"0x1f403\",\n                \"0x1f404\",\n                \"0x1f437\",\n                \"0x1f416\",\n                \"0x1f417\",\n                \"0x1f43d\",\n                \"0x1f40f\",\n                \"0x1f411\",\n                \"0x1f410\",\n                \"0x1f42a\",\n                \"0x1f42b\",\n                \"0x1f999\",\n                \"0x1f992\",\n                \"0x1f418\",\n                \"0x1f9a3\",\n                \"0x1f98f\",\n                \"0x1f99b\",\n                \"0x1f42d\",\n                \"0x1f401\",\n                \"0x1f400\",\n                \"0x1f439\",\n                \"0x1f430\",\n                \"0x1f407\",\n                \"0x1f43f\",\n                \"0x1f9ab\",\n                \"0x1f994\",\n                \"0x1f987\",\n                \"0x1f43b\",\n                \"0x1f43b\",\n                \"0x200d\",\n                \"0x2744\",\n                \"0xfe0f\",\n                \"0x1f428\",\n                \"0x1f43c\",\n                \"0x1f9a5\",\n                \"0x1f9a6\",\n                \"0x1f9a8\",\n                \"0x1f998\",\n                \"0x1f9a1\",\n                \"0x1f43e\",\n                \"0x1f983\",\n                \"0x1f414\",\n                \"0x1f413\",\n                \"0x1f423\",\n                \"0x1f424\",\n                \"0x1f425\",\n                \"0x1f426\",\n                \"0x1f427\",\n                \"0x1f54a\",\n                \"0x1f985\",\n                \"0x1f986\",\n                \"0x1f9a2\",\n                \"0x1f989\",\n                \"0x1f9a4\",\n                \"0x1fab6\",\n                \"0x1f9a9\",\n                \"0x1f99a\",\n                \"0x1f99c\",\n                \"0x1fabd\",\n                \"0x1f426\",\n                \"0x200d\",\n                \"0x2b1b\",\n                \"0x1fabf\",\n                \"0x1f426\",\n                \"0x200d\",\n                \"0x1f525\",\n                \"0x1f438\",\n                \"0x1f40a\",\n                \"0x1f422\",\n                \"0x1f98e\",\n                \"0x1f40d\",\n                \"0x1f432\",\n                \"0x1f409\",\n                \"0x1f995\",\n                \"0x1f996\",\n                \"0x1f433\",\n                \"0x1f40b\",\n                \"0x1f42c\",\n                \"0x1f9ad\",\n                \"0x1f41f\",\n                \"0x1f420\",\n                \"0x1f421\",\n                \"0x1f988\",\n                \"0x1f419\",\n                \"0x1f41a\",\n                \"0x1fab8\",\n                \"0x1fabc\",\n                \"0x1f40c\",\n                \"0x1f98b\",\n                \"0x1f41b\",\n                \"0x1f41c\",\n                \"0x1f41d\",\n                \"0x1fab2\",\n                \"0x1f41e\",\n                \"0x1f997\",\n                \"0x1fab3\",\n                \"0x1f577\",\n                \"0x1f578\",\n                \"0x1f982\",\n                \"0x1f99f\",\n                \"0x1fab0\",\n                \"0x1fab1\",\n                \"0x1f9a0\",\n                \"0x1f490\",\n                \"0x1f338\",\n                \"0x1f4ae\",\n                \"0x1fab7\",\n                \"0x1f3f5\",\n                \"0x1f339\",\n                \"0x1f940\",\n                \"0x1f33a\",\n                \"0x1f33b\",\n                \"0x1f33c\",\n                \"0x1f337\",\n                \"0x1fabb\",\n                \"0x1f331\",\n                \"0x1fab4\",\n                \"0x1f332\",\n                \"0x1f333\",\n                \"0x1f334\",\n                \"0x1f335\",\n                \"0x1f33e\",\n                \"0x1f33f\",\n                \"0x2618\",\n                \"0x1f340\",\n                \"0x1f341\",\n                \"0x1f342\",\n                \"0x1f343\",\n                \"0x1fab9\",\n                \"0x1faba\",\n                \"0x1f344\"\n            ],\n            \"food_and_drink\": [\n                \"0x1f347\",\n                \"0x1f348\",\n                \"0x1f349\",\n                \"0x1f34a\",\n                \"0x1f34b\",\n                \"0x1f34b\",\n                \"0x200d\",\n                \"0x1f7e9\",\n                \"0x1f34c\",\n                \"0x1f34d\",\n                \"0x1f96d\",\n                \"0x1f34e\",\n                \"0x1f34f\",\n                \"0x1f350\",\n                \"0x1f351\",\n                \"0x1f352\",\n                \"0x1f353\",\n                \"0x1fad0\",\n                \"0x1f95d\",\n                \"0x1f345\",\n                \"0x1fad2\",\n                \"0x1f965\",\n                \"0x1f951\",\n                \"0x1f346\",\n                \"0x1f954\",\n                \"0x1f955\",\n                \"0x1f33d\",\n                \"0x1f336\",\n                \"0x1fad1\",\n                \"0x1f952\",\n                \"0x1f96c\",\n                \"0x1f966\",\n                \"0x1f9c4\",\n                \"0x1f9c5\",\n                \"0x1f95c\",\n                \"0x1fad8\",\n                \"0x1f330\",\n                \"0x1fada\",\n                \"0x1fadb\",\n                \"0x1f344\",\n                \"0x200d\",\n                \"0x1f7eb\",\n                \"0x1f35e\",\n                \"0x1f950\",\n                \"0x1f956\",\n                \"0x1fad3\",\n                \"0x1f968\",\n                \"0x1f96f\",\n                \"0x1f95e\",\n                \"0x1f9c7\",\n                \"0x1f9c0\",\n                \"0x1f356\",\n                \"0x1f357\",\n                \"0x1f969\",\n                \"0x1f953\",\n                \"0x1f354\",\n                \"0x1f35f\",\n                \"0x1f355\",\n                \"0x1f32d\",\n                \"0x1f96a\",\n                \"0x1f32e\",\n                \"0x1f32f\",\n                \"0x1fad4\",\n                \"0x1f959\",\n                \"0x1f9c6\",\n                \"0x1f95a\",\n                \"0x1f373\",\n                \"0x1f958\",\n                \"0x1f372\",\n                \"0x1fad5\",\n                \"0x1f963\",\n                \"0x1f957\",\n                \"0x1f37f\",\n                \"0x1f9c8\",\n                \"0x1f9c2\",\n                \"0x1f96b\",\n                \"0x1f371\",\n                \"0x1f358\",\n                \"0x1f359\",\n                \"0x1f35a\",\n                \"0x1f35b\",\n                \"0x1f35c\",\n                \"0x1f35d\",\n                \"0x1f360\",\n                \"0x1f362\",\n                \"0x1f363\",\n                \"0x1f364\",\n                \"0x1f365\",\n                \"0x1f96e\",\n                \"0x1f361\",\n                \"0x1f95f\",\n                \"0x1f960\",\n                \"0x1f961\",\n                \"0x1f980\",\n                \"0x1f99e\",\n                \"0x1f990\",\n                \"0x1f991\",\n                \"0x1f9aa\",\n                \"0x1f366\",\n                \"0x1f367\",\n                \"0x1f368\",\n                \"0x1f369\",\n                \"0x1f36a\",\n                \"0x1f382\",\n                \"0x1f370\",\n                \"0x1f9c1\",\n                \"0x1f967\",\n                \"0x1f36b\",\n                \"0x1f36c\",\n                \"0x1f36d\",\n                \"0x1f36e\",\n                \"0x1f36f\",\n                \"0x1f37c\",\n                \"0x1f95b\",\n                \"0x2615\",\n                \"0x1fad6\",\n                \"0x1f375\",\n                \"0x1f376\",\n                \"0x1f37e\",\n                \"0x1f377\",\n                \"0x1f378\",\n                \"0x1f379\",\n                \"0x1f37a\",\n                \"0x1f37b\",\n                \"0x1f942\",\n                \"0x1f943\",\n                \"0x1fad7\",\n                \"0x1f964\",\n                \"0x1f9cb\",\n                \"0x1f9c3\",\n                \"0x1f9c9\",\n                \"0x1f9ca\",\n                \"0x1f962\",\n                \"0x1f37d\",\n                \"0x1f374\",\n                \"0x1f944\",\n                \"0x1f52a\",\n                \"0x1fad9\",\n                \"0x1f3fa\"\n            ],\n            \"travel_and_places\": [\n                \"0x1f30d\",\n                \"0x1f30e\",\n                \"0x1f30f\",\n                \"0x1f310\",\n                \"0x1f5fa\",\n                \"0x1f5fe\",\n                \"0x1f9ed\",\n                \"0x1f3d4\",\n                \"0x26f0\",\n                \"0x1f30b\",\n                \"0x1f5fb\",\n                \"0x1f3d5\",\n                \"0x1f3d6\",\n                \"0x1f3dc\",\n                \"0x1f3dd\",\n                \"0x1f3de\",\n                \"0x1f3df\",\n                \"0x1f3db\",\n                \"0x1f3d7\",\n                \"0x1f9f1\",\n                \"0x1faa8\",\n                \"0x1fab5\",\n                \"0x1f6d6\",\n                \"0x1f3d8\",\n                \"0x1f3da\",\n                \"0x1f3e0\",\n                \"0x1f3e1\",\n                \"0x1f3e2\",\n                \"0x1f3e3\",\n                \"0x1f3e4\",\n                \"0x1f3e5\",\n                \"0x1f3e6\",\n                \"0x1f3e8\",\n                \"0x1f3e9\",\n                \"0x1f3ea\",\n                \"0x1f3eb\",\n                \"0x1f3ec\",\n                \"0x1f3ed\",\n                \"0x1f3ef\",\n                \"0x1f3f0\",\n                \"0x1f492\",\n                \"0x1f5fc\",\n                \"0x1f5fd\",\n                \"0x26ea\",\n                \"0x1f54c\",\n                \"0x1f6d5\",\n                \"0x1f54d\",\n                \"0x26e9\",\n                \"0x1f54b\",\n                \"0x26f2\",\n                \"0x26fa\",\n                \"0x1f301\",\n                \"0x1f303\",\n                \"0x1f3d9\",\n                \"0x1f304\",\n                \"0x1f305\",\n                \"0x1f306\",\n                \"0x1f307\",\n                \"0x1f309\",\n                \"0x2668\",\n                \"0x1f3a0\",\n                \"0x1f6dd\",\n                \"0x1f3a1\",\n                \"0x1f3a2\",\n                \"0x1f488\",\n                \"0x1f3aa\",\n                \"0x1f682\",\n                \"0x1f683\",\n                \"0x1f684\",\n                \"0x1f685\",\n                \"0x1f686\",\n                \"0x1f687\",\n                \"0x1f688\",\n                \"0x1f689\",\n                \"0x1f68a\",\n                \"0x1f69d\",\n                \"0x1f69e\",\n                \"0x1f68b\",\n                \"0x1f68c\",\n                \"0x1f68d\",\n                \"0x1f68e\",\n                \"0x1f690\",\n                \"0x1f691\",\n                \"0x1f692\",\n                \"0x1f693\",\n                \"0x1f694\",\n                \"0x1f695\",\n                \"0x1f696\",\n                \"0x1f697\",\n                \"0x1f698\",\n                \"0x1f699\",\n                \"0x1f6fb\",\n                \"0x1f69a\",\n                \"0x1f69b\",\n                \"0x1f69c\",\n                \"0x1f3ce\",\n                \"0x1f3cd\",\n                \"0x1f6f5\",\n                \"0x1f9bd\",\n                \"0x1f9bc\",\n                \"0x1f6fa\",\n                \"0x1f6b2\",\n                \"0x1f6f4\",\n                \"0x1f6f9\",\n                \"0x1f6fc\",\n                \"0x1f68f\",\n                \"0x1f6e3\",\n                \"0x1f6e4\",\n                \"0x1f6e2\",\n                \"0x26fd\",\n                \"0x1f6de\",\n                \"0x1f6a8\",\n                \"0x1f6a5\",\n                \"0x1f6a6\",\n                \"0x1f6d1\",\n                \"0x1f6a7\",\n                \"0x2693\",\n                \"0x1f6df\",\n                \"0x26f5\",\n                \"0x1f6f6\",\n                \"0x1f6a4\",\n                \"0x1f6f3\",\n                \"0x26f4\",\n                \"0x1f6e5\",\n                \"0x1f6a2\",\n                \"0x2708\",\n                \"0x1f6e9\",\n                \"0x1f6eb\",\n                \"0x1f6ec\",\n                \"0x1fa82\",\n                \"0x1f4ba\",\n                \"0x1f681\",\n                \"0x1f69f\",\n                \"0x1f6a0\",\n                \"0x1f6a1\",\n                \"0x1f6f0\",\n                \"0x1f680\",\n                \"0x1f6f8\",\n                \"0x1f6ce\",\n                \"0x1f9f3\",\n                \"0x231b\",\n                \"0x23f3\",\n                \"0x231a\",\n                \"0x23f0\",\n                \"0x23f1\",\n                \"0x23f2\",\n                \"0x1f570\",\n                \"0x1f55b\",\n                \"0x1f567\",\n                \"0x1f550\",\n                \"0x1f55c\",\n                \"0x1f551\",\n                \"0x1f55d\",\n                \"0x1f552\",\n                \"0x1f55e\",\n                \"0x1f553\",\n                \"0x1f55f\",\n                \"0x1f554\",\n                \"0x1f560\",\n                \"0x1f555\",\n                \"0x1f561\",\n                \"0x1f556\",\n                \"0x1f562\",\n                \"0x1f557\",\n                \"0x1f563\",\n                \"0x1f558\",\n                \"0x1f564\",\n                \"0x1f559\",\n                \"0x1f565\",\n                \"0x1f55a\",\n                \"0x1f566\",\n                \"0x1f311\",\n                \"0x1f312\",\n                \"0x1f313\",\n                \"0x1f314\",\n                \"0x1f315\",\n                \"0x1f316\",\n                \"0x1f317\",\n                \"0x1f318\",\n                \"0x1f319\",\n                \"0x1f31a\",\n                \"0x1f31b\",\n                \"0x1f31c\",\n                \"0x1f321\",\n                \"0x2600\",\n                \"0x1f31d\",\n                \"0x1f31e\",\n                \"0x1fa90\",\n                \"0x2b50\",\n                \"0x1f31f\",\n                \"0x1f320\",\n                \"0x1f30c\",\n                \"0x2601\",\n                \"0x26c5\",\n                \"0x26c8\",\n                \"0x1f324\",\n                \"0x1f325\",\n                \"0x1f326\",\n                \"0x1f327\",\n                \"0x1f328\",\n                \"0x1f329\",\n                \"0x1f32a\",\n                \"0x1f32b\",\n                \"0x1f32c\",\n                \"0x1f300\",\n                \"0x1f308\",\n                \"0x1f302\",\n                \"0x2602\",\n                \"0x2614\",\n                \"0x26f1\",\n                \"0x26a1\",\n                \"0x2744\",\n                \"0x2603\",\n                \"0x26c4\",\n                \"0x2604\",\n                \"0x1f525\",\n                \"0x1f4a7\",\n                \"0x1f30a\"\n            ],\n            \"activities\": [\n                \"0x1f383\",\n                \"0x1f384\",\n                \"0x1f386\",\n                \"0x1f387\",\n                \"0x1f9e8\",\n                \"0x2728\",\n                \"0x1f388\",\n                \"0x1f389\",\n                \"0x1f38a\",\n                \"0x1f38b\",\n                \"0x1f38d\",\n                \"0x1f38e\",\n                \"0x1f38f\",\n                \"0x1f390\",\n                \"0x1f391\",\n                \"0x1f9e7\",\n                \"0x1f380\",\n                \"0x1f381\",\n                \"0x1f397\",\n                \"0x1f39f\",\n                \"0x1f3ab\",\n                \"0x1f396\",\n                \"0x1f3c6\",\n                \"0x1f3c5\",\n                \"0x1f947\",\n                \"0x1f948\",\n                \"0x1f949\",\n                \"0x26bd\",\n                \"0x26be\",\n                \"0x1f94e\",\n                \"0x1f3c0\",\n                \"0x1f3d0\",\n                \"0x1f3c8\",\n                \"0x1f3c9\",\n                \"0x1f3be\",\n                \"0x1f94f\",\n                \"0x1f3b3\",\n                \"0x1f3cf\",\n                \"0x1f3d1\",\n                \"0x1f3d2\",\n                \"0x1f94d\",\n                \"0x1f3d3\",\n                \"0x1f3f8\",\n                \"0x1f94a\",\n                \"0x1f94b\",\n                \"0x1f945\",\n                \"0x26f3\",\n                \"0x26f8\",\n                \"0x1f3a3\",\n                \"0x1f93f\",\n                \"0x1f3bd\",\n                \"0x1f3bf\",\n                \"0x1f6f7\",\n                \"0x1f94c\",\n                \"0x1f3af\",\n                \"0x1fa80\",\n                \"0x1fa81\",\n                \"0x1f52b\",\n                \"0x1f3b1\",\n                \"0x1f52e\",\n                \"0x1fa84\",\n                \"0x1f3ae\",\n                \"0x1f579\",\n                \"0x1f3b0\",\n                \"0x1f3b2\",\n                \"0x1f9e9\",\n                \"0x1f9f8\",\n                \"0x1fa85\",\n                \"0x1faa9\",\n                \"0x1fa86\",\n                \"0x2660\",\n                \"0x2665\",\n                \"0x2666\",\n                \"0x2663\",\n                \"0x265f\",\n                \"0x1f0cf\",\n                \"0x1f004\",\n                \"0x1f3b4\",\n                \"0x1f3ad\",\n                \"0x1f5bc\",\n                \"0x1f3a8\",\n                \"0x1f9f5\",\n                \"0x1faa1\",\n                \"0x1f9f6\",\n                \"0x1faa2\"\n            ],\n            \"objects\": [\n                \"0x1f453\",\n                \"0x1f576\",\n                \"0x1f97d\",\n                \"0x1f97c\",\n                \"0x1f9ba\",\n                \"0x1f454\",\n                \"0x1f455\",\n                \"0x1f456\",\n                \"0x1f9e3\",\n                \"0x1f9e4\",\n                \"0x1f9e5\",\n                \"0x1f9e6\",\n                \"0x1f457\",\n                \"0x1f458\",\n                \"0x1f97b\",\n                \"0x1fa71\",\n                \"0x1fa72\",\n                \"0x1fa73\",\n                \"0x1f459\",\n                \"0x1f45a\",\n                \"0x1faad\",\n                \"0x1f45b\",\n                \"0x1f45c\",\n                \"0x1f45d\",\n                \"0x1f6cd\",\n                \"0x1f392\",\n                \"0x1fa74\",\n                \"0x1f45e\",\n                \"0x1f45f\",\n                \"0x1f97e\",\n                \"0x1f97f\",\n                \"0x1f460\",\n                \"0x1f461\",\n                \"0x1fa70\",\n                \"0x1f462\",\n                \"0x1faae\",\n                \"0x1f451\",\n                \"0x1f452\",\n                \"0x1f3a9\",\n                \"0x1f393\",\n                \"0x1f9e2\",\n                \"0x1fa96\",\n                \"0x26d1\",\n                \"0x1f4ff\",\n                \"0x1f484\",\n                \"0x1f48d\",\n                \"0x1f48e\",\n                \"0x1f507\",\n                \"0x1f508\",\n                \"0x1f509\",\n                \"0x1f50a\",\n                \"0x1f4e2\",\n                \"0x1f4e3\",\n                \"0x1f4ef\",\n                \"0x1f514\",\n                \"0x1f515\",\n                \"0x1f3bc\",\n                \"0x1f3b5\",\n                \"0x1f3b6\",\n                \"0x1f399\",\n                \"0x1f39a\",\n                \"0x1f39b\",\n                \"0x1f3a4\",\n                \"0x1f3a7\",\n                \"0x1f4fb\",\n                \"0x1f3b7\",\n                \"0x1fa97\",\n                \"0x1f3b8\",\n                \"0x1f3b9\",\n                \"0x1f3ba\",\n                \"0x1f3bb\",\n                \"0x1fa95\",\n                \"0x1f941\",\n                \"0x1fa98\",\n                \"0x1fa87\",\n                \"0x1fa88\",\n                \"0x1f4f1\",\n                \"0x1f4f2\",\n                \"0x260e\",\n                \"0x1f4de\",\n                \"0x1f4df\",\n                \"0x1f4e0\",\n                \"0x1f50b\",\n                \"0x1faab\",\n                \"0x1f50c\",\n                \"0x1f4bb\",\n                \"0x1f5a5\",\n                \"0x1f5a8\",\n                \"0x2328\",\n                \"0x1f5b1\",\n                \"0x1f5b2\",\n                \"0x1f4bd\",\n                \"0x1f4be\",\n                \"0x1f4bf\",\n                \"0x1f4c0\",\n                \"0x1f9ee\",\n                \"0x1f3a5\",\n                \"0x1f39e\",\n                \"0x1f4fd\",\n                \"0x1f3ac\",\n                \"0x1f4fa\",\n                \"0x1f4f7\",\n                \"0x1f4f8\",\n                \"0x1f4f9\",\n                \"0x1f4fc\",\n                \"0x1f50d\",\n                \"0x1f50e\",\n                \"0x1f56f\",\n                \"0x1f4a1\",\n                \"0x1f526\",\n                \"0x1f3ee\",\n                \"0x1fa94\",\n                \"0x1f4d4\",\n                \"0x1f4d5\",\n                \"0x1f4d6\",\n                \"0x1f4d7\",\n                \"0x1f4d8\",\n                \"0x1f4d9\",\n                \"0x1f4da\",\n                \"0x1f4d3\",\n                \"0x1f4d2\",\n                \"0x1f4c3\",\n                \"0x1f4dc\",\n                \"0x1f4c4\",\n                \"0x1f4f0\",\n                \"0x1f5de\",\n                \"0x1f4d1\",\n                \"0x1f516\",\n                \"0x1f3f7\",\n                \"0x1f4b0\",\n                \"0x1fa99\",\n                \"0x1f4b4\",\n                \"0x1f4b5\",\n                \"0x1f4b6\",\n                \"0x1f4b7\",\n                \"0x1f4b8\",\n                \"0x1f4b3\",\n                \"0x1f9fe\",\n                \"0x1f4b9\",\n                \"0x2709\",\n                \"0x1f4e7\",\n                \"0x1f4e8\",\n                \"0x1f4e9\",\n                \"0x1f4e4\",\n                \"0x1f4e5\",\n                \"0x1f4e6\",\n                \"0x1f4eb\",\n                \"0x1f4ea\",\n                \"0x1f4ec\",\n                \"0x1f4ed\",\n                \"0x1f4ee\",\n                \"0x1f5f3\",\n                \"0x270f\",\n                \"0x2712\",\n                \"0x1f58b\",\n                \"0x1f58a\",\n                \"0x1f58c\",\n                \"0x1f58d\",\n                \"0x1f4dd\",\n                \"0x1f4bc\",\n                \"0x1f4c1\",\n                \"0x1f4c2\",\n                \"0x1f5c2\",\n                \"0x1f4c5\",\n                \"0x1f4c6\",\n                \"0x1f5d2\",\n                \"0x1f5d3\",\n                \"0x1f4c7\",\n                \"0x1f4c8\",\n                \"0x1f4c9\",\n                \"0x1f4ca\",\n                \"0x1f4cb\",\n                \"0x1f4cc\",\n                \"0x1f4cd\",\n                \"0x1f4ce\",\n                \"0x1f587\",\n                \"0x1f4cf\",\n                \"0x1f4d0\",\n                \"0x2702\",\n                \"0x1f5c3\",\n                \"0x1f5c4\",\n                \"0x1f5d1\",\n                \"0x1f512\",\n                \"0x1f513\",\n                \"0x1f50f\",\n                \"0x1f510\",\n                \"0x1f511\",\n                \"0x1f5dd\",\n                \"0x1f528\",\n                \"0x1fa93\",\n                \"0x26cf\",\n                \"0x2692\",\n                \"0x1f6e0\",\n                \"0x1f5e1\",\n                \"0x2694\",\n                \"0x1f4a3\",\n                \"0x1fa83\",\n                \"0x1f3f9\",\n                \"0x1f6e1\",\n                \"0x1fa9a\",\n                \"0x1f527\",\n                \"0x1fa9b\",\n                \"0x1f529\",\n                \"0x2699\",\n                \"0x1f5dc\",\n                \"0x2696\",\n                \"0x1f9af\",\n                \"0x1f517\",\n                \"0x26d3\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f4a5\",\n                \"0x26d3\",\n                \"0x1fa9d\",\n                \"0x1f9f0\",\n                \"0x1f9f2\",\n                \"0x1fa9c\",\n                \"0x2697\",\n                \"0x1f9ea\",\n                \"0x1f9eb\",\n                \"0x1f9ec\",\n                \"0x1f52c\",\n                \"0x1f52d\",\n                \"0x1f4e1\",\n                \"0x1f489\",\n                \"0x1fa78\",\n                \"0x1f48a\",\n                \"0x1fa79\",\n                \"0x1fa7c\",\n                \"0x1fa7a\",\n                \"0x1fa7b\",\n                \"0x1f6aa\",\n                \"0x1f6d7\",\n                \"0x1fa9e\",\n                \"0x1fa9f\",\n                \"0x1f6cf\",\n                \"0x1f6cb\",\n                \"0x1fa91\",\n                \"0x1f6bd\",\n                \"0x1faa0\",\n                \"0x1f6bf\",\n                \"0x1f6c1\",\n                \"0x1faa4\",\n                \"0x1fa92\",\n                \"0x1f9f4\",\n                \"0x1f9f7\",\n                \"0x1f9f9\",\n                \"0x1f9fa\",\n                \"0x1f9fb\",\n                \"0x1faa3\",\n                \"0x1f9fc\",\n                \"0x1fae7\",\n                \"0x1faa5\",\n                \"0x1f9fd\",\n                \"0x1f9ef\",\n                \"0x1f6d2\",\n                \"0x1f6ac\",\n                \"0x26b0\",\n                \"0x1faa6\",\n                \"0x26b1\",\n                \"0x1f9ff\",\n                \"0x1faac\",\n                \"0x1f5ff\",\n                \"0x1faa7\",\n                \"0x1faaa\"\n            ],\n            \"symbols\": [\n                \"0x1f3e7\",\n                \"0x1f6ae\",\n                \"0x1f6b0\",\n                \"0x267f\",\n                \"0x1f6b9\",\n                \"0x1f6ba\",\n                \"0x1f6bb\",\n                \"0x1f6bc\",\n                \"0x1f6be\",\n                \"0x1f6c2\",\n                \"0x1f6c3\",\n                \"0x1f6c4\",\n                \"0x1f6c5\",\n                \"0x26a0\",\n                \"0x1f6b8\",\n                \"0x26d4\",\n                \"0x1f6ab\",\n                \"0x1f6b3\",\n                \"0x1f6ad\",\n                \"0x1f6af\",\n                \"0x1f6b1\",\n                \"0x1f6b7\",\n                \"0x1f4f5\",\n                \"0x1f51e\",\n                \"0x2622\",\n                \"0x2623\",\n                \"0x2b06\",\n                \"0x2197\",\n                \"0x27a1\",\n                \"0x2198\",\n                \"0x2b07\",\n                \"0x2199\",\n                \"0x2b05\",\n                \"0x2196\",\n                \"0x2195\",\n                \"0x2194\",\n                \"0x21a9\",\n                \"0x21aa\",\n                \"0x2934\",\n                \"0x2935\",\n                \"0x1f503\",\n                \"0x1f504\",\n                \"0x1f519\",\n                \"0x1f51a\",\n                \"0x1f51b\",\n                \"0x1f51c\",\n                \"0x1f51d\",\n                \"0x1f6d0\",\n                \"0x269b\",\n                \"0x1f549\",\n                \"0x2721\",\n                \"0x2638\",\n                \"0x262f\",\n                \"0x271d\",\n                \"0x2626\",\n                \"0x262a\",\n                \"0x262e\",\n                \"0x1f54e\",\n                \"0x1f52f\",\n                \"0x1faaf\",\n                \"0x2648\",\n                \"0x2649\",\n                \"0x264a\",\n                \"0x264b\",\n                \"0x264c\",\n                \"0x264d\",\n                \"0x264e\",\n                \"0x264f\",\n                \"0x2650\",\n                \"0x2651\",\n                \"0x2652\",\n                \"0x2653\",\n                \"0x26ce\",\n                \"0x1f500\",\n                \"0x1f501\",\n                \"0x1f502\",\n                \"0x25b6\",\n                \"0x23e9\",\n                \"0x23ed\",\n                \"0x23ef\",\n                \"0x25c0\",\n                \"0x23ea\",\n                \"0x23ee\",\n                \"0x1f53c\",\n                \"0x23eb\",\n                \"0x1f53d\",\n                \"0x23ec\",\n                \"0x23f8\",\n                \"0x23f9\",\n                \"0x23fa\",\n                \"0x23cf\",\n                \"0x1f3a6\",\n                \"0x1f505\",\n                \"0x1f506\",\n                \"0x1f4f6\",\n                \"0x1f6dc\",\n                \"0x1f4f3\",\n                \"0x1f4f4\",\n                \"0x2640\",\n                \"0x2642\",\n                \"0x26a7\",\n                \"0x2716\",\n                \"0x2795\",\n                \"0x2796\",\n                \"0x2797\",\n                \"0x1f7f0\",\n                \"0x267e\",\n                \"0x203c\",\n                \"0x2049\",\n                \"0x2753\",\n                \"0x2754\",\n                \"0x2755\",\n                \"0x2757\",\n                \"0x3030\",\n                \"0x1f4b1\",\n                \"0x1f4b2\",\n                \"0x2695\",\n                \"0x267b\",\n                \"0x269c\",\n                \"0x1f531\",\n                \"0x1f4db\",\n                \"0x1f530\",\n                \"0x2b55\",\n                \"0x2705\",\n                \"0x2611\",\n                \"0x2714\",\n                \"0x274c\",\n                \"0x274e\",\n                \"0x27b0\",\n                \"0x27bf\",\n                \"0x303d\",\n                \"0x2733\",\n                \"0x2734\",\n                \"0x2747\",\n                \"0x00a9\",\n                \"0x00ae\",\n                \"0x2122\",\n                \"0x0023\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x002a\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0030\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0031\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0032\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0033\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0034\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0035\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0036\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0037\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0038\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x0039\",\n                \"0xfe0f\",\n                \"0x20e3\",\n                \"0x1f51f\",\n                \"0x1f520\",\n                \"0x1f521\",\n                \"0x1f522\",\n                \"0x1f523\",\n                \"0x1f524\",\n                \"0x1f170\",\n                \"0x1f18e\",\n                \"0x1f171\",\n                \"0x1f191\",\n                \"0x1f192\",\n                \"0x1f193\",\n                \"0x2139\",\n                \"0x1f194\",\n                \"0x24c2\",\n                \"0x1f195\",\n                \"0x1f196\",\n                \"0x1f17e\",\n                \"0x1f197\",\n                \"0x1f17f\",\n                \"0x1f198\",\n                \"0x1f199\",\n                \"0x1f19a\",\n                \"0x1f201\",\n                \"0x1f202\",\n                \"0x1f237\",\n                \"0x1f236\",\n                \"0x1f22f\",\n                \"0x1f250\",\n                \"0x1f239\",\n                \"0x1f21a\",\n                \"0x1f232\",\n                \"0x1f251\",\n                \"0x1f238\",\n                \"0x1f234\",\n                \"0x1f233\",\n                \"0x3297\",\n                \"0x3299\",\n                \"0x1f23a\",\n                \"0x1f235\",\n                \"0x1f534\",\n                \"0x1f7e0\",\n                \"0x1f7e1\",\n                \"0x1f7e2\",\n                \"0x1f535\",\n                \"0x1f7e3\",\n                \"0x1f7e4\",\n                \"0x26ab\",\n                \"0x26aa\",\n                \"0x1f7e5\",\n                \"0x1f7e7\",\n                \"0x1f7e8\",\n                \"0x1f7e9\",\n                \"0x1f7e6\",\n                \"0x1f7ea\",\n                \"0x1f7eb\",\n                \"0x2b1b\",\n                \"0x2b1c\",\n                \"0x25fc\",\n                \"0x25fb\",\n                \"0x25fe\",\n                \"0x25fd\",\n                \"0x25aa\",\n                \"0x25ab\",\n                \"0x1f536\",\n                \"0x1f537\",\n                \"0x1f538\",\n                \"0x1f539\",\n                \"0x1f53a\",\n                \"0x1f53b\",\n                \"0x1f4a0\",\n                \"0x1f518\",\n                \"0x1f533\",\n                \"0x1f532\"\n            ],\n            \"flags\": [\n                \"0x1f3c1\",\n                \"0x1f6a9\",\n                \"0x1f38c\",\n                \"0x1f3f4\",\n                \"0x1f3f3\",\n                \"0x1f3f3\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x1f308\",\n                \"0x1f3f3\",\n                \"0xfe0f\",\n                \"0x200d\",\n                \"0x26a7\",\n                \"0xfe0f\",\n                \"0x1f3f4\",\n                \"0x200d\",\n                \"0x2620\",\n                \"0xfe0f\",\n                \"0x1f1e6\",\n                \"0x1f1e8\",\n                \"0x1f1e6\",\n                \"0x1f1e9\",\n                \"0x1f1e6\",\n                \"0x1f1ea\",\n                \"0x1f1e6\",\n                \"0x1f1eb\",\n                \"0x1f1e6\",\n                \"0x1f1ec\",\n                \"0x1f1e6\",\n                \"0x1f1ee\",\n                \"0x1f1e6\",\n                \"0x1f1f1\",\n                \"0x1f1e6\",\n                \"0x1f1f2\",\n                \"0x1f1e6\",\n                \"0x1f1f4\",\n                \"0x1f1e6\",\n                \"0x1f1f6\",\n                \"0x1f1e6\",\n                \"0x1f1f7\",\n                \"0x1f1e6\",\n                \"0x1f1f8\",\n                \"0x1f1e6\",\n                \"0x1f1f9\",\n                \"0x1f1e6\",\n                \"0x1f1fa\",\n                \"0x1f1e6\",\n                \"0x1f1fc\",\n                \"0x1f1e6\",\n                \"0x1f1fd\",\n                \"0x1f1e6\",\n                \"0x1f1ff\",\n                \"0x1f1e7\",\n                \"0x1f1e6\",\n                \"0x1f1e7\",\n                \"0x1f1e7\",\n                \"0x1f1e7\",\n                \"0x1f1e9\",\n                \"0x1f1e7\",\n                \"0x1f1ea\",\n                \"0x1f1e7\",\n                \"0x1f1eb\",\n                \"0x1f1e7\",\n                \"0x1f1ec\",\n                \"0x1f1e7\",\n                \"0x1f1ed\",\n                \"0x1f1e7\",\n                \"0x1f1ee\",\n                \"0x1f1e7\",\n                \"0x1f1ef\",\n                \"0x1f1e7\",\n                \"0x1f1f1\",\n                \"0x1f1e7\",\n                \"0x1f1f2\",\n                \"0x1f1e7\",\n                \"0x1f1f3\",\n                \"0x1f1e7\",\n                \"0x1f1f4\",\n                \"0x1f1e7\",\n                \"0x1f1f6\",\n                \"0x1f1e7\",\n                \"0x1f1f7\",\n                \"0x1f1e7\",\n                \"0x1f1f8\",\n                \"0x1f1e7\",\n                \"0x1f1f9\",\n                \"0x1f1e7\",\n                \"0x1f1fb\",\n                \"0x1f1e7\",\n                \"0x1f1fc\",\n                \"0x1f1e7\",\n                \"0x1f1fe\",\n                \"0x1f1e7\",\n                \"0x1f1ff\",\n                \"0x1f1e8\",\n                \"0x1f1e6\",\n                \"0x1f1e8\",\n                \"0x1f1e8\",\n                \"0x1f1e8\",\n                \"0x1f1e9\",\n                \"0x1f1e8\",\n                \"0x1f1eb\",\n                \"0x1f1e8\",\n                \"0x1f1ec\",\n                \"0x1f1e8\",\n                \"0x1f1ed\",\n                \"0x1f1e8\",\n                \"0x1f1ee\",\n                \"0x1f1e8\",\n                \"0x1f1f0\",\n                \"0x1f1e8\",\n                \"0x1f1f1\",\n                \"0x1f1e8\",\n                \"0x1f1f2\",\n                \"0x1f1e8\",\n                \"0x1f1f3\",\n                \"0x1f1e8\",\n                \"0x1f1f4\",\n                \"0x1f1e8\",\n                \"0x1f1f5\",\n                \"0x1f1e8\",\n                \"0x1f1f7\",\n                \"0x1f1e8\",\n                \"0x1f1fa\",\n                \"0x1f1e8\",\n                \"0x1f1fb\",\n                \"0x1f1e8\",\n                \"0x1f1fc\",\n                \"0x1f1e8\",\n                \"0x1f1fd\",\n                \"0x1f1e8\",\n                \"0x1f1fe\",\n                \"0x1f1e8\",\n                \"0x1f1ff\",\n                \"0x1f1e9\",\n                \"0x1f1ea\",\n                \"0x1f1e9\",\n                \"0x1f1ec\",\n                \"0x1f1e9\",\n                \"0x1f1ef\",\n                \"0x1f1e9\",\n                \"0x1f1f0\",\n                \"0x1f1e9\",\n                \"0x1f1f2\",\n                \"0x1f1e9\",\n                \"0x1f1f4\",\n                \"0x1f1e9\",\n                \"0x1f1ff\",\n                \"0x1f1ea\",\n                \"0x1f1e6\",\n                \"0x1f1ea\",\n                \"0x1f1e8\",\n                \"0x1f1ea\",\n                \"0x1f1ea\",\n                \"0x1f1ea\",\n                \"0x1f1ec\",\n                \"0x1f1ea\",\n                \"0x1f1ed\",\n                \"0x1f1ea\",\n                \"0x1f1f7\",\n                \"0x1f1ea\",\n                \"0x1f1f8\",\n                \"0x1f1ea\",\n                \"0x1f1f9\",\n                \"0x1f1ea\",\n                \"0x1f1fa\",\n                \"0x1f1eb\",\n                \"0x1f1ee\",\n                \"0x1f1eb\",\n                \"0x1f1ef\",\n                \"0x1f1eb\",\n                \"0x1f1f0\",\n                \"0x1f1eb\",\n                \"0x1f1f2\",\n                \"0x1f1eb\",\n                \"0x1f1f4\",\n                \"0x1f1eb\",\n                \"0x1f1f7\",\n                \"0x1f1ec\",\n                \"0x1f1e6\",\n                \"0x1f1ec\",\n                \"0x1f1e7\",\n                \"0x1f1ec\",\n                \"0x1f1e9\",\n                \"0x1f1ec\",\n                \"0x1f1ea\",\n                \"0x1f1ec\",\n                \"0x1f1eb\",\n                \"0x1f1ec\",\n                \"0x1f1ec\",\n                \"0x1f1ec\",\n                \"0x1f1ed\",\n                \"0x1f1ec\",\n                \"0x1f1ee\",\n                \"0x1f1ec\",\n                \"0x1f1f1\",\n                \"0x1f1ec\",\n                \"0x1f1f2\",\n                \"0x1f1ec\",\n                \"0x1f1f3\",\n                \"0x1f1ec\",\n                \"0x1f1f5\",\n                \"0x1f1ec\",\n                \"0x1f1f6\",\n                \"0x1f1ec\",\n                \"0x1f1f7\",\n                \"0x1f1ec\",\n                \"0x1f1f8\",\n                \"0x1f1ec\",\n                \"0x1f1f9\",\n                \"0x1f1ec\",\n                \"0x1f1fa\",\n                \"0x1f1ec\",\n                \"0x1f1fc\",\n                \"0x1f1ec\",\n                \"0x1f1fe\",\n                \"0x1f1ed\",\n                \"0x1f1f0\",\n                \"0x1f1ed\",\n                \"0x1f1f2\",\n                \"0x1f1ed\",\n                \"0x1f1f3\",\n                \"0x1f1ed\",\n                \"0x1f1f7\",\n                \"0x1f1ed\",\n                \"0x1f1f9\",\n                \"0x1f1ed\",\n                \"0x1f1fa\",\n                \"0x1f1ee\",\n                \"0x1f1e8\",\n                \"0x1f1ee\",\n                \"0x1f1e9\",\n                \"0x1f1ee\",\n                \"0x1f1ea\",\n                \"0x1f1ee\",\n                \"0x1f1f1\",\n                \"0x1f1ee\",\n                \"0x1f1f2\",\n                \"0x1f1ee\",\n                \"0x1f1f3\",\n                \"0x1f1ee\",\n                \"0x1f1f4\",\n                \"0x1f1ee\",\n                \"0x1f1f6\",\n                \"0x1f1ee\",\n                \"0x1f1f7\",\n                \"0x1f1ee\",\n                \"0x1f1f8\",\n                \"0x1f1ee\",\n                \"0x1f1f9\",\n                \"0x1f1ef\",\n                \"0x1f1ea\",\n                \"0x1f1ef\",\n                \"0x1f1f2\",\n                \"0x1f1ef\",\n                \"0x1f1f4\",\n                \"0x1f1ef\",\n                \"0x1f1f5\",\n                \"0x1f1f0\",\n                \"0x1f1ea\",\n                \"0x1f1f0\",\n                \"0x1f1ec\",\n                \"0x1f1f0\",\n                \"0x1f1ed\",\n                \"0x1f1f0\",\n                \"0x1f1ee\",\n                \"0x1f1f0\",\n                \"0x1f1f2\",\n                \"0x1f1f0\",\n                \"0x1f1f3\",\n                \"0x1f1f0\",\n                \"0x1f1f5\",\n                \"0x1f1f0\",\n                \"0x1f1f7\",\n                \"0x1f1f0\",\n                \"0x1f1fc\",\n                \"0x1f1f0\",\n                \"0x1f1fe\",\n                \"0x1f1f0\",\n                \"0x1f1ff\",\n                \"0x1f1f1\",\n                \"0x1f1e6\",\n                \"0x1f1f1\",\n                \"0x1f1e7\",\n                \"0x1f1f1\",\n                \"0x1f1e8\",\n                \"0x1f1f1\",\n                \"0x1f1ee\",\n                \"0x1f1f1\",\n                \"0x1f1f0\",\n                \"0x1f1f1\",\n                \"0x1f1f7\",\n                \"0x1f1f1\",\n                \"0x1f1f8\",\n                \"0x1f1f1\",\n                \"0x1f1f9\",\n                \"0x1f1f1\",\n                \"0x1f1fa\",\n                \"0x1f1f1\",\n                \"0x1f1fb\",\n                \"0x1f1f1\",\n                \"0x1f1fe\",\n                \"0x1f1f2\",\n                \"0x1f1e6\",\n                \"0x1f1f2\",\n                \"0x1f1e8\",\n                \"0x1f1f2\",\n                \"0x1f1e9\",\n                \"0x1f1f2\",\n                \"0x1f1ea\",\n                \"0x1f1f2\",\n                \"0x1f1eb\",\n                \"0x1f1f2\",\n                \"0x1f1ec\",\n                \"0x1f1f2\",\n                \"0x1f1ed\",\n                \"0x1f1f2\",\n                \"0x1f1f0\",\n                \"0x1f1f2\",\n                \"0x1f1f1\",\n                \"0x1f1f2\",\n                \"0x1f1f2\",\n                \"0x1f1f2\",\n                \"0x1f1f3\",\n                \"0x1f1f2\",\n                \"0x1f1f4\",\n                \"0x1f1f2\",\n                \"0x1f1f5\",\n                \"0x1f1f2\",\n                \"0x1f1f6\",\n                \"0x1f1f2\",\n                \"0x1f1f7\",\n                \"0x1f1f2\",\n                \"0x1f1f8\",\n                \"0x1f1f2\",\n                \"0x1f1f9\",\n                \"0x1f1f2\",\n                \"0x1f1fa\",\n                \"0x1f1f2\",\n                \"0x1f1fb\",\n                \"0x1f1f2\",\n                \"0x1f1fc\",\n                \"0x1f1f2\",\n                \"0x1f1fd\",\n                \"0x1f1f2\",\n                \"0x1f1fe\",\n                \"0x1f1f2\",\n                \"0x1f1ff\",\n                \"0x1f1f3\",\n                \"0x1f1e6\",\n                \"0x1f1f3\",\n                \"0x1f1e8\",\n                \"0x1f1f3\",\n                \"0x1f1ea\",\n                \"0x1f1f3\",\n                \"0x1f1eb\",\n                \"0x1f1f3\",\n                \"0x1f1ec\",\n                \"0x1f1f3\",\n                \"0x1f1ee\",\n                \"0x1f1f3\",\n                \"0x1f1f1\",\n                \"0x1f1f3\",\n                \"0x1f1f4\",\n                \"0x1f1f3\",\n                \"0x1f1f5\",\n                \"0x1f1f3\",\n                \"0x1f1f7\",\n                \"0x1f1f3\",\n                \"0x1f1fa\",\n                \"0x1f1f3\",\n                \"0x1f1ff\",\n                \"0x1f1f4\",\n                \"0x1f1f2\",\n                \"0x1f1f5\",\n                \"0x1f1e6\",\n                \"0x1f1f5\",\n                \"0x1f1ea\",\n                \"0x1f1f5\",\n                \"0x1f1eb\",\n                \"0x1f1f5\",\n                \"0x1f1ec\",\n                \"0x1f1f5\",\n                \"0x1f1ed\",\n                \"0x1f1f5\",\n                \"0x1f1f0\",\n                \"0x1f1f5\",\n                \"0x1f1f1\",\n                \"0x1f1f5\",\n                \"0x1f1f2\",\n                \"0x1f1f5\",\n                \"0x1f1f3\",\n                \"0x1f1f5\",\n                \"0x1f1f7\",\n                \"0x1f1f5\",\n                \"0x1f1f8\",\n                \"0x1f1f5\",\n                \"0x1f1f9\",\n                \"0x1f1f5\",\n                \"0x1f1fc\",\n                \"0x1f1f5\",\n                \"0x1f1fe\",\n                \"0x1f1f6\",\n                \"0x1f1e6\",\n                \"0x1f1f7\",\n                \"0x1f1ea\",\n                \"0x1f1f7\",\n                \"0x1f1f4\",\n                \"0x1f1f7\",\n                \"0x1f1f8\",\n                \"0x1f1f7\",\n                \"0x1f1fa\",\n                \"0x1f1f7\",\n                \"0x1f1fc\",\n                \"0x1f1f8\",\n                \"0x1f1e6\",\n                \"0x1f1f8\",\n                \"0x1f1e7\",\n                \"0x1f1f8\",\n                \"0x1f1e8\",\n                \"0x1f1f8\",\n                \"0x1f1e9\",\n                \"0x1f1f8\",\n                \"0x1f1ea\",\n                \"0x1f1f8\",\n                \"0x1f1ec\",\n                \"0x1f1f8\",\n                \"0x1f1ed\",\n                \"0x1f1f8\",\n                \"0x1f1ee\",\n                \"0x1f1f8\",\n                \"0x1f1ef\",\n                \"0x1f1f8\",\n                \"0x1f1f0\",\n                \"0x1f1f8\",\n                \"0x1f1f1\",\n                \"0x1f1f8\",\n                \"0x1f1f2\",\n                \"0x1f1f8\",\n                \"0x1f1f3\",\n                \"0x1f1f8\",\n                \"0x1f1f4\",\n                \"0x1f1f8\",\n                \"0x1f1f7\",\n                \"0x1f1f8\",\n                \"0x1f1f8\",\n                \"0x1f1f8\",\n                \"0x1f1f9\",\n                \"0x1f1f8\",\n                \"0x1f1fb\",\n                \"0x1f1f8\",\n                \"0x1f1fd\",\n                \"0x1f1f8\",\n                \"0x1f1fe\",\n                \"0x1f1f8\",\n                \"0x1f1ff\",\n                \"0x1f1f9\",\n                \"0x1f1e6\",\n                \"0x1f1f9\",\n                \"0x1f1e8\",\n                \"0x1f1f9\",\n                \"0x1f1e9\",\n                \"0x1f1f9\",\n                \"0x1f1eb\",\n                \"0x1f1f9\",\n                \"0x1f1ec\",\n                \"0x1f1f9\",\n                \"0x1f1ed\",\n                \"0x1f1f9\",\n                \"0x1f1ef\",\n                \"0x1f1f9\",\n                \"0x1f1f0\",\n                \"0x1f1f9\",\n                \"0x1f1f1\",\n                \"0x1f1f9\",\n                \"0x1f1f2\",\n                \"0x1f1f9\",\n                \"0x1f1f3\",\n                \"0x1f1f9\",\n                \"0x1f1f4\",\n                \"0x1f1f9\",\n                \"0x1f1f7\",\n                \"0x1f1f9\",\n                \"0x1f1f9\",\n                \"0x1f1f9\",\n                \"0x1f1fb\",\n                \"0x1f1f9\",\n                \"0x1f1fc\",\n                \"0x1f1f9\",\n                \"0x1f1ff\",\n                \"0x1f1fa\",\n                \"0x1f1e6\",\n                \"0x1f1fa\",\n                \"0x1f1ec\",\n                \"0x1f1fa\",\n                \"0x1f1f2\",\n                \"0x1f1fa\",\n                \"0x1f1f3\",\n                \"0x1f1fa\",\n                \"0x1f1f8\",\n                \"0x1f1fa\",\n                \"0x1f1fe\",\n                \"0x1f1fa\",\n                \"0x1f1ff\",\n                \"0x1f1fb\",\n                \"0x1f1e6\",\n                \"0x1f1fb\",\n                \"0x1f1e8\",\n                \"0x1f1fb\",\n                \"0x1f1ea\",\n                \"0x1f1fb\",\n                \"0x1f1ec\",\n                \"0x1f1fb\",\n                \"0x1f1ee\",\n                \"0x1f1fb\",\n                \"0x1f1f3\",\n                \"0x1f1fb\",\n                \"0x1f1fa\",\n                \"0x1f1fc\",\n                \"0x1f1eb\",\n                \"0x1f1fc\",\n                \"0x1f1f8\",\n                \"0x1f1fd\",\n                \"0x1f1f0\",\n                \"0x1f1fe\",\n                \"0x1f1ea\",\n                \"0x1f1fe\",\n                \"0x1f1f9\",\n                \"0x1f1ff\",\n                \"0x1f1e6\",\n                \"0x1f1ff\",\n                \"0x1f1f2\",\n                \"0x1f1ff\",\n                \"0x1f1fc\",\n                \"0x1f3f4\",\n                \"0xe0067\",\n                \"0xe0062\",\n                \"0xe0065\",\n                \"0xe006e\",\n                \"0xe0067\",\n                \"0xe007f\",\n                \"0x1f3f4\",\n                \"0xe0067\",\n                \"0xe0062\",\n                \"0xe0073\",\n                \"0xe0063\",\n                \"0xe0074\",\n                \"0xe007f\",\n                \"0x1f3f4\",\n                \"0xe0067\",\n                \"0xe0062\",\n                \"0xe0077\",\n                \"0xe006c\",\n                \"0xe0073\",\n                \"0xe007f\"\n            ]\n        }\n    };\n\n    var o_hasOwnProperty = Object.prototype.hasOwnProperty;\n    var o_keys = (Object.keys || function(obj) {\n      var result = [];\n      for (var key in obj) {\n        if (o_hasOwnProperty.call(obj, key)) {\n          result.push(key);\n        }\n      }\n\n      return result;\n    });\n\n\n    function _copyObject(source, target) {\n      var keys = o_keys(source);\n      var key;\n\n      for (var i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        target[key] = source[key] || target[key];\n      }\n    }\n\n    function _copyArray(source, target) {\n      for (var i = 0, l = source.length; i < l; i++) {\n        target[i] = source[i];\n      }\n    }\n\n    function copyObject(source, _target) {\n        var isArray = Array.isArray(source);\n        var target = _target || (isArray ? new Array(source.length) : {});\n\n        if (isArray) {\n          _copyArray(source, target);\n        } else {\n          _copyObject(source, target);\n        }\n\n        return target;\n    }\n\n    /** Get the data based on key**/\n    Chance.prototype.get = function (name) {\n        return copyObject(data[name]);\n    };\n\n    // Mac Address\n    Chance.prototype.mac_address = function(options){\n        // typically mac addresses are separated by \":\"\n        // however they can also be separated by \"-\"\n        // the network variant uses a dot every fourth byte\n\n        options = initOptions(options);\n        if(!options.separator) {\n            options.separator =  options.networkVersion ? \".\" : \":\";\n        }\n\n        var mac_pool=\"ABCDEF1234567890\",\n            mac = \"\";\n        if(!options.networkVersion) {\n            mac = this.n(this.string, 6, { pool: mac_pool, length:2 }).join(options.separator);\n        } else {\n            mac = this.n(this.string, 3, { pool: mac_pool, length:4 }).join(options.separator);\n        }\n\n        return mac;\n    };\n\n    Chance.prototype.normal = function (options) {\n        options = initOptions(options, {mean : 0, dev : 1, pool : []});\n\n        testRange(\n            options.pool.constructor !== Array,\n            \"Chance: The pool option must be a valid array.\"\n        );\n        testRange(\n            typeof options.mean !== 'number',\n            \"Chance: Mean (mean) must be a number\"\n        );\n        testRange(\n            typeof options.dev !== 'number',\n            \"Chance: Standard deviation (dev) must be a number\"\n        );\n\n        // If a pool has been passed, then we are returning an item from that pool,\n        // using the normal distribution settings that were passed in\n        if (options.pool.length > 0) {\n            return this.normal_pool(options);\n        }\n\n        // The Marsaglia Polar method\n        var s, u, v, norm,\n            mean = options.mean,\n            dev = options.dev;\n\n        do {\n            // U and V are from the uniform distribution on (-1, 1)\n            u = this.random() * 2 - 1;\n            v = this.random() * 2 - 1;\n\n            s = u * u + v * v;\n        } while (s >= 1);\n\n        // Compute the standard normal variate\n        norm = u * Math.sqrt(-2 * Math.log(s) / s);\n\n        // Shape and scale\n        return dev * norm + mean;\n    };\n\n    Chance.prototype.normal_pool = function(options) {\n        var performanceCounter = 0;\n        do {\n            var idx = Math.round(this.normal({ mean: options.mean, dev: options.dev }));\n            if (idx < options.pool.length && idx >= 0) {\n                return options.pool[idx];\n            } else {\n                performanceCounter++;\n            }\n        } while(performanceCounter < 100);\n\n        throw new RangeError(\"Chance: Your pool is too small for the given mean and standard deviation. Please adjust.\");\n    };\n\n    Chance.prototype.radio = function (options) {\n        // Initial Letter (Typically Designated by Side of Mississippi River)\n        options = initOptions(options, {side : \"?\"});\n        var fl = \"\";\n        switch (options.side.toLowerCase()) {\n        case \"east\":\n        case \"e\":\n            fl = \"W\";\n            break;\n        case \"west\":\n        case \"w\":\n            fl = \"K\";\n            break;\n        default:\n            fl = this.character({pool: \"KW\"});\n            break;\n        }\n\n        return fl + this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"}) +\n                this.character({alpha: true, casing: \"upper\"});\n    };\n\n    // Set the data as key and data or the data map\n    Chance.prototype.set = function (name, values) {\n        if (typeof name === \"string\") {\n            data[name] = values;\n        } else {\n            data = copyObject(name, data);\n        }\n    };\n\n    Chance.prototype.tv = function (options) {\n        return this.radio(options);\n    };\n\n    // ID number for Brazil companies\n    Chance.prototype.cnpj = function () {\n        var n = this.n(this.natural, 8, { max: 9 });\n        var d1 = 2+n[7]*6+n[6]*7+n[5]*8+n[4]*9+n[3]*2+n[2]*3+n[1]*4+n[0]*5;\n        d1 = 11 - (d1 % 11);\n        if (d1>=10){\n            d1 = 0;\n        }\n        var d2 = d1*2+3+n[7]*7+n[6]*8+n[5]*9+n[4]*2+n[3]*3+n[2]*4+n[1]*5+n[0]*6;\n        d2 = 11 - (d2 % 11);\n        if (d2>=10){\n            d2 = 0;\n        }\n        return ''+n[0]+n[1]+'.'+n[2]+n[3]+n[4]+'.'+n[5]+n[6]+n[7]+'/0001-'+d1+d2;\n    };\n\n    Chance.prototype.emotion = function () {\n        return this.pick(this.get(\"emotions\"));\n    };\n\n    // -- End Miscellaneous --\n\n    Chance.prototype.mersenne_twister = function (seed) {\n        return new MersenneTwister(seed);\n    };\n\n    Chance.prototype.blueimp_md5 = function () {\n        return new BlueImpMD5();\n    };\n\n    // Mersenne Twister from https://gist.github.com/banksean/300494\n    /*\n       A C-program for MT19937, with initialization improved 2002/1/26.\n       Coded by Takuji Nishimura and Makoto Matsumoto.\n\n       Before using, initialize the state by using init_genrand(seed)\n       or init_by_array(init_key, key_length).\n\n       Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,\n       All rights reserved.\n\n       Redistribution and use in source and binary forms, with or without\n       modification, are permitted provided that the following conditions\n       are met:\n\n       1. Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n       2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n       3. The names of its contributors may not be used to endorse or promote\n       products derived from this software without specific prior written\n       permission.\n\n       THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n       \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n       LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n       A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n       CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n       EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n       PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n       PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n       LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n       NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n       SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n       Any feedback is very welcome.\n       http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html\n       email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)\n     */\n    var MersenneTwister = function (seed) {\n        if (seed === undefined) {\n            // kept random number same size as time used previously to ensure no unexpected results downstream\n            seed = Math.floor(Math.random()*Math.pow(10,13));\n        }\n        /* Period parameters */\n        this.N = 624;\n        this.M = 397;\n        this.MATRIX_A = 0x9908b0df;   /* constant vector a */\n        this.UPPER_MASK = 0x80000000; /* most significant w-r bits */\n        this.LOWER_MASK = 0x7fffffff; /* least significant r bits */\n\n        this.mt = new Array(this.N); /* the array for the state vector */\n        this.mti = this.N + 1; /* mti==N + 1 means mt[N] is not initialized */\n\n        this.init_genrand(seed);\n    };\n\n    /* initializes mt[N] with a seed */\n    MersenneTwister.prototype.init_genrand = function (s) {\n        this.mt[0] = s >>> 0;\n        for (this.mti = 1; this.mti < this.N; this.mti++) {\n            s = this.mt[this.mti - 1] ^ (this.mt[this.mti - 1] >>> 30);\n            this.mt[this.mti] = (((((s & 0xffff0000) >>> 16) * 1812433253) << 16) + (s & 0x0000ffff) * 1812433253) + this.mti;\n            /* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */\n            /* In the previous versions, MSBs of the seed affect   */\n            /* only MSBs of the array mt[].                        */\n            /* 2002/01/09 modified by Makoto Matsumoto             */\n            this.mt[this.mti] >>>= 0;\n            /* for >32 bit machines */\n        }\n    };\n\n    /* initialize by an array with array-length */\n    /* init_key is the array for initializing keys */\n    /* key_length is its length */\n    /* slight change for C++, 2004/2/26 */\n    MersenneTwister.prototype.init_by_array = function (init_key, key_length) {\n        var i = 1, j = 0, k, s;\n        this.init_genrand(19650218);\n        k = (this.N > key_length ? this.N : key_length);\n        for (; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1664525) << 16) + ((s & 0x0000ffff) * 1664525))) + init_key[j] + j; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            j++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n            if (j >= key_length) { j = 0; }\n        }\n        for (k = this.N - 1; k; k--) {\n            s = this.mt[i - 1] ^ (this.mt[i - 1] >>> 30);\n            this.mt[i] = (this.mt[i] ^ (((((s & 0xffff0000) >>> 16) * 1566083941) << 16) + (s & 0x0000ffff) * 1566083941)) - i; /* non linear */\n            this.mt[i] >>>= 0; /* for WORDSIZE > 32 machines */\n            i++;\n            if (i >= this.N) { this.mt[0] = this.mt[this.N - 1]; i = 1; }\n        }\n\n        this.mt[0] = 0x80000000; /* MSB is 1; assuring non-zero initial array */\n    };\n\n    /* generates a random number on [0,0xffffffff]-interval */\n    MersenneTwister.prototype.genrand_int32 = function () {\n        var y;\n        var mag01 = new Array(0x0, this.MATRIX_A);\n        /* mag01[x] = x * MATRIX_A  for x=0,1 */\n\n        if (this.mti >= this.N) { /* generate N words at one time */\n            var kk;\n\n            if (this.mti === this.N + 1) {   /* if init_genrand() has not been called, */\n                this.init_genrand(5489); /* a default initial seed is used */\n            }\n            for (kk = 0; kk < this.N - this.M; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + this.M] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            for (;kk < this.N - 1; kk++) {\n                y = (this.mt[kk]&this.UPPER_MASK)|(this.mt[kk + 1]&this.LOWER_MASK);\n                this.mt[kk] = this.mt[kk + (this.M - this.N)] ^ (y >>> 1) ^ mag01[y & 0x1];\n            }\n            y = (this.mt[this.N - 1]&this.UPPER_MASK)|(this.mt[0]&this.LOWER_MASK);\n            this.mt[this.N - 1] = this.mt[this.M - 1] ^ (y >>> 1) ^ mag01[y & 0x1];\n\n            this.mti = 0;\n        }\n\n        y = this.mt[this.mti++];\n\n        /* Tempering */\n        y ^= (y >>> 11);\n        y ^= (y << 7) & 0x9d2c5680;\n        y ^= (y << 15) & 0xefc60000;\n        y ^= (y >>> 18);\n\n        return y >>> 0;\n    };\n\n    /* generates a random number on [0,0x7fffffff]-interval */\n    MersenneTwister.prototype.genrand_int31 = function () {\n        return (this.genrand_int32() >>> 1);\n    };\n\n    /* generates a random number on [0,1]-real-interval */\n    MersenneTwister.prototype.genrand_real1 = function () {\n        return this.genrand_int32() * (1.0 / 4294967295.0);\n        /* divided by 2^32-1 */\n    };\n\n    /* generates a random number on [0,1)-real-interval */\n    MersenneTwister.prototype.random = function () {\n        return this.genrand_int32() * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on (0,1)-real-interval */\n    MersenneTwister.prototype.genrand_real3 = function () {\n        return (this.genrand_int32() + 0.5) * (1.0 / 4294967296.0);\n        /* divided by 2^32 */\n    };\n\n    /* generates a random number on [0,1) with 53-bit resolution*/\n    MersenneTwister.prototype.genrand_res53 = function () {\n        var a = this.genrand_int32()>>>5, b = this.genrand_int32()>>>6;\n        return (a * 67108864.0 + b) * (1.0 / 9007199254740992.0);\n    };\n\n    // BlueImp MD5 hashing algorithm from https://github.com/blueimp/JavaScript-MD5\n    var BlueImpMD5 = function () {};\n\n    BlueImpMD5.prototype.VERSION = '1.0.1';\n\n    /*\n    * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n    * to work around bugs in some JS interpreters.\n    */\n    BlueImpMD5.prototype.safe_add = function safe_add(x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n            msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*\n    * Bitwise rotate a 32-bit number to the left.\n    */\n    BlueImpMD5.prototype.bit_roll = function (num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    };\n\n    /*\n    * These functions implement the five basic operations the algorithm uses.\n    */\n    BlueImpMD5.prototype.md5_cmn = function (q, a, b, x, s, t) {\n        return this.safe_add(this.bit_roll(this.safe_add(this.safe_add(a, q), this.safe_add(x, t)), s), b);\n    };\n    BlueImpMD5.prototype.md5_ff = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_gg = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_hh = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n    BlueImpMD5.prototype.md5_ii = function (a, b, c, d, x, s, t) {\n        return this.md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n\n    /*\n    * Calculate the MD5 of an array of little-endian words, and a bit length.\n    */\n    BlueImpMD5.prototype.binl_md5 = function (x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << (len % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var i, olda, oldb, oldc, oldd,\n            a =  1732584193,\n            b = -271733879,\n            c = -1732584194,\n            d =  271733878;\n\n        for (i = 0; i < x.length; i += 16) {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = this.md5_ff(a, b, c, d, x[i],       7, -680876936);\n            d = this.md5_ff(d, a, b, c, x[i +  1], 12, -389564586);\n            c = this.md5_ff(c, d, a, b, x[i +  2], 17,  606105819);\n            b = this.md5_ff(b, c, d, a, x[i +  3], 22, -1044525330);\n            a = this.md5_ff(a, b, c, d, x[i +  4],  7, -176418897);\n            d = this.md5_ff(d, a, b, c, x[i +  5], 12,  1200080426);\n            c = this.md5_ff(c, d, a, b, x[i +  6], 17, -1473231341);\n            b = this.md5_ff(b, c, d, a, x[i +  7], 22, -45705983);\n            a = this.md5_ff(a, b, c, d, x[i +  8],  7,  1770035416);\n            d = this.md5_ff(d, a, b, c, x[i +  9], 12, -1958414417);\n            c = this.md5_ff(c, d, a, b, x[i + 10], 17, -42063);\n            b = this.md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);\n            a = this.md5_ff(a, b, c, d, x[i + 12],  7,  1804603682);\n            d = this.md5_ff(d, a, b, c, x[i + 13], 12, -40341101);\n            c = this.md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);\n            b = this.md5_ff(b, c, d, a, x[i + 15], 22,  1236535329);\n\n            a = this.md5_gg(a, b, c, d, x[i +  1],  5, -165796510);\n            d = this.md5_gg(d, a, b, c, x[i +  6],  9, -1069501632);\n            c = this.md5_gg(c, d, a, b, x[i + 11], 14,  643717713);\n            b = this.md5_gg(b, c, d, a, x[i],      20, -373897302);\n            a = this.md5_gg(a, b, c, d, x[i +  5],  5, -701558691);\n            d = this.md5_gg(d, a, b, c, x[i + 10],  9,  38016083);\n            c = this.md5_gg(c, d, a, b, x[i + 15], 14, -660478335);\n            b = this.md5_gg(b, c, d, a, x[i +  4], 20, -405537848);\n            a = this.md5_gg(a, b, c, d, x[i +  9],  5,  568446438);\n            d = this.md5_gg(d, a, b, c, x[i + 14],  9, -1019803690);\n            c = this.md5_gg(c, d, a, b, x[i +  3], 14, -187363961);\n            b = this.md5_gg(b, c, d, a, x[i +  8], 20,  1163531501);\n            a = this.md5_gg(a, b, c, d, x[i + 13],  5, -1444681467);\n            d = this.md5_gg(d, a, b, c, x[i +  2],  9, -51403784);\n            c = this.md5_gg(c, d, a, b, x[i +  7], 14,  1735328473);\n            b = this.md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n            a = this.md5_hh(a, b, c, d, x[i +  5],  4, -378558);\n            d = this.md5_hh(d, a, b, c, x[i +  8], 11, -2022574463);\n            c = this.md5_hh(c, d, a, b, x[i + 11], 16,  1839030562);\n            b = this.md5_hh(b, c, d, a, x[i + 14], 23, -35309556);\n            a = this.md5_hh(a, b, c, d, x[i +  1],  4, -1530992060);\n            d = this.md5_hh(d, a, b, c, x[i +  4], 11,  1272893353);\n            c = this.md5_hh(c, d, a, b, x[i +  7], 16, -155497632);\n            b = this.md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);\n            a = this.md5_hh(a, b, c, d, x[i + 13],  4,  681279174);\n            d = this.md5_hh(d, a, b, c, x[i],      11, -358537222);\n            c = this.md5_hh(c, d, a, b, x[i +  3], 16, -722521979);\n            b = this.md5_hh(b, c, d, a, x[i +  6], 23,  76029189);\n            a = this.md5_hh(a, b, c, d, x[i +  9],  4, -640364487);\n            d = this.md5_hh(d, a, b, c, x[i + 12], 11, -421815835);\n            c = this.md5_hh(c, d, a, b, x[i + 15], 16,  530742520);\n            b = this.md5_hh(b, c, d, a, x[i +  2], 23, -995338651);\n\n            a = this.md5_ii(a, b, c, d, x[i],       6, -198630844);\n            d = this.md5_ii(d, a, b, c, x[i +  7], 10,  1126891415);\n            c = this.md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);\n            b = this.md5_ii(b, c, d, a, x[i +  5], 21, -57434055);\n            a = this.md5_ii(a, b, c, d, x[i + 12],  6,  1700485571);\n            d = this.md5_ii(d, a, b, c, x[i +  3], 10, -1894986606);\n            c = this.md5_ii(c, d, a, b, x[i + 10], 15, -1051523);\n            b = this.md5_ii(b, c, d, a, x[i +  1], 21, -2054922799);\n            a = this.md5_ii(a, b, c, d, x[i +  8],  6,  1873313359);\n            d = this.md5_ii(d, a, b, c, x[i + 15], 10, -30611744);\n            c = this.md5_ii(c, d, a, b, x[i +  6], 15, -1560198380);\n            b = this.md5_ii(b, c, d, a, x[i + 13], 21,  1309151649);\n            a = this.md5_ii(a, b, c, d, x[i +  4],  6, -145523070);\n            d = this.md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);\n            c = this.md5_ii(c, d, a, b, x[i +  2], 15,  718787259);\n            b = this.md5_ii(b, c, d, a, x[i +  9], 21, -343485551);\n\n            a = this.safe_add(a, olda);\n            b = this.safe_add(b, oldb);\n            c = this.safe_add(c, oldc);\n            d = this.safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    };\n\n    /*\n    * Convert an array of little-endian words to a string\n    */\n    BlueImpMD5.prototype.binl2rstr = function (input) {\n        var i,\n            output = '';\n        for (i = 0; i < input.length * 32; i += 8) {\n            output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);\n        }\n        return output;\n    };\n\n    /*\n    * Convert a raw string to an array of little-endian words\n    * Characters >255 have their high-byte silently ignored.\n    */\n    BlueImpMD5.prototype.rstr2binl = function (input) {\n        var i,\n            output = [];\n        output[(input.length >> 2) - 1] = undefined;\n        for (i = 0; i < output.length; i += 1) {\n            output[i] = 0;\n        }\n        for (i = 0; i < input.length * 8; i += 8) {\n            output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);\n        }\n        return output;\n    };\n\n    /*\n    * Calculate the MD5 of a raw string\n    */\n    BlueImpMD5.prototype.rstr_md5 = function (s) {\n        return this.binl2rstr(this.binl_md5(this.rstr2binl(s), s.length * 8));\n    };\n\n    /*\n    * Calculate the HMAC-MD5, of a key and some data (raw strings)\n    */\n    BlueImpMD5.prototype.rstr_hmac_md5 = function (key, data) {\n        var i,\n            bkey = this.rstr2binl(key),\n            ipad = [],\n            opad = [],\n            hash;\n        ipad[15] = opad[15] = undefined;\n        if (bkey.length > 16) {\n            bkey = this.binl_md5(bkey, key.length * 8);\n        }\n        for (i = 0; i < 16; i += 1) {\n            ipad[i] = bkey[i] ^ 0x36363636;\n            opad[i] = bkey[i] ^ 0x5C5C5C5C;\n        }\n        hash = this.binl_md5(ipad.concat(this.rstr2binl(data)), 512 + data.length * 8);\n        return this.binl2rstr(this.binl_md5(opad.concat(hash), 512 + 128));\n    };\n\n    /*\n    * Convert a raw string to a hex string\n    */\n    BlueImpMD5.prototype.rstr2hex = function (input) {\n        var hex_tab = '0123456789abcdef',\n            output = '',\n            x,\n            i;\n        for (i = 0; i < input.length; i += 1) {\n            x = input.charCodeAt(i);\n            output += hex_tab.charAt((x >>> 4) & 0x0F) +\n                hex_tab.charAt(x & 0x0F);\n        }\n        return output;\n    };\n\n    /*\n    * Encode a string as utf-8\n    */\n    BlueImpMD5.prototype.str2rstr_utf8 = function (input) {\n        return unescape(encodeURIComponent(input));\n    };\n\n    /*\n    * Take string arguments and return either raw or hex encoded strings\n    */\n    BlueImpMD5.prototype.raw_md5 = function (s) {\n        return this.rstr_md5(this.str2rstr_utf8(s));\n    };\n    BlueImpMD5.prototype.hex_md5 = function (s) {\n        return this.rstr2hex(this.raw_md5(s));\n    };\n    BlueImpMD5.prototype.raw_hmac_md5 = function (k, d) {\n        return this.rstr_hmac_md5(this.str2rstr_utf8(k), this.str2rstr_utf8(d));\n    };\n    BlueImpMD5.prototype.hex_hmac_md5 = function (k, d) {\n        return this.rstr2hex(this.raw_hmac_md5(k, d));\n    };\n\n    BlueImpMD5.prototype.md5 = function (string, key, raw) {\n        if (!key) {\n            if (!raw) {\n                return this.hex_md5(string);\n            }\n\n            return this.raw_md5(string);\n        }\n\n        if (!raw) {\n            return this.hex_hmac_md5(key, string);\n        }\n\n        return this.raw_hmac_md5(key, string);\n    };\n\n    // CommonJS module\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = Chance;\n        }\n        exports.Chance = Chance;\n    }\n\n    // Register as an anonymous AMD module\n    if (typeof define === 'function' && define.amd) {\n        define([], function () {\n            return Chance;\n        });\n    }\n\n    // if there is a importsScrips object define chance for worker\n    // allows worker to use full Chance functionality with seed\n    if (typeof importScripts !== 'undefined') {\n        chance = new Chance();\n        self.Chance = Chance;\n    }\n\n    // If there is a window object, that at least has a document property,\n    // instantiate and define chance on the window\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\n        window.Chance = Chance;\n        window.chance = new Chance();\n    }\n})();\n", "import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function renderAvatar(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(Avatar, {\n    style: {\n      backgroundColor: params.value.color\n    },\n    children: params.value.name.toUpperCase().substring(0, 1)\n  });\n}", "import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Country = /*#__PURE__*/React.memo(function Country(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center',\n      '&  > img': {\n        mr: 0.5,\n        flexShrink: 0,\n        width: '20px'\n      }\n    },\n    children: [/*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${value.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${value.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), /*#__PURE__*/_jsx(Box, {\n      component: \"span\",\n      sx: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      children: value.label\n    })]\n  });\n});\nexport function renderCountry(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Country, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport { DemoLink } from \"./renderLink.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function renderEmail(params) {\n  const email = params.value ?? '';\n  return /*#__PURE__*/_jsx(DemoLink, {\n    href: `mailto:${email}`,\n    tabIndex: params.tabIndex,\n    children: email\n  });\n}", "import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Link = styled('a')({\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  color: 'inherit'\n});\nexport const DemoLink = /*#__PURE__*/React.memo(function DemoLink(props) {\n  const handleClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsx(Link, {\n    tabIndex: props.tabIndex,\n    onClick: handleClick,\n    href: props.href,\n    children: props.children\n  });\n});\nexport function renderLink(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(DemoLink, {\n    href: params.value,\n    tabIndex: params.tabIndex,\n    children: params.value\n  });\n}", "import * as React from 'react';\nimport Tooltip from '@mui/material/Tooltip';\nimport Box from '@mui/material/Box';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Incoterm = /*#__PURE__*/React.memo(function Incoterm(props) {\n  const {\n    value\n  } = props;\n  if (!value) {\n    return null;\n  }\n  const valueStr = value.toString();\n  const tooltip = valueStr.slice(valueStr.indexOf('(') + 1, valueStr.indexOf(')'));\n  const code = valueStr.slice(0, valueStr.indexOf('(')).trim();\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      children: code\n    }), /*#__PURE__*/_jsx(Tooltip, {\n      title: tooltip,\n      children: /*#__PURE__*/_jsx(InfoIcon, {\n        sx: {\n          color: '#2196f3',\n          alignSelf: 'center',\n          ml: '8px'\n        }\n      })\n    })]\n  });\n});\nexport function renderIncoterm(params) {\n  return /*#__PURE__*/_jsx(Incoterm, {\n    value: params.value\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Value = styled('div')(({\n  theme\n}) => ({\n  width: '100%',\n  fontVariantNumeric: 'tabular-nums',\n  '&.positive': _extends({\n    color: theme.palette.success.light\n  }, theme.applyStyles('light', {\n    color: theme.palette.success.dark\n  })),\n  '&.negative': _extends({\n    color: theme.palette.error.light\n  }, theme.applyStyles('light', {\n    color: theme.palette.error.dark\n  }))\n}));\nfunction pnlFormatter(value) {\n  return value < 0 ? `(${Math.abs(value).toLocaleString()})` : value.toLocaleString();\n}\nconst Pnl = /*#__PURE__*/React.memo(function Pnl(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsx(Value, {\n    className: clsx(value > 0 && \"positive\", value < 0 && \"negative\"),\n    children: pnlFormatter(value)\n  });\n});\nexport function renderPnl(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(Pnl, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Center = styled('div')({\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center'\n});\nconst Element = styled('div')(({\n  theme\n}) => ({\n  border: `1px solid ${(theme.vars || theme).palette.divider}`,\n  position: 'relative',\n  overflow: 'hidden',\n  width: '100%',\n  height: 26,\n  borderRadius: 2\n}));\nconst Value = styled('div')({\n  position: 'absolute',\n  lineHeight: '24px',\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center'\n});\nconst Bar = styled('div')({\n  height: '100%',\n  '&.low': {\n    backgroundColor: '#f44336'\n  },\n  '&.medium': {\n    backgroundColor: '#efbb5aa3'\n  },\n  '&.high': {\n    backgroundColor: '#088208a3'\n  }\n});\nconst ProgressBar = /*#__PURE__*/React.memo(function ProgressBar(props) {\n  const {\n    value\n  } = props;\n  const valueInPercent = value * 100;\n  return /*#__PURE__*/_jsxs(Element, {\n    children: [/*#__PURE__*/_jsx(Value, {\n      children: `${valueInPercent.toLocaleString()} %`\n    }), /*#__PURE__*/_jsx(Bar, {\n      className: clsx(valueInPercent < 30 && \"low\", valueInPercent >= 30 && valueInPercent <= 70 && \"medium\", valueInPercent > 70 && \"high\"),\n      style: {\n        maxWidth: `${valueInPercent}%`\n      }\n    })]\n  });\n});\nexport function renderProgress(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering a progress bar.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Center, {\n    children: /*#__PURE__*/_jsx(ProgressBar, {\n      value: params.value\n    })\n  });\n}", "import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RatingValue = /*#__PURE__*/React.memo(function RatingValue(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '24px',\n      color: 'text.secondary'\n    },\n    children: [/*#__PURE__*/_jsx(Rating, {\n      value: value,\n      sx: {\n        mr: 1\n      },\n      readOnly: true\n    }), \" \", Math.round(Number(value) * 10) / 10]\n  });\n});\nexport function renderRating(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(RatingValue, {\n    value: params.value\n  });\n}", "import * as React from 'react';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport Chip from '@mui/material/Chip';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledChip = styled(Chip)(({\n  theme\n}) => ({\n  justifyContent: 'left',\n  '& .icon': {\n    color: 'inherit'\n  },\n  '&.Open': {\n    color: (theme.vars || theme).palette.info.dark,\n    border: `1px solid ${(theme.vars || theme).palette.info.main}`\n  },\n  '&.Filled': {\n    color: (theme.vars || theme).palette.success.dark,\n    border: `1px solid ${(theme.vars || theme).palette.success.main}`\n  },\n  '&.PartiallyFilled': {\n    color: (theme.vars || theme).palette.warning.dark,\n    border: `1px solid ${(theme.vars || theme).palette.warning.main}`\n  },\n  '&.Rejected': {\n    color: (theme.vars || theme).palette.error.dark,\n    border: `1px solid ${(theme.vars || theme).palette.error.main}`\n  }\n}));\nconst Status = /*#__PURE__*/React.memo(props => {\n  const {\n    status\n  } = props;\n  let icon = null;\n  if (status === 'Rejected') {\n    icon = /*#__PURE__*/_jsx(ReportProblemIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'Open') {\n    icon = /*#__PURE__*/_jsx(InfoIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'PartiallyFilled') {\n    icon = /*#__PURE__*/_jsx(AutorenewIcon, {\n      className: \"icon\"\n    });\n  } else if (status === 'Filled') {\n    icon = /*#__PURE__*/_jsx(DoneIcon, {\n      className: \"icon\"\n    });\n  }\n  let label = status;\n  if (status === 'PartiallyFilled') {\n    label = 'Partially Filled';\n  }\n  return /*#__PURE__*/_jsx(StyledChip, {\n    className: status,\n    icon: icon,\n    size: \"small\",\n    label: label,\n    variant: \"outlined\"\n  });\n});\nexport function renderStatus(params) {\n  if (params.value == null) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(Status, {\n    status: params.value\n  });\n}", "import * as React from 'react';\nimport clsx from 'clsx';\nimport { alpha, styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Value = styled('div')(({\n  theme\n}) => ({\n  width: '100%',\n  height: '100%',\n  lineHeight: '100%',\n  paddingRight: 8,\n  fontVariantNumeric: 'tabular-nums',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n  '&.good': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.success.mainChannel} /  0.3)` : alpha(theme.palette.success.main, 0.3)\n  },\n  '&.bad': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.error.mainChannel} /  0.3)` : alpha(theme.palette.error.main, 0.3)\n  }\n}));\nconst currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD'\n});\nconst TotalPrice = /*#__PURE__*/React.memo(function TotalPrice(props) {\n  const {\n    value\n  } = props;\n  return /*#__PURE__*/_jsx(Value, {\n    className: clsx(value > 1000000 && \"good\", value < 1000000 && \"bad\"),\n    children: currencyFormatter.format(value)\n  });\n});\nexport function renderTotalPrice(params) {\n  if (params.value == null) {\n    return '';\n  }\n\n  // If the aggregated value does not have the same unit as the other cell\n  // Then we fall back to the default rendering based on `valueGetter` instead of rendering the total price UI.\n  if (params.aggregation && !params.aggregation.hasCellUnit) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(TotalPrice, {\n    value: params.value\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { CURRENCY_OPTIONS } from \"../services/static-data.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst StyledAutocomplete = styled(Autocomplete)(({\n  theme\n}) => ({\n  height: '100%',\n  [`& .${autocompleteClasses.inputRoot}`]: _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    height: '100%',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  })\n}));\nfunction EditCurrency(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = React.useCallback(async (event, newValue) => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue.toUpperCase()\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  }, [apiRef, field, id]);\n  return /*#__PURE__*/_jsx(StyledAutocomplete, {\n    value: value,\n    onChange: handleChange,\n    options: CURRENCY_OPTIONS,\n    autoHighlight: true,\n    fullWidth: true,\n    open: true,\n    disableClearable: true,\n    renderOption: (optionProps, option) => /*#__PURE__*/_jsxs(Box, _extends({\n      component: \"li\",\n      sx: {\n        '& > img': {\n          mr: 1.5,\n          flexShrink: 0\n        }\n      }\n    }, optionProps, {\n      children: [/*#__PURE__*/_jsx(\"img\", {\n        loading: \"lazy\",\n        width: \"20\",\n        src: `https://flagcdn.com/w20/${option.slice(0, -1).toLowerCase()}.png`,\n        srcSet: `https://flagcdn.com/w40/${option.slice(0, -1).toLowerCase()}.png 2x`,\n        alt: \"\"\n      }), option]\n    })),\n    renderInput: params => /*#__PURE__*/_jsx(InputBase, _extends({\n      autoFocus: true,\n      fullWidth: true,\n      id: params.id,\n      inputProps: _extends({}, params.inputProps, {\n        autoComplete: 'new-password' // disable autocomplete and autofill\n      })\n    }, params.InputProps))\n  });\n}\nexport function renderEditCurrency(params) {\n  return /*#__PURE__*/_jsx(EditCurrency, _extends({}, params));\n}", "/* eslint-disable */\n// See \"precomputation\" in notes\nconst k = [];\nlet i = 0;\nfor (; i < 64;) {\n  k[i] = 0 | Math.sin(++i % Math.PI) * 4294967296;\n  // k[i] = 0 | (Math.abs(Math.sin(++i)) * 4294967296);\n}\nexport function md5(s) {\n  const words = [];\n  let b,\n    c,\n    d,\n    j = unescape(encodeURI(s)) + '\\x80',\n    a = j.length;\n  const h = [b = 0x67452301, c = 0xefcdab89, ~b, ~c];\n  s = --a / 4 + 2 | 15;\n\n  // See \"Length bits\" in notes\n  words[--s] = a * 8;\n  for (; ~a;) {\n    // a !== -1\n    words[a >> 2] |= j.charCodeAt(a) << 8 * a--;\n  }\n  for (i = j = 0; i < s; i += 16) {\n    a = h;\n    for (; j < 64; a = [d = a[3], b + ((d = a[0] + [b & c | ~b & d, d & b | ~d & c, b ^ c ^ d, c ^ (b | ~d)][a = j >> 4] + k[j] + ~~words[i | [j, 5 * j + 1, 3 * j + 5, 7 * j][a] & 15]) << (a = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * a + j++ % 4]) | d >>> -a), b, c]) {\n      b = a[1] | 0;\n      c = a[2];\n    }\n\n    // See \"Integer safety\" in notes\n    for (j = 4; j;) h[--j] += a[j];\n\n    // j === 0\n  }\n  for (s = ''; j < 32;) {\n    s += (h[j >> 3] >> (1 ^ j++) * 4 & 15).toString(16);\n    // s += ((h[j >> 3] >> (4 ^ 4 * j++)) & 15).toString(16);\n  }\n  return s;\n}", "/* eslint-disable */\nconst _keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfunction utf8Encode(str) {\n  for (let n = 0; n < str.length; n++) {\n    const c = str.charCodeAt(n);\n    if (c >= 128) {\n      throw new Error('ASCII only support');\n    }\n  }\n  return str;\n}\nexport const base64Decode = input => {\n  let output = '';\n  let chr1, chr2, chr3;\n  let enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n  while (i < input.length) {\n    enc1 = _keyStr.indexOf(input.charAt(i++));\n    enc2 = _keyStr.indexOf(input.charAt(i++));\n    enc3 = _keyStr.indexOf(input.charAt(i++));\n    enc4 = _keyStr.indexOf(input.charAt(i++));\n    chr1 = enc1 << 2 | enc2 >> 4;\n    chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n    chr3 = (enc3 & 3) << 6 | enc4;\n    output = output + String.fromCharCode(chr1);\n    if (enc3 != 64) {\n      output = output + String.fromCharCode(chr2);\n    }\n    if (enc4 != 64) {\n      output = output + String.fromCharCode(chr3);\n    }\n  }\n  return output;\n};\nexport const base64Encode = input => {\n  let output = '';\n  let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n  let i = 0;\n  input = utf8Encode(input);\n  while (i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n    enc1 = chr1 >> 2;\n    enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n    enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n    enc4 = chr3 & 63;\n    if (isNaN(chr2)) {\n      enc3 = enc4 = 64;\n    } else if (isNaN(chr3)) {\n      enc4 = 64;\n    }\n    output = output + _keyStr.charAt(enc1) + _keyStr.charAt(enc2) + _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n  }\n  return output;\n};", "export const PLAN_SCOPES = ['pro', 'premium'];\nexport const PLAN_VERSIONS = ['initial', 'Q3-2024'];", "export const LICENSE_MODELS = [\n/**\n * A license is outdated if the current version of the software was released after the expiry date of the license.\n * But the license can be used indefinitely with an older version of the software.\n */\n'perpetual',\n/**\n * On development, a license is outdated if the expiry date has been reached\n * On production, a license is outdated if the current version of the software was released after the expiry date of the license (see \"perpetual\")\n */\n'annual',\n/**\n * Legacy. The previous name for 'annual'.\n * Can be removed once old license keys generated with 'subscription' are no longer supported.\n * To support for a while. We need more years of backward support and we sell multi year licenses.\n */\n'subscription'];", "/**\n * Workaround for the codesadbox preview error.\n *\n * Once these issues are resolved\n * https://github.com/mui/mui-x/issues/15765\n * https://github.com/codesandbox/codesandbox-client/issues/8673\n *\n * `showError` can simply use `console.error` again.\n */\nconst isCodeSandbox = typeof window !== 'undefined' && window.location.hostname.endsWith('.csb.app');\nfunction showError(message) {\n  // eslint-disable-next-line no-console\n  const logger = isCodeSandbox ? console.log : console.error;\n  logger(['*************************************************************', '', ...message, '', '*************************************************************'].join('\\n'));\n}\nexport function showInvalidLicenseKeyError() {\n  showError(['MUI X: Invalid license key.', '', \"Your MUI X license key format isn't valid. It could be because the license key is missing a character or has a typo.\", '', 'To solve the issue, you need to double check that `setLicenseKey()` is called with the right argument', 'Please check the license key installation https://mui.com/r/x-license-key-installation.']);\n}\nexport function showLicenseKeyPlanMismatchError() {\n  showError(['MUI X: License key plan mismatch.', '', 'Your use of MUI X is not compatible with the plan of your license key. The feature you are trying to use is not included in the plan of your license key. This happens if you try to use Data Grid Premium with a license key for the Pro plan.', '', 'To solve the issue, you can upgrade your plan from Pro to Premium at https://mui.com/r/x-get-license?scope=premium.', \"Of if you didn't intend to use Premium features, you can replace the import of `@mui/x-data-grid-premium` with `@mui/x-data-grid-pro`.\"]);\n}\nexport function showNotAvailableInInitialProPlanError() {\n  showError(['MUI X: Component not included in your license.', '', 'The component you are trying to use is not included in the Pro Plan you purchased.', '', 'Your license is from an old version of the Pro Plan that is only compatible with the `@mui/x-data-grid-pro` and `@mui/x-date-pickers-pro` commercial packages.', '', 'To start using another Pro package, please consider reaching to our sales team to upgrade your license or visit https://mui.com/r/x-get-license to get a new license key.']);\n}\nexport function showMissingLicenseKeyError({\n  plan,\n  packageName\n}) {\n  showError(['MUI X: Missing license key.', '', `The license key is missing. You might not be allowed to use \\`${packageName}\\` which is part of MUI X ${plan}.`, '', 'To solve the issue, you can check the free trial conditions: https://mui.com/r/x-license-trial.', 'If you are eligible no actions are required. If you are not eligible to the free trial, you need to purchase a license https://mui.com/r/x-get-license or stop using the software immediately.']);\n}\nexport function showExpiredPackageVersionError({\n  packageName\n}) {\n  showError(['MUI X: Expired package version.', '', `You have installed a version of \\`${packageName}\\` that is outside of the maintenance plan of your license key. By default, commercial licenses provide access to new versions released during the first year after the purchase.`, '', 'To solve the issue, you can renew your license https://mui.com/r/x-get-license or install an older version of the npm package that is compatible with your license key.']);\n}\nexport function showExpiredAnnualGraceLicenseKeyError({\n  plan,\n  licenseKey,\n  expiryTimestamp\n}) {\n  showError(['MUI X: Expired license key.', '', `Your annual license key to use MUI X ${plan} in non-production environments has expired. If you are seeing this development console message, you might be close to breach the license terms by making direct or indirect changes to the frontend of an app that render a MUI X ${plan} component (more details in https://mui.com/r/x-license-annual).`, '', 'To solve the problem you can either:', '', '- Renew your license https://mui.com/r/x-get-license and use the new key', `- Stop making changes to code depending directly or indirectly on MUI X ${plan}'s APIs`, '', 'Note that your license is perpetual in production environments with any version released before your license term ends.', '', `- License key expiry timestamp: ${new Date(expiryTimestamp)}`, `- Installed license key: ${licenseKey}`, '']);\n}\nexport function showExpiredAnnualLicenseKeyError({\n  plan,\n  licenseKey,\n  expiryTimestamp\n}) {\n  throw new Error(['MUI X: Expired license key.', '', `Your annual license key to use MUI X ${plan} in non-production environments has expired. If you are seeing this development console message, you might be close to breach the license terms by making direct or indirect changes to the frontend of an app that render a MUI X ${plan} component (more details in https://mui.com/r/x-license-annual).`, '', 'To solve the problem you can either:', '', '- Renew your license https://mui.com/r/x-get-license and use the new key', `- Stop making changes to code depending directly or indirectly on MUI X ${plan}'s APIs`, '', 'Note that your license is perpetual in production environments with any version released before your license term ends.', '', `- License key expiry timestamp: ${new Date(expiryTimestamp)}`, `- Installed license key: ${licenseKey}`, ''].join('\\n'));\n}", "import { ponyfillGlobal } from '@mui/utils';\n\n/**\n * @ignore - do not document.\n */\n\n// Store the license information in a global, so it can be shared\n// when module duplication occurs. The duplication of the modules can happen\n// if using multiple version of MUI X at the same time of the bundler\n// decide to duplicate to improve the size of the chunks.\n// eslint-disable-next-line no-underscore-dangle\nponyfillGlobal.__MUI_LICENSE_INFO__ = ponyfillGlobal.__MUI_LICENSE_INFO__ || {\n  key: undefined\n};\nexport class LicenseInfo {\n  static getLicenseInfo() {\n    // eslint-disable-next-line no-underscore-dangle\n    return ponyfillGlobal.__MUI_LICENSE_INFO__;\n  }\n  static getLicenseKey() {\n    return LicenseInfo.getLicenseInfo().key;\n  }\n  static setLicenseKey(key) {\n    const licenseInfo = LicenseInfo.getLicenseInfo();\n    licenseInfo.key = key;\n  }\n}", "// eslint-disable-next-line @typescript-eslint/naming-convention\nexport let LICENSE_STATUS = /*#__PURE__*/function (LICENSE_STATUS) {\n  LICENSE_STATUS[\"NotFound\"] = \"NotFound\";\n  LICENSE_STATUS[\"Invalid\"] = \"Invalid\";\n  LICENSE_STATUS[\"ExpiredAnnual\"] = \"ExpiredAnnual\";\n  LICENSE_STATUS[\"ExpiredAnnualGrace\"] = \"ExpiredAnnualGrace\";\n  LICENSE_STATUS[\"ExpiredVersion\"] = \"ExpiredVersion\";\n  LICENSE_STATUS[\"Valid\"] = \"Valid\";\n  LICENSE_STATUS[\"OutOfScope\"] = \"OutOfScope\";\n  LICENSE_STATUS[\"NotAvailableInInitialProPlan\"] = \"NotAvailableInInitialProPlan\";\n  return LICENSE_STATUS;\n}({});", "import { base64Decode, base64Encode } from \"../encoding/base64.js\";\nimport { md5 } from \"../encoding/md5.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport { PLAN_SCOPES } from \"../utils/plan.js\";\nimport { LICENSE_MODELS } from \"../utils/licenseModel.js\";\nconst getDefaultReleaseDate = () => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  return today;\n};\nexport function generateReleaseInfo(releaseDate = getDefaultReleaseDate()) {\n  return base64Encode(releaseDate.getTime().toString());\n}\nfunction isPlanScopeSufficient(packageName, planScope) {\n  let acceptedScopes;\n  if (packageName.includes('-pro')) {\n    acceptedScopes = ['pro', 'premium'];\n  } else if (packageName.includes('-premium')) {\n    acceptedScopes = ['premium'];\n  } else {\n    acceptedScopes = [];\n  }\n  return acceptedScopes.includes(planScope);\n}\nconst expiryReg = /^.*EXPIRY=([0-9]+),.*$/;\nconst PRO_PACKAGES_AVAILABLE_IN_INITIAL_PRO_PLAN = ['x-data-grid-pro', 'x-date-pickers-pro'];\n\n/**\n * Format: ORDER:${orderNumber},EXPIRY=${expiryTimestamp},KEYVERSION=1\n */\nconst decodeLicenseVersion1 = license => {\n  let expiryTimestamp;\n  try {\n    expiryTimestamp = parseInt(license.match(expiryReg)[1], 10);\n    if (!expiryTimestamp || Number.isNaN(expiryTimestamp)) {\n      expiryTimestamp = null;\n    }\n  } catch (err) {\n    expiryTimestamp = null;\n  }\n  return {\n    planScope: 'pro',\n    licenseModel: 'perpetual',\n    expiryTimestamp,\n    planVersion: 'initial'\n  };\n};\n\n/**\n * Format: O=${orderNumber},E=${expiryTimestamp},S=${planScope},LM=${licenseModel},PV=${planVersion},KV=2`;\n */\nconst decodeLicenseVersion2 = license => {\n  const licenseInfo = {\n    planScope: null,\n    licenseModel: null,\n    expiryTimestamp: null,\n    planVersion: 'initial'\n  };\n  license.split(',').map(token => token.split('=')).filter(el => el.length === 2).forEach(([key, value]) => {\n    if (key === 'S') {\n      licenseInfo.planScope = value;\n    }\n    if (key === 'LM') {\n      licenseInfo.licenseModel = value;\n    }\n    if (key === 'E') {\n      const expiryTimestamp = parseInt(value, 10);\n      if (expiryTimestamp && !Number.isNaN(expiryTimestamp)) {\n        licenseInfo.expiryTimestamp = expiryTimestamp;\n      }\n    }\n    if (key === 'PV') {\n      licenseInfo.planVersion = value;\n    }\n  });\n  return licenseInfo;\n};\n\n/**\n * Decode the license based on its key version and return a version-agnostic `MuiLicense` object.\n */\nconst decodeLicense = encodedLicense => {\n  const license = base64Decode(encodedLicense);\n  if (license.includes('KEYVERSION=1')) {\n    return decodeLicenseVersion1(license);\n  }\n  if (license.includes('KV=2')) {\n    return decodeLicenseVersion2(license);\n  }\n  return null;\n};\nexport function verifyLicense({\n  releaseInfo,\n  licenseKey,\n  packageName\n}) {\n  if (!releaseInfo) {\n    throw new Error('MUI X: The release information is missing. Not able to validate license.');\n  }\n  if (!licenseKey) {\n    return {\n      status: LICENSE_STATUS.NotFound\n    };\n  }\n  const hash = licenseKey.substr(0, 32);\n  const encoded = licenseKey.substr(32);\n  if (hash !== md5(encoded)) {\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  const license = decodeLicense(encoded);\n  if (license == null) {\n    console.error('MUI X: Error checking license. Key version not found!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (license.licenseModel == null || !LICENSE_MODELS.includes(license.licenseModel)) {\n    console.error('MUI X: Error checking license. Licensing model not found or invalid!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (license.expiryTimestamp == null) {\n    console.error('MUI X: Error checking license. Expiry timestamp not found or invalid!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (license.licenseModel === 'perpetual' || process.env.NODE_ENV === 'production') {\n    const pkgTimestamp = parseInt(base64Decode(releaseInfo), 10);\n    if (Number.isNaN(pkgTimestamp)) {\n      throw new Error('MUI X: The release information is invalid. Not able to validate license.');\n    }\n    if (license.expiryTimestamp < pkgTimestamp) {\n      return {\n        status: LICENSE_STATUS.ExpiredVersion\n      };\n    }\n  } else if (license.licenseModel === 'subscription' || license.licenseModel === 'annual') {\n    if (new Date().getTime() > license.expiryTimestamp) {\n      if (\n      // 30 days grace\n      new Date().getTime() < license.expiryTimestamp + 1000 * 3600 * 24 * 30 || process.env.NODE_ENV !== 'development') {\n        return {\n          status: LICENSE_STATUS.ExpiredAnnualGrace,\n          meta: {\n            expiryTimestamp: license.expiryTimestamp,\n            licenseKey\n          }\n        };\n      }\n      return {\n        status: LICENSE_STATUS.ExpiredAnnual,\n        meta: {\n          expiryTimestamp: license.expiryTimestamp,\n          licenseKey\n        }\n      };\n    }\n  }\n  if (license.planScope == null || !PLAN_SCOPES.includes(license.planScope)) {\n    console.error('MUI X: Error checking license. planScope not found or invalid!');\n    return {\n      status: LICENSE_STATUS.Invalid\n    };\n  }\n  if (!isPlanScopeSufficient(packageName, license.planScope)) {\n    return {\n      status: LICENSE_STATUS.OutOfScope\n    };\n  }\n\n  // 'charts-pro' or 'tree-view-pro' can only be used with a newer Pro license\n  if (license.planVersion === 'initial' && license.planScope === 'pro' && !PRO_PACKAGES_AVAILABLE_IN_INITIAL_PRO_PLAN.includes(packageName)) {\n    return {\n      status: LICENSE_STATUS.NotAvailableInInitialProPlan\n    };\n  }\n  return {\n    status: LICENSE_STATUS.Valid\n  };\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { verifyLicense } from \"../verifyLicense/verifyLicense.js\";\nimport { LicenseInfo } from \"../utils/licenseInfo.js\";\nimport { showExpiredAnnualGraceLicenseKeyError, showExpiredAnnualLicenseKeyError, showInvalidLicenseKeyError, showMissingLicenseKeyError, showLicenseKeyPlanMismatchError, showExpiredPackageVersionError, showNotAvailableInInitialProPlanError } from \"../utils/licenseErrorMessageUtils.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport MuiLicenseInfoContext from \"../Unstable_LicenseInfoProvider/MuiLicenseInfoContext.js\";\nexport const sharedLicenseStatuses = {};\nexport function useLicenseVerifier(packageName, releaseInfo) {\n  const {\n    key: contextKey\n  } = React.useContext(MuiLicenseInfoContext);\n  return React.useMemo(() => {\n    const licenseKey = contextKey ?? LicenseInfo.getLicenseKey();\n\n    // Cache the response to not trigger the error twice.\n    if (sharedLicenseStatuses[packageName] && sharedLicenseStatuses[packageName].key === licenseKey) {\n      return sharedLicenseStatuses[packageName].licenseVerifier;\n    }\n    const plan = packageName.includes('premium') ? 'Premium' : 'Pro';\n    const licenseStatus = verifyLicense({\n      releaseInfo,\n      licenseKey,\n      packageName\n    });\n    const fullPackageName = `@mui/${packageName}`;\n    if (licenseStatus.status === LICENSE_STATUS.Valid) {\n      // Skip\n    } else if (licenseStatus.status === LICENSE_STATUS.Invalid) {\n      showInvalidLicenseKeyError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotAvailableInInitialProPlan) {\n      showNotAvailableInInitialProPlanError();\n    } else if (licenseStatus.status === LICENSE_STATUS.OutOfScope) {\n      showLicenseKeyPlanMismatchError();\n    } else if (licenseStatus.status === LICENSE_STATUS.NotFound) {\n      showMissingLicenseKeyError({\n        plan,\n        packageName: fullPackageName\n      });\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnualGrace) {\n      showExpiredAnnualGraceLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredAnnual) {\n      showExpiredAnnualLicenseKeyError(_extends({\n        plan\n      }, licenseStatus.meta));\n    } else if (licenseStatus.status === LICENSE_STATUS.ExpiredVersion) {\n      showExpiredPackageVersionError({\n        packageName: fullPackageName\n      });\n    } else if (process.env.NODE_ENV !== 'production') {\n      throw new Error('missing status handler');\n    }\n    sharedLicenseStatuses[packageName] = {\n      key: licenseKey,\n      licenseVerifier: licenseStatus\n    };\n    return licenseStatus;\n  }, [packageName, releaseInfo, contextKey]);\n}", "import * as React from 'react';\nconst MuiLicenseInfoContext = /*#__PURE__*/React.createContext({\n  key: undefined\n});\nif (process.env.NODE_ENV !== 'production') {\n  MuiLicenseInfoContext.displayName = 'MuiLicenseInfoContext';\n}\nexport default MuiLicenseInfoContext;", "import * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useLicenseVerifier } from \"../useLicenseVerifier/index.js\";\nimport { LICENSE_STATUS } from \"../utils/licenseStatus.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getLicenseErrorMessage(licenseStatus) {\n  switch (licenseStatus) {\n    case LICENSE_STATUS.ExpiredAnnualGrace:\n    case LICENSE_STATUS.ExpiredAnnual:\n      return 'MUI X Expired license key';\n    case LICENSE_STATUS.ExpiredVersion:\n      return 'MUI X Expired package version';\n    case LICENSE_STATUS.Invalid:\n      return 'MUI X Invalid license key';\n    case LICENSE_STATUS.OutOfScope:\n      return 'MUI X License key plan mismatch';\n    case LICENSE_STATUS.NotAvailableInInitialProPlan:\n      return 'MUI X Product not covered by plan';\n    case LICENSE_STATUS.NotFound:\n      return 'MUI X Missing license key';\n    default:\n      throw new Error('Unhandled MUI X license status.');\n  }\n}\nfunction Watermark(props) {\n  const {\n    packageName,\n    releaseInfo\n  } = props;\n  const licenseStatus = useLicenseVerifier(packageName, releaseInfo);\n  if (licenseStatus.status === LICENSE_STATUS.Valid) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      position: 'absolute',\n      pointerEvents: 'none',\n      color: '#8282829e',\n      zIndex: 100000,\n      width: '100%',\n      textAlign: 'center',\n      bottom: '50%',\n      right: 0,\n      letterSpacing: 5,\n      fontSize: 24\n    },\n    children: getLicenseErrorMessage(licenseStatus.status)\n  });\n}\nconst MemoizedWatermark = fastMemo(Watermark);\nexport { MemoizedWatermark as Watermark };", "import * as React from 'react';\nimport MuiLicenseInfoContext from \"./MuiLicenseInfoContext.js\";\n\n/**\n * @ignore - do not document.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @ignore - do not document.\n */\nexport function LicenseInfoProvider({\n  info,\n  children\n}) {\n  return /*#__PURE__*/_jsx(MuiLicenseInfoContext.Provider, {\n    value: info,\n    children: children\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Box from '@mui/material/Box';\nimport { useGridSelector, gridFilteredDescendantCountLookupSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['treeDataGroupingCell'],\n    toggle: ['treeDataGroupingCellToggle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridTreeDataGroupingCell(props) {\n  const {\n    id,\n    field,\n    formattedValue,\n    rowNode,\n    hideDescendantCount,\n    offsetMultiplier = 2\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const classes = useUtilityClasses(rootProps);\n  const filteredDescendantCountLookup = useGridSelector(apiRef, gridFilteredDescendantCountLookupSelector);\n  const filteredDescendantCount = filteredDescendantCountLookup[rowNode.id] ?? 0;\n  const Icon = rowNode.childrenExpanded ? rootProps.slots.treeDataCollapseIcon : rootProps.slots.treeDataExpandIcon;\n  const handleClick = event => {\n    apiRef.current.setRowChildrenExpansion(id, !rowNode.childrenExpanded);\n    apiRef.current.setCellFocus(id, field);\n    event.stopPropagation(); // TODO remove event.stopPropagation\n  };\n  return /*#__PURE__*/_jsxs(Box, {\n    className: classes.root,\n    sx: {\n      ml: rowNode.depth * offsetMultiplier\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.toggle,\n      children: filteredDescendantCount > 0 && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        size: \"small\",\n        onClick: handleClick,\n        tabIndex: -1,\n        \"aria-label\": rowNode.childrenExpanded ? apiRef.current.getLocaleText('treeDataCollapse') : apiRef.current.getLocaleText('treeDataExpand')\n      }, rootProps?.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(Icon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }), /*#__PURE__*/_jsxs(\"span\", {\n      children: [formattedValue === undefined ? rowNode.groupingKey : formattedValue, !hideDescendantCount && filteredDescendantCount > 0 ? ` (${filteredDescendantCount})` : '']\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridTreeDataGroupingCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The cell offset multiplier used for calculating cell offset (`rowNode.depth * offsetMultiplier` px).\n   * @default 2\n   */\n  offsetMultiplier: PropTypes.number,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridTreeDataGroupingCell };", "import { useGridRootProps as useCommunityGridRootProps } from '@mui/x-data-grid';\nexport const useGridRootProps = useCommunityGridRootProps;", "import { useGridApiContext as useCommunityGridApiContext } from '@mui/x-data-grid';\nexport const useGridApiContext = useCommunityGridApiContext;", "import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPinnedColumnPosition } from '@mui/x-data-grid';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuPinningItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const pinColumn = React.useCallback(side => event => {\n    apiRef.current.pinColumn(colDef.field, side);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick]);\n  const unpinColumn = event => {\n    apiRef.current.unpinColumn(colDef.field);\n    onClick(event);\n  };\n  const pinToLeftMenuItem = /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: pinColumn(GridPinnedColumnPosition.LEFT),\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuPinLeftIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('pinToLeft')\n    })]\n  });\n  const pinToRightMenuItem = /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: pinColumn(GridPinnedColumnPosition.RIGHT),\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuPinRightIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('pinToRight')\n    })]\n  });\n  if (!colDef) {\n    return null;\n  }\n  const side = apiRef.current.isColumnPinned(colDef.field);\n  if (side) {\n    const otherSide = side === GridPinnedColumnPosition.RIGHT ? GridPinnedColumnPosition.LEFT : GridPinnedColumnPosition.RIGHT;\n    const label = otherSide === GridPinnedColumnPosition.RIGHT ? 'pinToRight' : 'pinToLeft';\n    const Icon = side === GridPinnedColumnPosition.RIGHT ? rootProps.slots.columnMenuPinLeftIcon : rootProps.slots.columnMenuPinRightIcon;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsxs(MenuItem, {\n        onClick: pinColumn(otherSide),\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          children: /*#__PURE__*/_jsx(Icon, {\n            fontSize: \"small\"\n          })\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          children: apiRef.current.getLocaleText(label)\n        })]\n      }), /*#__PURE__*/_jsxs(MenuItem, {\n        onClick: unpinColumn,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n          children: apiRef.current.getLocaleText('unpin')\n        })]\n      })]\n    });\n  }\n  if (isRtl) {\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [pinToRightMenuItem, pinToLeftMenuItem]\n    });\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [pinToLeftMenuItem, pinToRightMenuItem]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuPinningItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuPinningItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass, useGridSelector } from '@mui/x-data-grid';\nimport { createSelectorV8, useGridSelectorV8 } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector } from \"../hooks/features/detailPanel/gridDetailPanelSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isExpanded\n  } = ownerState;\n  const slots = {\n    root: ['detailPanelToggleCell', isExpanded && 'detailPanelToggleCell--expanded']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst isExpandedSelector = createSelectorV8(gridDetailPanelExpandedRowIdsSelector, (expandedRowIds, rowId) => {\n  return expandedRowIds.includes(rowId);\n});\nfunction GridDetailPanelToggleCell(props) {\n  const {\n    id,\n    row,\n    api\n  } = props;\n  const rowId = api.getRowId(row);\n  const isExpanded = useGridSelectorV8({\n    current: api\n  }, isExpandedSelector, rowId);\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const ownerState = {\n    classes: rootProps.classes,\n    isExpanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const hasContent = /*#__PURE__*/React.isValidElement(contentCache[id]);\n  const Icon = isExpanded ? rootProps.slots.detailPanelCollapseIcon : rootProps.slots.detailPanelExpandIcon;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    size: \"small\",\n    tabIndex: -1,\n    disabled: !hasContent,\n    className: classes.root,\n    \"aria-label\": isExpanded ? apiRef.current.getLocaleText('collapseDetailPanel') : apiRef.current.getLocaleText('expandDetailPanel')\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(Icon, {\n      fontSize: \"inherit\"\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridDetailPanelToggleCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridDetailPanelToggleCell };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/index.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const headerFilteringStateInitializer = (state, props) => _extends({}, state, {\n  headerFiltering: {\n    enabled: props.headerFilters ?? false,\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          enabled: props.headerFilters ?? false,\n          editing: headerFilterState.editing ?? null,\n          menuOpen: headerFilterState.menuOpen ?? null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature, props.headerFilters]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n\n  /*\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      apiRef.current.setHeaderFilterState({\n        enabled: props.headerFilters ?? false\n      });\n    }\n  }, [apiRef, props.headerFilters]);\n};", "import { createSelectorMemoized } from '@mui/x-data-grid/internals';\nexport const gridDetailPanelExpandedRowIdsSelector = state => state.detailPanel.expandedRowIds;\nexport const gridDetailPanelExpandedRowsContentCacheSelector = state => state.detailPanel.contentCache;\nexport const gridDetailPanelRawHeightCacheSelector = state => state.detailPanel.heightCache;\n\n// TODO v6: Make this selector return the full object, including the autoHeight flag\nexport const gridDetailPanelExpandedRowsHeightCacheSelector = createSelectorMemoized(gridDetailPanelRawHeightCacheSelector, heightCache => Object.entries(heightCache).reduce((acc, [id, {\n  height\n}]) => {\n  acc[id] = height || 0;\n  return acc;\n}, {}));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridRowMaximumTreeDepthSelector, gridSortModelSelector, useGridApiContext, useGridSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { gridEditRowsStateSelector, isEventTargetInPortal } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    isDraggable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowReorderCell', isDraggable && 'rowReorderCell--draggable'],\n    placeholder: ['rowReorderCellPlaceholder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridRowReorderCell(params) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  // eslint-disable-next-line no-underscore-dangle\n  const cellValue = params.row.__reorder__ || params.id;\n\n  // TODO: remove sortModel and treeDepth checks once row reorder is compatible\n  const isDraggable = React.useMemo(() => !!rootProps.rowReordering && !sortModel.length && treeDepth === 1 && Object.keys(editRowsState).length === 0, [rootProps.rowReordering, sortModel, treeDepth, editRowsState]);\n  const ownerState = {\n    isDraggable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(params.id)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(params.id), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, params.id]);\n  const draggableEventHandlers = isDraggable ? {\n    onDragStart: publish('rowDragStart'),\n    onDragOver: publish('rowDragOver'),\n    onDragEnd: publish('rowDragEnd')\n  } : null;\n  if (params.rowNode.type === 'footer') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    className: classes.root,\n    draggable: isDraggable\n  }, draggableEventHandlers, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.rowReorderIcon, {}), /*#__PURE__*/_jsx(\"div\", {\n      className: classes.placeholder,\n      children: cellValue\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridRowReorderCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridRowReorderCell };\nexport const renderRowReorderCell = params => {\n  if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRowReorderCell, _extends({}, params));\n};", "import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPushPinRightIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  transform: \"rotate(-30 15 10)\",\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M16,9V4l1,0c0.55,0,1-0.45,1-1v0c0-0.55-0.45-1-1-1H7C6.45,2,6,2.45,6,3v0 c0,0.55,0.45,1,1,1l1,0v5c0,1.66-1.34,3-3,3h0v2h5.97v7l1,1l1-1v-7H19v-2h0C17.34,12,16,10.66,16,9z\",\n    fillRule: \"evenodd\"\n  })\n}), 'PushPinRight');\nexport const GridPushPinLeftIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  transform: \"rotate(30 8 12)\",\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M16,9V4l1,0c0.55,0,1-0.45,1-1v0c0-0.55-0.45-1-1-1H7C6.45,2,6,2.45,6,3v0 c0,0.55,0.45,1,1,1l1,0v5c0,1.66-1.34,3-3,3h0v2h5.97v7l1,1l1-1v-7H19v-2h0C17.34,12,16,10.66,16,9z\",\n    fillRule: \"evenodd\"\n  })\n}), 'PushPinLeft');", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"operators\", \"item\", \"field\", \"buttonRef\", \"headerFilterMenuRef\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext, useGridSelector } from '@mui/x-data-grid';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { gridHeaderFilteringMenuSelector } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst sx = {\n  width: 22,\n  height: 22,\n  margin: 'auto 0 10px 5px'\n};\nfunction GridHeaderFilterMenuContainer(props) {\n  const {\n      operators,\n      item,\n      field,\n      buttonRef,\n      headerFilterMenuRef,\n      disabled = false\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const buttonId = useId();\n  const menuId = useId();\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const menuOpenField = useGridSelector(apiRef, gridHeaderFilteringMenuSelector);\n  const open = Boolean(menuOpenField === field && headerFilterMenuRef.current);\n  const handleClick = event => {\n    headerFilterMenuRef.current = event.currentTarget;\n    apiRef.current.showHeaderFilterMenu(field);\n  };\n  if (!rootProps.slots.headerFilterMenu) {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText('filterPanelOperator');\n  const labelString = label ? String(label) : undefined;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      id: buttonId,\n      ref: buttonRef,\n      \"aria-label\": labelString,\n      title: labelString,\n      \"aria-controls\": menuId,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"true\",\n      tabIndex: -1,\n      size: \"small\",\n      onClick: handleClick,\n      sx: sx,\n      disabled: disabled\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {\n        fontSize: \"small\"\n      })\n    })), /*#__PURE__*/_jsx(rootProps.slots.headerFilterMenu, _extends({\n      field: field,\n      open: open,\n      item: item,\n      target: headerFilterMenuRef.current,\n      operators: operators,\n      labelledBy: buttonId,\n      id: menuId\n    }, others))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderFilterMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  applyFilterChanges: PropTypes.func.isRequired,\n  buttonRef: refType,\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  headerFilterMenuRef: PropTypes.shape({\n    current: PropTypes.object\n  }).isRequired,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  operators: PropTypes.arrayOf(PropTypes.shape({\n    getApplyFilterFn: PropTypes.func.isRequired,\n    getValueAsString: PropTypes.func,\n    headerLabel: PropTypes.string,\n    InputComponent: PropTypes.elementType,\n    InputComponentProps: PropTypes.object,\n    label: PropTypes.string,\n    requiresFilterValue: PropTypes.bool,\n    value: PropTypes.string.isRequired\n  })).isRequired\n} : void 0;\nexport { GridHeaderFilterMenuContainer };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"colIndex\", \"height\", \"hasFocus\", \"width\", \"headerClassName\", \"colDef\", \"item\", \"headerFilterMenuRef\", \"InputComponentProps\", \"showClearIcon\", \"pinnedPosition\", \"pinnedOffset\", \"style\", \"showLeftBorder\", \"showRightBorder\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { gridVisibleColumnFieldsSelector, getDataGridUtilityClass, useGridSelector, GridFilterInputValue, GridFilterInputDate, GridFilterInputBoolean, GridFilterInputSingleSelect, gridFilterModelSelector, gridFilterableColumnLookupSelector } from '@mui/x-data-grid';\nimport { PinnedColumnPosition, useGridPrivateApiContext, gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector, isNavigationKey, attachPinnedStyle } from '@mui/x-data-grid/internals';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridHeaderFilterMenuContainer } from \"./GridHeaderFilterMenuContainer.js\";\nimport { GridHeaderFilterClearButton } from \"./GridHeaderFilterClearButton.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    showRightBorder,\n    showLeftBorder,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'columnHeader--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'columnHeader--pinnedRight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst emptyFieldSx = {\n  [`& input[value=\"\"]:not(:focus)`]: {\n    color: 'transparent'\n  }\n};\nconst defaultInputComponents = {\n  string: GridFilterInputValue,\n  number: GridFilterInputValue,\n  date: GridFilterInputDate,\n  dateTime: GridFilterInputDate,\n  boolean: GridFilterInputBoolean,\n  singleSelect: GridFilterInputSingleSelect,\n  actions: null,\n  custom: null\n};\nconst GridHeaderFilterCell = forwardRef((props, ref) => {\n  const {\n      colIndex,\n      height,\n      hasFocus,\n      width,\n      headerClassName,\n      colDef,\n      item,\n      headerFilterMenuRef,\n      InputComponentProps,\n      showClearIcon = true,\n      pinnedPosition,\n      pinnedOffset,\n      style: styleProp,\n      showLeftBorder,\n      showRightBorder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const columnFields = useGridSelector(apiRef, gridVisibleColumnFieldsSelector);\n  const rootProps = useGridRootProps();\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const inputRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const editingField = useGridSelector(apiRef, gridHeaderFilteringEditFieldSelector);\n  const isEditing = editingField === colDef.field;\n  const menuOpenField = useGridSelector(apiRef, gridHeaderFilteringMenuSelector);\n  const isMenuOpen = menuOpenField === colDef.field;\n\n  // TODO: Support for `isAnyOf` operator\n  const filterOperators = React.useMemo(() => {\n    if (!colDef.filterOperators) {\n      return [];\n    }\n    return colDef.filterOperators.filter(operator => operator.value !== 'isAnyOf');\n  }, [colDef.filterOperators]);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const isFilterReadOnly = React.useMemo(() => {\n    if (!filterModel?.items.length) {\n      return false;\n    }\n    const filterModelItem = filterModel.items.find(it => it.field === colDef.field);\n    return filterModelItem ? !filterableColumnsLookup[filterModelItem.field] : false;\n  }, [colDef.field, filterModel, filterableColumnsLookup]);\n  const currentOperator = React.useMemo(() => filterOperators.find(operator => operator.value === item.operator) ?? filterOperators[0], [item.operator, filterOperators]);\n  const InputComponent = colDef.filterable || isFilterReadOnly ? currentOperator.InputComponent ?? defaultInputComponents[colDef.type] : null;\n  const clearFilterItem = React.useCallback(() => {\n    apiRef.current.deleteFilterItem(item);\n  }, [apiRef, item]);\n  let headerFilterComponent;\n  if (colDef.renderHeaderFilter) {\n    headerFilterComponent = colDef.renderHeaderFilter(_extends({}, props, {\n      inputRef\n    }));\n  }\n  React.useLayoutEffect(() => {\n    if (hasFocus && !isMenuOpen) {\n      let focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      if (isEditing && InputComponent) {\n        focusableElement = inputRef.current;\n      }\n      const elementToFocus = focusableElement || cellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [InputComponent, apiRef, hasFocus, isEditing, isMenuOpen]);\n  const onKeyDown = React.useCallback(event => {\n    if (isMenuOpen || isNavigationKey(event.key) || isFilterReadOnly) {\n      return;\n    }\n    switch (event.key) {\n      case 'Escape':\n        if (isEditing) {\n          apiRef.current.stopHeaderFilterEditMode();\n        }\n        break;\n      case 'Enter':\n        if (isEditing) {\n          if (!event.defaultPrevented) {\n            apiRef.current.stopHeaderFilterEditMode();\n            break;\n          }\n        }\n        if (event.metaKey || event.ctrlKey) {\n          headerFilterMenuRef.current = buttonRef.current;\n          apiRef.current.showHeaderFilterMenu(colDef.field);\n          break;\n        }\n        apiRef.current.startHeaderFilterEditMode(colDef.field);\n        break;\n      case 'Tab':\n        {\n          if (isEditing) {\n            const fieldToFocus = columnFields[colIndex + (event.shiftKey ? -1 : 1)] ?? null;\n            if (fieldToFocus) {\n              apiRef.current.startHeaderFilterEditMode(fieldToFocus);\n              apiRef.current.setColumnHeaderFilterFocus(fieldToFocus, event);\n            }\n          }\n          break;\n        }\n      default:\n        if (isEditing || event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) {\n          break;\n        }\n        apiRef.current.startHeaderFilterEditMode(colDef.field);\n        break;\n    }\n  }, [apiRef, colDef.field, colIndex, columnFields, headerFilterMenuRef, isEditing, isFilterReadOnly, isMenuOpen]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, colDef.field]);\n  const onMouseDown = React.useCallback(event => {\n    if (!hasFocus) {\n      if (inputRef.current?.contains?.(event.target)) {\n        inputRef.current.focus();\n      }\n      apiRef.current.setColumnHeaderFilterFocus(colDef.field, event);\n    }\n  }, [apiRef, colDef.field, hasFocus]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('headerFilterKeyDown', onKeyDown),\n    onClick: publish('headerFilterClick'),\n    onMouseDown: publish('headerFilterMouseDown', onMouseDown),\n    onBlur: publish('headerFilterBlur')\n  }), [onMouseDown, onKeyDown, publish]);\n  const ownerState = _extends({}, rootProps, {\n    pinnedPosition,\n    colDef,\n    showLeftBorder,\n    showRightBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const isNoInputOperator = currentOperator.requiresFilterValue === false;\n  const isApplied = item?.value !== undefined || isNoInputOperator;\n  const label = currentOperator.headerLabel ?? apiRef.current.getLocaleText(`headerFilterOperator${capitalize(item.operator)}`);\n  const isFilterActive = isApplied || hasFocus;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    className: clsx(classes.root, headerClassName),\n    style: attachPinnedStyle(_extends({\n      height,\n      width\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset),\n    role: \"columnheader\",\n    \"aria-colindex\": colIndex + 1,\n    \"aria-label\": headerFilterComponent == null ? colDef.headerName ?? colDef.field : undefined\n  }, other, mouseEventsHandlers, {\n    ref: handleRef,\n    children: [headerFilterComponent, InputComponent && headerFilterComponent === undefined ? /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [/*#__PURE__*/_jsx(InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        inputRef: inputRef,\n        applyValue: apiRef.current.upsertFilterItem,\n        onFocus: () => apiRef.current.startHeaderFilterEditMode(colDef.field),\n        onBlur: event => {\n          apiRef.current.stopHeaderFilterEditMode();\n          // Blurring an input element should reset focus state only if `relatedTarget` is not the header filter cell\n          if (!event.relatedTarget?.className.includes('columnHeader')) {\n            apiRef.current.setState(state => _extends({}, state, {\n              focus: {\n                cell: null,\n                columnHeader: null,\n                columnHeaderFilter: null,\n                columnGroupHeader: null\n              }\n            }));\n          }\n        },\n        label: capitalize(label),\n        placeholder: \"\",\n        isFilterActive: isFilterActive,\n        clearButton: showClearIcon && isApplied ? /*#__PURE__*/_jsx(GridHeaderFilterClearButton, {\n          onClick: clearFilterItem,\n          disabled: isFilterReadOnly\n        }) : null,\n        disabled: isFilterReadOnly || isNoInputOperator,\n        tabIndex: -1,\n        InputLabelProps: null,\n        sx: colDef.type === 'date' || colDef.type === 'dateTime' || colDef.type === 'number' ? emptyFieldSx : undefined\n      }, isNoInputOperator ? {\n        value: ''\n      } : {}, currentOperator?.InputComponentProps, InputComponentProps)), /*#__PURE__*/_jsx(GridHeaderFilterMenuContainer, {\n        operators: filterOperators,\n        item: item,\n        field: colDef.field,\n        disabled: isFilterReadOnly,\n        applyFilterChanges: apiRef.current.upsertFilterItem,\n        headerFilterMenuRef: headerFilterMenuRef,\n        buttonRef: buttonRef\n      })]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderFilterCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  hasFocus: PropTypes.bool,\n  /**\n   * Class name added to the column header cell.\n   */\n  headerClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  headerFilterMenuRef: PropTypes.shape({\n    current: PropTypes.object\n  }).isRequired,\n  height: PropTypes.number.isRequired,\n  InputComponentProps: PropTypes.object,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]),\n  showClearIcon: PropTypes.bool,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst Memoized = fastMemo(GridHeaderFilterCell);\nexport { Memoized as GridHeaderFilterCell };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst sx = {\n  padding: '2px'\n};\nfunction GridHeaderFilterClearButton(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": \"Clear filter\",\n    size: \"small\",\n    sx: sx\n  }, props, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuClearIcon, {\n      fontSize: \"inherit\"\n    })\n  }));\n}\nexport { GridHeaderFilterClearButton };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport { unstable_capitalize as capitalize, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext, GridMenu } from '@mui/x-data-grid';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaderFilterMenu({\n  open,\n  field,\n  target,\n  applyFilterChanges,\n  operators,\n  item,\n  id,\n  labelledBy\n}) {\n  const apiRef = useGridApiContext();\n  const hideMenu = React.useCallback(() => {\n    apiRef.current.hideHeaderFilterMenu();\n  }, [apiRef]);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (event.key === 'Escape' || event.key === 'Tab') {\n      hideMenu();\n    }\n  }, [hideMenu]);\n  if (!target) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: \"bottom-end\",\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    children: /*#__PURE__*/_jsx(MenuList, {\n      \"aria-labelledby\": labelledBy,\n      id: id,\n      onKeyDown: handleListKeyDown,\n      children: operators.map((op, i) => {\n        const label = op?.headerLabel ?? apiRef.current.getLocaleText(`headerFilterOperator${capitalize(op.value)}`);\n        return /*#__PURE__*/_jsx(MenuItem, {\n          onClick: () => {\n            applyFilterChanges(_extends({}, item, {\n              operator: op.value\n            }));\n            hideMenu();\n          },\n          autoFocus: i === 0 ? open : false,\n          selected: op.value === item.operator,\n          children: label\n        }, `${field}-${op.value}`);\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderFilterMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  applyFilterChanges: PropTypes.func.isRequired,\n  field: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  labelledBy: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n  operators: PropTypes.arrayOf(PropTypes.shape({\n    getApplyFilterFn: PropTypes.func.isRequired,\n    getValueAsString: PropTypes.func,\n    headerLabel: PropTypes.string,\n    InputComponent: PropTypes.elementType,\n    InputComponentProps: PropTypes.object,\n    label: PropTypes.string,\n    requiresFilterValue: PropTypes.bool,\n    value: PropTypes.string.isRequired\n  })).isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridHeaderFilterMenu };", "import { createSelector } from '@mui/x-data-grid/internals';\nexport const gridColumnReorderSelector = state => state.columnReorder;\nexport const gridColumnReorderDragColSelector = createSelector(gridColumnReorderSelector, columnReorder => columnReorder.dragCol);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid';\nimport { renderRowReorderCell } from \"../../../components/GridRowReorderCell.js\";\nexport const GRID_REORDER_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'custom',\n  field: '__reorder__',\n  sortable: false,\n  filterable: false,\n  width: 50,\n  align: 'center',\n  headerAlign: 'center',\n  disableColumnMenu: true,\n  disableExport: true,\n  disableReorder: true,\n  resizable: false,\n  // @ts-ignore\n  aggregable: false,\n  renderHeader: () => ' ',\n  renderCell: renderRowReorderCell\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid';\nimport { GRID_TREE_DATA_GROUPING_FIELD } from '@mui/x-data-grid/internals';\n\n/**\n * TODO: Add sorting and filtering on the value and the filteredDescendantCount\n */\nexport const GRID_TREE_DATA_GROUPING_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'custom',\n  sortable: false,\n  filterable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  align: 'left',\n  width: 200,\n  valueGetter: (value, row, column, apiRef) => {\n    const rowId = apiRef.current.getRowId(row);\n    const rowNode = apiRef.current.getRowNode(rowId);\n    return rowNode?.type === 'group' || rowNode?.type === 'leaf' ? rowNode.groupingKey : undefined;\n  }\n});\nexport { GRID_TREE_DATA_GROUPING_FIELD };\nexport const GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES = {\n  field: GRID_TREE_DATA_GROUPING_FIELD,\n  editable: false,\n  groupable: false\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '@mui/x-data-grid/internals';\nimport { GridDetailPanelToggleCell } from \"../../../components/GridDetailPanelToggleCell.js\";\nimport { gridDetailPanelExpandedRowIdsSelector } from \"./gridDetailPanelSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport { GRID_DETAIL_PANEL_TOGGLE_FIELD };\nexport const GRID_DETAIL_PANEL_TOGGLE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'custom',\n  field: GRID_DETAIL_PANEL_TOGGLE_FIELD,\n  editable: false,\n  sortable: false,\n  filterable: false,\n  resizable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  align: 'left',\n  width: 40,\n  valueGetter: (value, row, column, apiRef) => {\n    const rowId = apiRef.current.getRowId(row);\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n    return expandedRowIds.includes(rowId);\n  },\n  renderCell: params => /*#__PURE__*/_jsx(GridDetailPanelToggleCell, _extends({}, params)),\n  renderHeader: ({\n    colDef\n  }) => /*#__PURE__*/_jsx(\"div\", {\n    \"aria-label\": colDef.headerName\n  })\n});", "export function getKey(params) {\n  return JSON.stringify([params.paginationModel, params.filterModel, params.sortModel, params.groupKeys, params.groupFields]);\n}\nexport class GridDataSourceCacheDefault {\n  constructor({\n    ttl = 300000\n  }) {\n    this.cache = void 0;\n    this.ttl = void 0;\n    this.cache = {};\n    this.ttl = ttl;\n  }\n  set(key, value) {\n    const keyString = getKey(key);\n    const expiry = Date.now() + this.ttl;\n    this.cache[keyString] = {\n      value,\n      expiry\n    };\n  }\n  get(key) {\n    const keyString = getKey(key);\n    const entry = this.cache[keyString];\n    if (!entry) {\n      return undefined;\n    }\n    if (Date.now() > entry.expiry) {\n      delete this.cache[keyString];\n      return undefined;\n    }\n    return entry.value;\n  }\n  clear() {\n    this.cache = {};\n  }\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nexport const getGroupRowIdFromPath = path => {\n  const pathStr = path.map(groupingCriteria => `${groupingCriteria.field}/${groupingCriteria.key}`).join('-');\n  return `auto-generated-row-${pathStr}`;\n};\nexport const getNodePathInTree = ({\n  id,\n  tree\n}) => {\n  const path = [];\n  let node = tree[id];\n  while (node.id !== GRID_ROOT_GROUP_ID) {\n    path.push({\n      field: node.type === 'leaf' ? null : node.groupingField,\n      key: node.groupingKey\n    });\n    node = tree[node.parent];\n  }\n  path.reverse();\n  return path;\n};\nexport const checkGroupChildrenExpansion = (node, defaultGroupingExpansionDepth, isGroupExpandedByDefault) => {\n  let childrenExpanded;\n  if (node.id === GRID_ROOT_GROUP_ID) {\n    childrenExpanded = true;\n  } else if (isGroupExpandedByDefault) {\n    childrenExpanded = isGroupExpandedByDefault(node);\n  } else {\n    childrenExpanded = defaultGroupingExpansionDepth === -1 || defaultGroupingExpansionDepth > node.depth;\n  }\n  return childrenExpanded;\n};\nexport const updateGroupDefaultExpansion = (node, defaultGroupingExpansionDepth, isGroupExpandedByDefault) => {\n  const childrenExpanded = checkGroupChildrenExpansion(node, defaultGroupingExpansionDepth, isGroupExpandedByDefault);\n  node.childrenExpanded = childrenExpanded;\n  return node;\n};\n\n/**\n * Insert a node in the tree\n */\nexport const insertNodeInTree = (node, tree, treeDepths, previousTree) => {\n  // 1. Insert node in the tree.\n  tree[node.id] = node;\n\n  // 2. Increment the `treeDepths` object for the node's depth.\n  treeDepths[node.depth] = (treeDepths[node.depth] ?? 0) + 1;\n\n  // 3. Register the new node in its parent.\n  const parentNode = tree[node.parent];\n  if (node.type === 'group' || node.type === 'leaf') {\n    // For groups and leaves,\n    // Register the node from its parents `children` and `childrenFromPath` properties.\n    const groupingFieldName = node.groupingField ?? '__no_field__';\n    const groupingKeyName = node.groupingKey ?? '__no_key__';\n    const groupingField = parentNode.childrenFromPath?.[groupingFieldName];\n    if (previousTree !== null && previousTree[parentNode.id] === tree[parentNode.id]) {\n      parentNode.children = [...parentNode.children, node.id];\n    } else {\n      parentNode.children.push(node.id);\n    }\n    if (groupingField == null) {\n      parentNode.childrenFromPath[groupingFieldName] = {\n        [groupingKeyName.toString()]: node.id\n      };\n    } else {\n      groupingField[groupingKeyName.toString()] = node.id;\n    }\n  } else if (node.type === 'footer') {\n    // For footers,\n    // Register the node from its parent `footerId` property.\n    parentNode.footerId = node.id;\n  }\n};\n\n/**\n * Removes a node from the tree\n */\nexport const removeNodeFromTree = ({\n  node,\n  tree,\n  treeDepths\n}) => {\n  // 1. Remove node from the tree.\n  delete tree[node.id];\n\n  // 2. Decrement the `treeDepths` object for the node's depth.\n  const nodeDepth = node.depth;\n  const currentNodeCount = treeDepths[nodeDepth];\n  if (currentNodeCount === 1) {\n    delete treeDepths[nodeDepth];\n  } else {\n    treeDepths[nodeDepth] = currentNodeCount - 1;\n  }\n\n  // 3. Unregister the new node in its parent.\n  const parentNode = tree[node.parent];\n  // For footers,\n  // Unregister the node from its parent `footerId` property.\n  if (node.type === 'footer') {\n    tree[parentNode.id] = _extends({}, parentNode, {\n      footerId: null\n    });\n  }\n  // For groups and leaves,\n  // Unregister the node from its parents `children` and `childrenFromPath` properties.\n  else {\n    const groupingField = node.groupingField ?? '__no_field__';\n    const groupingKey = node.groupingKey ?? '__no_key__';\n\n    // TODO rows v6: Can we avoid this linear complexity ?\n    const children = parentNode.children.filter(childId => childId !== node.id);\n    const childrenFromPath = parentNode.childrenFromPath;\n    delete childrenFromPath[groupingField][groupingKey.toString()];\n    tree[parentNode.id] = _extends({}, parentNode, {\n      children,\n      childrenFromPath\n    });\n  }\n};\n\n/**\n * Updates the `id` and `isAutoGenerated` properties of a group node.\n */\nexport const updateGroupNodeIdAndAutoGenerated = ({\n  node,\n  updatedNode,\n  previousTree,\n  tree,\n  treeDepths\n}) => {\n  // 1. Set the new parent for all children from the old group\n  node.children.forEach(childId => {\n    tree[childId] = _extends({}, tree[childId], {\n      parent: updatedNode.id\n    });\n  });\n\n  // 2. Remove the old group from the tree\n  removeNodeFromTree({\n    node,\n    tree,\n    treeDepths\n  });\n\n  // 3. Add the new group in the tree\n  const groupNode = _extends({}, node, updatedNode);\n  insertNodeInTree(groupNode, tree, treeDepths, previousTree);\n};\nexport const createUpdatedGroupsManager = () => ({\n  value: {},\n  addAction(groupId, action) {\n    if (!this.value[groupId]) {\n      this.value[groupId] = {};\n    }\n    this.value[groupId][action] = true;\n  }\n});\nexport const getVisibleRowsLookup = ({\n  tree,\n  filteredRowsLookup\n}) => {\n  if (!filteredRowsLookup) {\n    return {};\n  }\n  const visibleRowsLookup = {};\n  const handleTreeNode = (node, areAncestorsExpanded) => {\n    const isPassingFiltering = filteredRowsLookup[node.id] !== false;\n    if (node.type === 'group') {\n      node.children.forEach(childId => {\n        const childNode = tree[childId];\n        handleTreeNode(childNode, areAncestorsExpanded && !!node.childrenExpanded);\n      });\n    }\n    visibleRowsLookup[node.id] = isPassingFiltering && areAncestorsExpanded;\n\n    // TODO rows v6: Should we keep storing the visibility status of footer independently or rely on the group visibility in the selector ?\n    if (node.type === 'group' && node.footerId != null) {\n      visibleRowsLookup[node.footerId] = isPassingFiltering && areAncestorsExpanded && !!node.childrenExpanded;\n    }\n  };\n  const nodes = Object.values(tree);\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.depth === 0) {\n      handleTreeNode(node, true);\n    }\n  }\n  return visibleRowsLookup;\n};", "'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLicenseVerifier, Watermark } from '@mui/x-license';\nimport { GridRoot, GridContextProvider } from '@mui/x-data-grid-pro';\nimport { propValidatorsDataGrid, propValidatorsDataGridPro, validateProps } from '@mui/x-data-grid-pro/internals';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useDataGridPremiumComponent } from \"./useDataGridPremiumComponent.js\";\nimport { useDataGridPremiumProps } from \"./useDataGridPremiumProps.js\";\nimport { getReleaseInfo } from \"../utils/releaseInfo.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nconst releaseInfo = getReleaseInfo();\nconst watermark = /*#__PURE__*/_jsx(Watermark, {\n  packageName: \"x-data-grid-premium\",\n  releaseInfo: releaseInfo\n});\nlet dataGridPremiumPropValidators;\nif (process.env.NODE_ENV !== 'production') {\n  dataGridPremiumPropValidators = [...propValidatorsDataGrid, ...propValidatorsDataGridPro];\n}\nconst DataGridPremiumRaw = forwardRef(function DataGridPremium(inProps, ref) {\n  const props = useDataGridPremiumProps(inProps);\n  const privateApiRef = useDataGridPremiumComponent(props.apiRef, props);\n  useLicenseVerifier('x-data-grid-premium', releaseInfo);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, dataGridPremiumPropValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx\n    }, props.forwardedProps, props.slotProps?.root, {\n      ref: ref,\n      children: watermark\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? DataGridPremiumRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Aggregation functions available on the grid.\n   * @default GRID_AGGREGATION_FUNCTIONS\n   */\n  aggregationFunctions: PropTypes.object,\n  /**\n   * Set the aggregation model of the grid.\n   */\n  aggregationModel: PropTypes.object,\n  /**\n   * Rows used to generate the aggregated value.\n   * If `filtered`, the aggregated values are generated using only the rows currently passing the filtering process.\n   * If `all`, the aggregated values are generated using all the rows.\n   * @default \"filtered\"\n   */\n  aggregationRowsScope: PropTypes.oneOf(['all', 'filtered']),\n  /**\n   * The ref object that allows grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    disableColumnVirtualization: PropTypes.bool,\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the cell selection mode is enabled.\n   * @default false\n   */\n  cellSelection: PropTypes.bool,\n  /**\n   * Set the cell selection model of the grid.\n   */\n  cellSelectionModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * If `true`, the \"Select All\" header checkbox selects only the rows on the current page. To be used in combination with `checkboxSelection`.\n   * It only works if the pagination is enabled.\n   * @default false\n   */\n  checkboxSelectionVisibleOnly: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * If above 0, the row children will be expanded up to this depth.\n   * If equal to -1, all the row children will be expanded.\n   * @default 0\n   */\n  defaultGroupingExpansionDepth: PropTypes.number,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * The row ids to show the detail panel.\n   */\n  detailPanelExpandedRowIds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\n  /**\n   * If `true`, aggregation is disabled.\n   * @default false\n   */\n  disableAggregation: PropTypes.bool,\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, the filtering will only be applied to the top level rows when grouping rows with the `treeData` prop.\n   * @default false\n   */\n  disableChildrenFiltering: PropTypes.bool,\n  /**\n   * If `true`, the sorting will only be applied to the top level rows when grouping rows with the `treeData` prop.\n   * @default false\n   */\n  disableChildrenSorting: PropTypes.bool,\n  /**\n   * If `true`, the clipboard paste is disabled.\n   * @default false\n   */\n  disableClipboardPaste: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, the column pinning is disabled.\n   * @default false\n   */\n  disableColumnPinning: PropTypes.bool,\n  /**\n   * If `true`, reordering columns is disabled.\n   * @default false\n   */\n  disableColumnReorder: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, filtering with multiple columns is disabled.\n   * @default false\n   */\n  disableMultipleColumnsFiltering: PropTypes.bool,\n  /**\n   * If `true`, the sorting with multiple columns is disabled.\n   * @default false\n   */\n  disableMultipleColumnsSorting: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the row grouping is disabled.\n   * @default false\n   */\n  disableRowGrouping: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, then the feature is fully disabled, and neither property nor method calls will have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    ariaV8: PropTypes.bool,\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Determines the position of an aggregated value.\n   * @param {GridGroupNode} groupNode The current group.\n   * @returns {GridAggregationPosition | null} Position of the aggregated value (if `null`, the group isn't aggregated).\n   * @default (groupNode) => groupNode == null ? 'footer' : 'inline'\n   */\n  getAggregationPosition: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the height of the row detail panel.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {number | string} The height in pixels or \"auto\" to use the content height.\n   * @default \"() => 500\"\n   */\n  getDetailPanelHeight: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * Determines the path of a row in the tree data.\n   * For instance, a row with the path [\"A\", \"B\"] is the child of the row with the path [\"A\"].\n   * Note that all paths must contain at least one element.\n   * @template R\n   * @param {R} row The row from which we want the path.\n   * @returns {string[]} The path to the row.\n   */\n  getTreeDataPath: PropTypes.func,\n  /**\n   * The grouping column used by the tree data.\n   */\n  groupingColDef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Override the height of the header filters.\n   */\n  headerFilterHeight: PropTypes.number,\n  /**\n   * If `true`, the header filters feature is enabled.\n   * @default false\n   */\n  headerFilters: PropTypes.bool,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the row count in the footer is hidden.\n   * It has no effect if the pagination is enabled.\n   * @default false\n   */\n  hideFooterRowCount: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   * @deprecated `select` will be the default behavior from v8 onwards\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGridPremium.\n   * The data in it is set in the state on initialization but isn't controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a group should be expanded after its creation.\n   * This prop takes priority over the `defaultGroupingExpansionDepth` prop.\n   * @param {GridGroupNode} node The node of the group to test.\n   * @returns {boolean} A boolean indicating if the group is expanded.\n   */\n  isGroupExpandedByDefault: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, moving the mouse pointer outside the grid before releasing the mouse button\n   * in a column re-order action will not cause the column to jump back to its original position.\n   * @default false\n   */\n  keepColumnPositionIfDraggedOutside: PropTypes.bool,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when the row grouping model changes.\n   * @param {GridAggregationModel} model The aggregated columns.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onAggregationModelChange: PropTypes.func,\n  /**\n   * Callback fired before the clipboard paste operation starts.\n   * Use it to confirm or cancel the paste operation.\n   * @param {object} params Params passed to the callback.\n   * @param {string[][]} params.data The raw pasted data split by rows and cells.\n   * @returns {Promise<any>} A promise that resolves to confirm the paste operation, and rejects to cancel it.\n   */\n  onBeforeClipboardPasteStart: PropTypes.func,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple cells changes.\n   * @param {GridCellSelectionModel} cellSelectionModel Object in the shape of [[GridCellSelectionModel]] containing the selected cells.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellSelectionModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when the clipboard paste operation ends.\n   */\n  onClipboardPasteEnd: PropTypes.func,\n  /**\n   * Callback fired when the clipboard paste operation starts.\n   */\n  onClipboardPasteStart: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the detail panel of a row is opened or closed.\n   * @param {GridRowId[]} ids The ids of the rows which have the detail panel open.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onDetailPanelExpandedRowIdsChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Excel export changes.\n   * @param {string} inProgress Indicates if the task is in progress.\n   */\n  onExcelExportStateChange: PropTypes.func,\n  /**\n   * Callback fired when rowCount is set and the next batch of virtualized rows is rendered.\n   * @param {GridFetchRowsParams} params With all properties from [[GridFetchRowsParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFetchRows: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the pinned columns have changed.\n   * @param {GridPinnedColumnFields} pinnedColumns The changed pinned columns.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPinnedColumnsChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the row grouping model changes.\n   * @param {GridRowGroupingModel} model Columns used as grouping criteria.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowGroupingModelChange: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when a row is being reordered.\n   * @param {GridRowOrderChangeParams} params With all properties from [[GridRowOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when scrolling to the bottom of the grid viewport.\n   * @param {GridRowScrollEndParams} params With all properties from [[GridRowScrollEndParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowsScrollEnd: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * If `true`, pagination is enabled.\n   * @default false\n   */\n  pagination: PropTypes.bool,\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * The column fields to display pinned to left or right.\n   */\n  pinnedColumns: PropTypes.object,\n  /**\n   * Rows data to pin on top or bottom.\n   */\n  pinnedRows: PropTypes.shape({\n    bottom: PropTypes.arrayOf(PropTypes.object),\n    top: PropTypes.arrayOf(PropTypes.object)\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * If `true`, the page is set to 0 after each sorting or filtering.\n   * This prop will be removed in the next major version and resetting the page will become the default behavior.\n   * @default false\n   */\n  resetPageOnSortFilter: PropTypes.bool,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * If `single`, all the columns that are grouped are represented in the same grid column.\n   * If `multiple`, each column that is grouped is represented in its own grid column.\n   * @default 'single'\n   */\n  rowGroupingColumnMode: PropTypes.oneOf(['multiple', 'single']),\n  /**\n   * Set the row grouping model of the grid.\n   */\n  rowGroupingModel: PropTypes.arrayOf(PropTypes.string),\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * If `true`, the reordering of rows is enabled.\n   * @default false\n   */\n  rowReordering: PropTypes.bool,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * When `rowSelectionPropagation.descendants` is set to `true`.\n   * - Selecting a parent selects all its filtered descendants automatically.\n   * - Deselecting a parent row deselects all its filtered descendants automatically.\n   *\n   * When `rowSelectionPropagation.parents` is set to `true`\n   * - Selecting all the filtered descendants of a parent selects the parent automatically.\n   * - Deselecting a descendant of a selected parent deselects the parent automatically.\n   *\n   * Works with tree data and row grouping on the client-side only.\n   * @default { parents: false, descendants: false }\n   */\n  rowSelectionPropagation: PropTypes.shape({\n    descendants: PropTypes.bool,\n    parents: PropTypes.bool\n  }),\n  /**\n   * Loading rows can be processed on the server or client-side.\n   * Set it to 'client' if you would like enable infnite loading.\n   * Set it to 'server' if you would like to enable lazy loading.\n   * * @default \"client\"\n   */\n  rowsLoadingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * Set the area in `px` at the bottom of the grid viewport where onRowsScrollEnd is called.\n   * @default 80\n   */\n  scrollEndThreshold: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The function is used to split the pasted text into rows and cells.\n   * @param {string} text The text pasted from the clipboard.\n   * @returns {string[][] | null} A 2D array of strings. The first dimension is the rows, the second dimension is the columns.\n   * @default (pastedText) => { const text = pastedText.replace(/\\r?\\n$/, ''); return text.split(/\\r\\n|\\n|\\r/).map((row) => row.split('\\t')); }\n   */\n  splitClipboardPastedText: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If positive, the Data Grid will throttle updates coming from `apiRef.current.updateRows` and `apiRef.current.setRows`.\n   * It can be useful if you have a high update rate but do not want to do heavy work like filtering / sorting or rendering on each  individual update.\n   * @default 0\n   */\n  throttleRowsMs: PropTypes.number,\n  /**\n   * If `true`, the rows will be gathered in a tree structure according to the `getTreeDataPath` prop.\n   * @default false\n   */\n  treeData: PropTypes.bool,\n  unstable_dataSource: PropTypes.shape({\n    getChildrenCount: PropTypes.func,\n    getGroupKey: PropTypes.func,\n    getRows: PropTypes.func.isRequired,\n    updateRow: PropTypes.func\n  }),\n  unstable_dataSourceCache: PropTypes.shape({\n    clear: PropTypes.func.isRequired,\n    get: PropTypes.func.isRequired,\n    set: PropTypes.func.isRequired\n  }),\n  /**\n   * Definition of the column rendered when the `unstable_listView` prop is enabled.\n   */\n  unstable_listColumn: PropTypes.shape({\n    align: PropTypes.oneOf(['center', 'left', 'right']),\n    cellClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    display: PropTypes.oneOf(['flex', 'text']),\n    field: PropTypes.string.isRequired,\n    renderCell: PropTypes.func\n  }),\n  /**\n   * If `true`, displays the data in a list view.\n   * Use in combination with `unstable_listColumn`.\n   */\n  unstable_listView: PropTypes.bool,\n  unstable_onDataSourceError: PropTypes.func,\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.\n   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.\n   * For datasets with a large number of columns, this can cause performance issues.\n   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.\n   * @default false\n   */\n  virtualizeColumnsWithAutoRowHeight: PropTypes.bool\n} : void 0;\n/**\n * Demos:\n * - [DataGridPremium](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGridPremium API](https://mui.com/x/api/data-grid/data-grid-premium/)\n */\nexport const DataGridPremium = /*#__PURE__*/React.memo(DataGridPremiumRaw);", "'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLicenseVerifier, Watermark } from '@mui/x-license';\nimport { GridRoot, GridContextProvider } from '@mui/x-data-grid';\nimport { validateProps } from '@mui/x-data-grid/internals';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useDataGridProComponent } from \"./useDataGridProComponent.js\";\nimport { useDataGridProProps } from \"./useDataGridProProps.js\";\nimport { getReleaseInfo } from \"../utils/releaseInfo.js\";\nimport { propValidatorsDataGridPro } from \"../internals/propValidation.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nconst releaseInfo = getReleaseInfo();\nconst watermark = /*#__PURE__*/_jsx(Watermark, {\n  packageName: \"x-data-grid-pro\",\n  releaseInfo: releaseInfo\n});\nconst DataGridProRaw = forwardRef(function DataGridPro(inProps, ref) {\n  const props = useDataGridProProps(inProps);\n  const privateApiRef = useDataGridProComponent(props.apiRef, props);\n  useLicenseVerifier('x-data-grid-pro', releaseInfo);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidatorsDataGridPro);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx\n    }, props.forwardedProps, props.slotProps?.root, {\n      ref: ref,\n      children: watermark\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGridPro](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGridPro API](https://mui.com/x/api/data-grid/data-grid-pro/)\n */\nexport const DataGridPro = /*#__PURE__*/React.memo(DataGridProRaw);\nDataGridProRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    disableColumnVirtualization: PropTypes.bool,\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * If `true`, the \"Select All\" header checkbox selects only the rows on the current page. To be used in combination with `checkboxSelection`.\n   * It only works if the pagination is enabled.\n   * @default false\n   */\n  checkboxSelectionVisibleOnly: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * If above 0, the row children will be expanded up to this depth.\n   * If equal to -1, all the row children will be expanded.\n   * @default 0\n   */\n  defaultGroupingExpansionDepth: PropTypes.number,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * The row ids to show the detail panel.\n   */\n  detailPanelExpandedRowIds: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, the filtering will only be applied to the top level rows when grouping rows with the `treeData` prop.\n   * @default false\n   */\n  disableChildrenFiltering: PropTypes.bool,\n  /**\n   * If `true`, the sorting will only be applied to the top level rows when grouping rows with the `treeData` prop.\n   * @default false\n   */\n  disableChildrenSorting: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, the column pinning is disabled.\n   * @default false\n   */\n  disableColumnPinning: PropTypes.bool,\n  /**\n   * If `true`, reordering columns is disabled.\n   * @default false\n   */\n  disableColumnReorder: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, filtering with multiple columns is disabled.\n   * @default false\n   */\n  disableMultipleColumnsFiltering: PropTypes.bool,\n  /**\n   * If `true`, the sorting with multiple columns is disabled.\n   * @default false\n   */\n  disableMultipleColumnsSorting: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the height of the row detail panel.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {number | string} The height in pixels or \"auto\" to use the content height.\n   * @default \"() => 500\"\n   */\n  getDetailPanelHeight: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * Determines the path of a row in the tree data.\n   * For instance, a row with the path [\"A\", \"B\"] is the child of the row with the path [\"A\"].\n   * Note that all paths must contain at least one element.\n   * @template R\n   * @param {R} row The row from which we want the path.\n   * @returns {string[]} The path to the row.\n   */\n  getTreeDataPath: PropTypes.func,\n  /**\n   * The grouping column used by the tree data.\n   */\n  groupingColDef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * Override the height of the header filters.\n   */\n  headerFilterHeight: PropTypes.number,\n  /**\n   * If `true`, the header filters feature is enabled.\n   * @default false\n   */\n  headerFilters: PropTypes.bool,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the row count in the footer is hidden.\n   * It has no effect if the pagination is enabled.\n   * @default false\n   */\n  hideFooterRowCount: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   * @deprecated `select` will be the default behavior from v8 onwards\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGridPro.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a group should be expanded after its creation.\n   * This prop takes priority over the `defaultGroupingExpansionDepth` prop.\n   * @param {GridGroupNode} node The node of the group to test.\n   * @returns {boolean} A boolean indicating if the group is expanded.\n   */\n  isGroupExpandedByDefault: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, moving the mouse pointer outside the grid before releasing the mouse button\n   * in a column re-order action will not cause the column to jump back to its original position.\n   * @default false\n   */\n  keepColumnPositionIfDraggedOutside: PropTypes.bool,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the detail panel of a row is opened or closed.\n   * @param {GridRowId[]} ids The ids of the rows which have the detail panel open.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onDetailPanelExpandedRowIdsChange: PropTypes.func,\n  /**\n   * Callback fired when rowCount is set and the next batch of virtualized rows is rendered.\n   * @param {GridFetchRowsParams} params With all properties from [[GridFetchRowsParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFetchRows: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the pinned columns have changed.\n   * @param {GridPinnedColumnFields} pinnedColumns The changed pinned columns.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPinnedColumnsChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when a row is being reordered.\n   * @param {GridRowOrderChangeParams} params With all properties from [[GridRowOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowOrderChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when scrolling to the bottom of the grid viewport.\n   * @param {GridRowScrollEndParams} params With all properties from [[GridRowScrollEndParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowsScrollEnd: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * If `true`, pagination is enabled.\n   * @default false\n   */\n  pagination: PropTypes.bool,\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * The column fields to display pinned to left or right.\n   */\n  pinnedColumns: PropTypes.object,\n  /**\n   * Rows data to pin on top or bottom.\n   */\n  pinnedRows: PropTypes.shape({\n    bottom: PropTypes.arrayOf(PropTypes.object),\n    top: PropTypes.arrayOf(PropTypes.object)\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * If `true`, the page is set to 0 after each sorting or filtering.\n   * This prop will be removed in the next major version and resetting the page will become the default behavior.\n   * @default false\n   */\n  resetPageOnSortFilter: PropTypes.bool,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * If `true`, the reordering of rows is enabled.\n   * @default false\n   */\n  rowReordering: PropTypes.bool,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * When `rowSelectionPropagation.descendants` is set to `true`.\n   * - Selecting a parent selects all its filtered descendants automatically.\n   * - Deselecting a parent row deselects all its filtered descendants automatically.\n   *\n   * When `rowSelectionPropagation.parents` is set to `true`\n   * - Selecting all the filtered descendants of a parent selects the parent automatically.\n   * - Deselecting a descendant of a selected parent deselects the parent automatically.\n   *\n   * Works with tree data and row grouping on the client-side only.\n   * @default { parents: false, descendants: false }\n   */\n  rowSelectionPropagation: PropTypes.shape({\n    descendants: PropTypes.bool,\n    parents: PropTypes.bool\n  }),\n  /**\n   * Loading rows can be processed on the server or client-side.\n   * Set it to 'client' if you would like enable infnite loading.\n   * Set it to 'server' if you would like to enable lazy loading.\n   * * @default \"client\"\n   */\n  rowsLoadingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * Set the area in `px` at the bottom of the grid viewport where onRowsScrollEnd is called.\n   * @default 80\n   */\n  scrollEndThreshold: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If positive, the Data Grid will throttle updates coming from `apiRef.current.updateRows` and `apiRef.current.setRows`.\n   * It can be useful if you have a high update rate but do not want to do heavy work like filtering / sorting or rendering on each  individual update.\n   * @default 0\n   */\n  throttleRowsMs: PropTypes.number,\n  /**\n   * If `true`, the rows will be gathered in a tree structure according to the `getTreeDataPath` prop.\n   * @default false\n   */\n  treeData: PropTypes.bool,\n  unstable_dataSource: PropTypes.shape({\n    getChildrenCount: PropTypes.func,\n    getGroupKey: PropTypes.func,\n    getRows: PropTypes.func.isRequired,\n    updateRow: PropTypes.func\n  }),\n  unstable_dataSourceCache: PropTypes.shape({\n    clear: PropTypes.func.isRequired,\n    get: PropTypes.func.isRequired,\n    set: PropTypes.func.isRequired\n  }),\n  /**\n   * Definition of the column rendered when the `unstable_listView` prop is enabled.\n   */\n  unstable_listColumn: PropTypes.shape({\n    align: PropTypes.oneOf(['center', 'left', 'right']),\n    cellClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    display: PropTypes.oneOf(['flex', 'text']),\n    field: PropTypes.string.isRequired,\n    renderCell: PropTypes.func\n  }),\n  /**\n   * If `true`, displays the data in a list view.\n   * Use in combination with `unstable_listColumn`.\n   */\n  unstable_listView: PropTypes.bool,\n  unstable_onDataSourceError: PropTypes.func,\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.\n   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.\n   * For datasets with a large number of columns, this can cause performance issues.\n   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.\n   * @default false\n   */\n  virtualizeColumnsWithAutoRowHeight: PropTypes.bool\n};", "import * as React from 'react';\nimport { useGridSelector, useGridApiOptionHandler, gridVisibleColumnDefinitionsSelector, useGridApiMethod } from '@mui/x-data-grid';\nimport { useGridVisibleRows, useTimeout, gridHorizontalScrollbarHeightSelector } from '@mui/x-data-grid/internals';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { styled } from '@mui/system';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InfiniteLoadingTriggerElement = styled('div')({\n  position: 'sticky',\n  left: 0,\n  width: 0,\n  height: 0\n});\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridDimensions (method) - can be after\n * @requires useGridScroll (method\n */\nexport const useGridInfiniteLoader = (apiRef, props) => {\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const observer = React.useRef(null);\n  const updateTargetTimeout = useTimeout();\n  const triggerElement = React.useRef(null);\n  const isEnabled = props.rowsLoadingMode === 'client' && !!props.onRowsScrollEnd;\n  const handleLoadMoreRows = useEventCallback(([entry]) => {\n    const currentRatio = entry.intersectionRatio;\n    const isIntersecting = entry.isIntersecting;\n    if (isIntersecting && currentRatio === 1) {\n      const viewportPageSize = apiRef.current.getViewportPageSize();\n      const rowScrollEndParams = {\n        visibleColumns,\n        viewportPageSize,\n        visibleRowsCount: currentPage.rows.length\n      };\n      apiRef.current.publishEvent('rowsScrollEnd', rowScrollEndParams);\n      observer.current?.disconnect();\n      // do not observe this node anymore\n      triggerElement.current = null;\n    }\n  });\n  React.useEffect(() => {\n    const virtualScroller = apiRef.current.virtualScrollerRef.current;\n    if (!isEnabled) {\n      return;\n    }\n    if (!virtualScroller) {\n      return;\n    }\n    observer.current?.disconnect();\n    const horizontalScrollbarHeight = gridHorizontalScrollbarHeightSelector(apiRef.current.state);\n    const marginBottom = props.scrollEndThreshold - horizontalScrollbarHeight;\n    observer.current = new IntersectionObserver(handleLoadMoreRows, {\n      threshold: 1,\n      root: virtualScroller,\n      rootMargin: `0px 0px ${marginBottom}px 0px`\n    });\n    if (triggerElement.current) {\n      observer.current.observe(triggerElement.current);\n    }\n  }, [apiRef, handleLoadMoreRows, isEnabled, props.scrollEndThreshold]);\n  const updateTarget = node => {\n    if (triggerElement.current !== node) {\n      observer.current?.disconnect();\n      triggerElement.current = node;\n      if (triggerElement.current) {\n        observer.current?.observe(triggerElement.current);\n      }\n    }\n  };\n  const triggerRef = React.useCallback(node => {\n    // Prevent the infite loading working in combination with lazy loading\n    if (!isEnabled) {\n      return;\n    }\n\n    // If the user scrolls through the grid too fast it might happen that the observer is connected to the trigger element\n    // that will be intersecting the root inside the same render cycle (but not intersecting at the time of the connection).\n    // This will cause the observer to not call the callback with `isIntersecting` set to `true`.\n    // https://www.w3.org/TR/intersection-observer/#event-loop\n    // Delaying the connection to the next cycle helps since the observer will always call the callback the first time it is connected.\n    // https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/observe\n    // Related to\n    // https://github.com/mui/mui-x/issues/14116\n    updateTargetTimeout.start(0, () => updateTarget(node));\n  }, [isEnabled, updateTargetTimeout]);\n  const getInfiniteLoadingTriggerElement = React.useCallback(({\n    lastRowId\n  }) => {\n    if (!isEnabled) {\n      return null;\n    }\n    return /*#__PURE__*/_jsx(InfiniteLoadingTriggerElement, {\n      ref: triggerRef\n      // Force rerender on last row change to start observing the new trigger\n      ,\n\n      role: \"presentation\"\n    }, `trigger-${lastRowId}`);\n  }, [isEnabled, triggerRef]);\n  const infiniteLoaderPrivateApi = {\n    getInfiniteLoadingTriggerElement\n  };\n  useGridApiMethod(apiRef, infiniteLoaderPrivateApi, 'private');\n  useGridApiOptionHandler(apiRef, 'rowsScrollEnd', props.onRowsScrollEnd);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridApiEventHandler, getDataGridUtilityClass, useGridLogger, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { gridColumnReorderDragColSelector } from \"./columnReorderSelector.js\";\nconst CURSOR_MOVE_DIRECTION_LEFT = 'left';\nconst CURSOR_MOVE_DIRECTION_RIGHT = 'right';\nconst getCursorMoveDirectionX = (currentCoordinates, nextCoordinates) => {\n  return currentCoordinates.x <= nextCoordinates.x ? CURSOR_MOVE_DIRECTION_RIGHT : CURSOR_MOVE_DIRECTION_LEFT;\n};\nconst hasCursorPositionChanged = (currentCoordinates, nextCoordinates) => currentCoordinates.x !== nextCoordinates.x || currentCoordinates.y !== nextCoordinates.y;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    columnHeaderDragging: ['columnHeader--dragging']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const columnReorderStateInitializer = state => _extends({}, state, {\n  columnReorder: {\n    dragCol: ''\n  }\n});\n\n/**\n * @requires useGridColumns (method)\n */\nexport const useGridColumnReorder = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridColumnReorder');\n  const dragColNode = React.useRef(null);\n  const cursorPosition = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const originColumnIndex = React.useRef(null);\n  const forbiddenIndexes = React.useRef({});\n  const removeDnDStylesTimeout = React.useRef(undefined);\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(removeDnDStylesTimeout.current);\n    };\n  }, []);\n  const handleDragStart = React.useCallback((params, event) => {\n    if (props.disableColumnReorder || params.colDef.disableReorder) {\n      return;\n    }\n    logger.debug(`Start dragging col ${params.field}`);\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    dragColNode.current = event.currentTarget;\n    dragColNode.current.classList.add(classes.columnHeaderDragging);\n    if (event.dataTransfer) {\n      event.dataTransfer.effectAllowed = 'move';\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      columnReorder: _extends({}, state.columnReorder, {\n        dragCol: params.field\n      })\n    }));\n    apiRef.current.forceUpdate();\n    removeDnDStylesTimeout.current = setTimeout(() => {\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\n    });\n    originColumnIndex.current = apiRef.current.getColumnIndex(params.field, false);\n    const draggingColumnGroupPath = apiRef.current.getColumnGroupPath(params.field);\n    const columnIndex = originColumnIndex.current;\n    const allColumns = apiRef.current.getAllColumns();\n    const groupsLookup = apiRef.current.getAllGroupDetails();\n    const getGroupPathFromColumnIndex = colIndex => {\n      const field = allColumns[colIndex].field;\n      return apiRef.current.getColumnGroupPath(field);\n    };\n\n    // The limitingGroupId is the id of the group from which the dragged column should not escape\n    let limitingGroupId = null;\n    draggingColumnGroupPath.forEach(groupId => {\n      if (!groupsLookup[groupId]?.freeReordering) {\n        // Only consider group that are made of more than one column\n        if (columnIndex > 0 && getGroupPathFromColumnIndex(columnIndex - 1).includes(groupId)) {\n          limitingGroupId = groupId;\n        } else if (columnIndex + 1 < allColumns.length && getGroupPathFromColumnIndex(columnIndex + 1).includes(groupId)) {\n          limitingGroupId = groupId;\n        }\n      }\n    });\n    forbiddenIndexes.current = {};\n    for (let indexToForbid = 0; indexToForbid < allColumns.length; indexToForbid += 1) {\n      const leftIndex = indexToForbid <= columnIndex ? indexToForbid - 1 : indexToForbid;\n      const rightIndex = indexToForbid < columnIndex ? indexToForbid : indexToForbid + 1;\n      if (limitingGroupId !== null) {\n        // verify this indexToForbid will be linked to the limiting group. Otherwise forbid it\n        let allowIndex = false;\n        if (leftIndex >= 0 && getGroupPathFromColumnIndex(leftIndex).includes(limitingGroupId)) {\n          allowIndex = true;\n        } else if (rightIndex < allColumns.length && getGroupPathFromColumnIndex(rightIndex).includes(limitingGroupId)) {\n          allowIndex = true;\n        }\n        if (!allowIndex) {\n          forbiddenIndexes.current[indexToForbid] = true;\n        }\n      }\n\n      // Verify we are not splitting another group\n      if (leftIndex >= 0 && rightIndex < allColumns.length) {\n        getGroupPathFromColumnIndex(rightIndex).forEach(groupId => {\n          if (getGroupPathFromColumnIndex(leftIndex).includes(groupId)) {\n            if (!draggingColumnGroupPath.includes(groupId)) {\n              // moving here split the group groupId in two distincts chunks\n              if (!groupsLookup[groupId]?.freeReordering) {\n                forbiddenIndexes.current[indexToForbid] = true;\n              }\n            }\n          }\n        });\n      }\n    }\n  }, [props.disableColumnReorder, classes.columnHeaderDragging, logger, apiRef]);\n  const handleDragEnter = React.useCallback((params, event) => {\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n  }, []);\n  const handleDragOver = React.useCallback((params, event) => {\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\n    if (!dragColField) {\n      return;\n    }\n    logger.debug(`Dragging over col ${params.field}`);\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    const coordinates = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    if (params.field !== dragColField && hasCursorPositionChanged(cursorPosition.current, coordinates)) {\n      const targetColIndex = apiRef.current.getColumnIndex(params.field, false);\n      const targetColVisibleIndex = apiRef.current.getColumnIndex(params.field, true);\n      const targetCol = apiRef.current.getColumn(params.field);\n      const dragColIndex = apiRef.current.getColumnIndex(dragColField, false);\n      const visibleColumns = apiRef.current.getVisibleColumns();\n      const allColumns = apiRef.current.getAllColumns();\n      const cursorMoveDirectionX = getCursorMoveDirectionX(cursorPosition.current, coordinates);\n      const hasMovedLeft = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_LEFT && (isRtl ? dragColIndex < targetColIndex : targetColIndex < dragColIndex);\n      const hasMovedRight = cursorMoveDirectionX === CURSOR_MOVE_DIRECTION_RIGHT && (isRtl ? targetColIndex < dragColIndex : dragColIndex < targetColIndex);\n      if (hasMovedLeft || hasMovedRight) {\n        let canBeReordered;\n        let indexOffsetInHiddenColumns = 0;\n        if (!targetCol.disableReorder) {\n          canBeReordered = true;\n        } else if (hasMovedLeft) {\n          canBeReordered = targetColVisibleIndex > 0 && !visibleColumns[targetColVisibleIndex - 1].disableReorder;\n        } else {\n          canBeReordered = targetColVisibleIndex < visibleColumns.length - 1 && !visibleColumns[targetColVisibleIndex + 1].disableReorder;\n        }\n        if (forbiddenIndexes.current[targetColIndex]) {\n          let nextVisibleColumnField;\n          let indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n          if (hasMovedLeft) {\n            nextVisibleColumnField = targetColVisibleIndex > 0 ? visibleColumns[targetColVisibleIndex - 1].field : null;\n            while (indexWithOffset > 0 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\n              indexOffsetInHiddenColumns -= 1;\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n            }\n          } else {\n            nextVisibleColumnField = targetColVisibleIndex + 1 < visibleColumns.length ? visibleColumns[targetColVisibleIndex + 1].field : null;\n            while (indexWithOffset < allColumns.length - 1 && allColumns[indexWithOffset].field !== nextVisibleColumnField && forbiddenIndexes.current[indexWithOffset]) {\n              indexOffsetInHiddenColumns += 1;\n              indexWithOffset = targetColIndex + indexOffsetInHiddenColumns;\n            }\n          }\n          if (forbiddenIndexes.current[indexWithOffset] || allColumns[indexWithOffset].field === nextVisibleColumnField) {\n            // If we ended up on a visible column, or a forbidden one, we cannot do the reorder\n            canBeReordered = false;\n          }\n        }\n        const canBeReorderedProcessed = apiRef.current.unstable_applyPipeProcessors('canBeReordered', canBeReordered, {\n          targetIndex: targetColVisibleIndex\n        });\n        if (canBeReorderedProcessed) {\n          apiRef.current.setColumnIndex(dragColField, targetColIndex + indexOffsetInHiddenColumns);\n        }\n      }\n      cursorPosition.current = coordinates;\n    }\n  }, [apiRef, logger, isRtl]);\n  const handleDragEnd = React.useCallback((params, event) => {\n    const dragColField = gridColumnReorderDragColSelector(apiRef);\n    if (props.disableColumnReorder || !dragColField) {\n      return;\n    }\n    logger.debug('End dragging col');\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    clearTimeout(removeDnDStylesTimeout.current);\n\n    // For more information check here https://github.com/mui/mui-x/issues/14678\n    if (dragColNode.current.classList.contains(classes.columnHeaderDragging)) {\n      dragColNode.current.classList.remove(classes.columnHeaderDragging);\n    }\n    dragColNode.current = null;\n\n    // Check if the column was dropped outside the grid.\n    if (event.dataTransfer.dropEffect === 'none' && !props.keepColumnPositionIfDraggedOutside) {\n      // Accessing params.field may contain the wrong field as header elements are reused\n      apiRef.current.setColumnIndex(dragColField, originColumnIndex.current);\n      originColumnIndex.current = null;\n    } else {\n      // Emit the columnOrderChange event only once when the reordering stops.\n      const columnOrderChangeParams = {\n        column: apiRef.current.getColumn(dragColField),\n        targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(dragColField),\n        oldIndex: originColumnIndex.current\n      };\n      apiRef.current.publishEvent('columnOrderChange', columnOrderChangeParams);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      columnReorder: _extends({}, state.columnReorder, {\n        dragCol: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.disableColumnReorder, props.keepColumnPositionIfDraggedOutside, logger, classes.columnHeaderDragging]);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnter', handleDragEnter);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragOver', handleDragOver);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleDragEnd);\n  useGridApiEventHandler(apiRef, 'cellDragEnter', handleDragEnter);\n  useGridApiEventHandler(apiRef, 'cellDragOver', handleDragOver);\n  useGridApiOptionHandler(apiRef, 'columnOrderChange', props.onColumnOrderChange);\n};", "import * as React from 'react';\nimport { useGridApiEventHandler } from '@mui/x-data-grid';\nimport { GRID_TREE_DATA_GROUPING_FIELD } from \"./gridTreeDataGroupColDef.js\";\nexport const useGridTreeData = (apiRef, props) => {\n  /**\n   * EVENTS\n   */\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.colDef.field === GRID_TREE_DATA_GROUPING_FIELD && (event.key === ' ' || event.key === 'Enter') && !event.shiftKey) {\n      if (params.rowNode.type !== 'group') {\n        return;\n      }\n      if (props.unstable_dataSource && !params.rowNode.childrenExpanded) {\n        apiRef.current.unstable_dataSource.fetchRows(params.id);\n        return;\n      }\n      apiRef.current.setRowChildrenExpansion(params.id, !params.rowNode.childrenExpanded);\n    }\n  }, [apiRef, props.unstable_dataSource]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideDescendantCount\"];\nimport * as React from 'react';\nimport { gridRowTreeSelector, useFirstRender, GRID_CHECKBOX_SELECTION_FIELD } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor, useGridRegisterStrategyProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_TREE_DATA_GROUPING_COL_DEF, GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES } from \"./gridTreeDataGroupColDef.js\";\nimport { filterRowTreeFromTreeData, TreeDataStrategy } from \"./gridTreeDataUtils.js\";\nimport { GridTreeDataGroupingCell } from \"../../../components/index.js\";\nimport { createRowTree } from \"../../../utils/tree/createRowTree.js\";\nimport { sortRowTree } from \"../../../utils/tree/sortRowTree.js\";\nimport { updateRowTree } from \"../../../utils/tree/updateRowTree.js\";\nimport { getVisibleRowsLookup } from \"../../../utils/tree/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridTreeDataPreProcessors = (privateApiRef, props) => {\n  const setStrategyAvailability = React.useCallback(() => {\n    privateApiRef.current.setStrategyAvailability('rowTree', TreeDataStrategy.Default, props.treeData && !props.unstable_dataSource ? () => true : () => false);\n  }, [privateApiRef, props.treeData, props.unstable_dataSource]);\n  const getGroupingColDef = React.useCallback(() => {\n    const groupingColDefProp = props.groupingColDef;\n    let colDefOverride;\n    if (typeof groupingColDefProp === 'function') {\n      const params = {\n        groupingName: TreeDataStrategy.Default,\n        fields: []\n      };\n      colDefOverride = groupingColDefProp(params);\n    } else {\n      colDefOverride = groupingColDefProp;\n    }\n    const _ref = colDefOverride ?? {},\n      {\n        hideDescendantCount\n      } = _ref,\n      colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const commonProperties = _extends({}, GRID_TREE_DATA_GROUPING_COL_DEF, {\n      renderCell: params => /*#__PURE__*/_jsx(GridTreeDataGroupingCell, _extends({}, params, {\n        hideDescendantCount: hideDescendantCount\n      })),\n      headerName: privateApiRef.current.getLocaleText('treeDataGroupingHeaderName')\n    });\n    return _extends({}, commonProperties, colDefOverrideProperties, GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES);\n  }, [privateApiRef, props.groupingColDef]);\n  const updateGroupingColumn = React.useCallback(columnsState => {\n    if (props.unstable_dataSource) {\n      return columnsState;\n    }\n    const groupingColDefField = GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES.field;\n    const shouldHaveGroupingColumn = props.treeData;\n    const prevGroupingColumn = columnsState.lookup[groupingColDefField];\n    if (shouldHaveGroupingColumn) {\n      const newGroupingColumn = getGroupingColDef();\n      if (prevGroupingColumn) {\n        newGroupingColumn.width = prevGroupingColumn.width;\n        newGroupingColumn.flex = prevGroupingColumn.flex;\n      }\n      columnsState.lookup[groupingColDefField] = newGroupingColumn;\n      if (prevGroupingColumn == null) {\n        const index = columnsState.orderedFields[0] === GRID_CHECKBOX_SELECTION_FIELD ? 1 : 0;\n        columnsState.orderedFields = [...columnsState.orderedFields.slice(0, index), groupingColDefField, ...columnsState.orderedFields.slice(index)];\n      }\n    } else if (!shouldHaveGroupingColumn && prevGroupingColumn) {\n      delete columnsState.lookup[groupingColDefField];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== groupingColDefField);\n    }\n    return columnsState;\n  }, [props.treeData, props.unstable_dataSource, getGroupingColDef]);\n  const createRowTreeForTreeData = React.useCallback(params => {\n    if (!props.getTreeDataPath) {\n      throw new Error('MUI X: No getTreeDataPath given.');\n    }\n    const getRowTreeBuilderNode = rowId => ({\n      id: rowId,\n      path: props.getTreeDataPath(params.dataRowIdToModelLookup[rowId]).map(key => ({\n        key,\n        field: null\n      }))\n    });\n    const onDuplicatePath = (firstId, secondId, path) => {\n      throw new Error(['MUI X: The path returned by `getTreeDataPath` should be unique.', `The rows with id #${firstId} and #${secondId} have the same.`, `Path: ${JSON.stringify(path.map(step => step.key))}.`].join('\\n'));\n    };\n    if (params.updates.type === 'full') {\n      return createRowTree({\n        previousTree: params.previousTree,\n        nodes: params.updates.rows.map(getRowTreeBuilderNode),\n        defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n        isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n        groupingName: TreeDataStrategy.Default,\n        onDuplicatePath\n      });\n    }\n    return updateRowTree({\n      nodes: {\n        inserted: params.updates.actions.insert.map(getRowTreeBuilderNode),\n        modified: params.updates.actions.modify.map(getRowTreeBuilderNode),\n        removed: params.updates.actions.remove\n      },\n      previousTree: params.previousTree,\n      previousTreeDepth: params.previousTreeDepths,\n      defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n      isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n      groupingName: TreeDataStrategy.Default\n    });\n  }, [props.getTreeDataPath, props.defaultGroupingExpansionDepth, props.isGroupExpandedByDefault]);\n  const filterRows = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(privateApiRef);\n    return filterRowTreeFromTreeData({\n      rowTree,\n      isRowMatchingFilters: params.isRowMatchingFilters,\n      disableChildrenFiltering: props.disableChildrenFiltering,\n      filterModel: params.filterModel,\n      apiRef: privateApiRef\n    });\n  }, [privateApiRef, props.disableChildrenFiltering]);\n  const sortRows = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(privateApiRef);\n    return sortRowTree({\n      rowTree,\n      sortRowList: params.sortRowList,\n      disableChildrenSorting: props.disableChildrenSorting,\n      shouldRenderGroupBelowLeaves: false\n    });\n  }, [privateApiRef, props.disableChildrenSorting]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateGroupingColumn);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.Default, 'rowTreeCreation', createRowTreeForTreeData);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.Default, 'filtering', filterRows);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.Default, 'sorting', sortRows);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.Default, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    setStrategyAvailability();\n  });\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (!isFirstRender.current) {\n      setStrategyAvailability();\n    } else {\n      isFirstRender.current = false;\n    }\n  }, [setStrategyAvailability]);\n};", "import { passFilterLogic } from '@mui/x-data-grid/internals';\nexport let TreeDataStrategy = /*#__PURE__*/function (TreeDataStrategy) {\n  TreeDataStrategy[\"Default\"] = \"tree-data\";\n  TreeDataStrategy[\"DataSource\"] = \"tree-data-source\";\n  return TreeDataStrategy;\n}({});\n\n/**\n * A node is visible if one of the following criteria is met:\n * - One of its children is passing the filter\n * - It is passing the filter\n */\nexport const filterRowTreeFromTreeData = params => {\n  const {\n    apiRef,\n    rowTree,\n    disableChildrenFiltering,\n    isRowMatchingFilters\n  } = params;\n  const filteredRowsLookup = {};\n  const filteredChildrenCountLookup = {};\n  const filteredDescendantCountLookup = {};\n  const filterCache = {};\n  const filterResults = {\n    passingFilterItems: null,\n    passingQuickFilterValues: null\n  };\n  const filterTreeNode = (node, isParentMatchingFilters, areAncestorsExpanded) => {\n    const shouldSkipFilters = disableChildrenFiltering && node.depth > 0;\n    let isMatchingFilters;\n    if (shouldSkipFilters) {\n      isMatchingFilters = null;\n    } else if (!isRowMatchingFilters || node.type === 'footer') {\n      isMatchingFilters = true;\n    } else {\n      const row = apiRef.current.getRow(node.id);\n      isRowMatchingFilters(row, undefined, filterResults);\n      isMatchingFilters = passFilterLogic([filterResults.passingFilterItems], [filterResults.passingQuickFilterValues], params.filterModel, params.apiRef, filterCache);\n    }\n    let filteredChildrenCount = 0;\n    let filteredDescendantCount = 0;\n    if (node.type === 'group') {\n      node.children.forEach(childId => {\n        const childNode = rowTree[childId];\n        const childSubTreeSize = filterTreeNode(childNode, isMatchingFilters ?? isParentMatchingFilters, areAncestorsExpanded && !!node.childrenExpanded);\n        filteredDescendantCount += childSubTreeSize;\n        if (childSubTreeSize > 0) {\n          filteredChildrenCount += 1;\n        }\n      });\n    }\n    let shouldPassFilters;\n    switch (isMatchingFilters) {\n      case true:\n        {\n          shouldPassFilters = true;\n          break;\n        }\n      case false:\n        {\n          shouldPassFilters = filteredDescendantCount > 0;\n          break;\n        }\n      default:\n        {\n          shouldPassFilters = isParentMatchingFilters;\n          break;\n        }\n    }\n    filteredRowsLookup[node.id] = shouldPassFilters;\n    if (!shouldPassFilters) {\n      return 0;\n    }\n    filteredChildrenCountLookup[node.id] = filteredChildrenCount;\n    filteredDescendantCountLookup[node.id] = filteredDescendantCount;\n    if (node.type === 'footer') {\n      return filteredDescendantCount;\n    }\n    return filteredDescendantCount + 1;\n  };\n  const nodes = Object.values(rowTree);\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.depth === 0) {\n      filterTreeNode(node, true, true);\n    }\n  }\n  return {\n    filteredRowsLookup,\n    filteredChildrenCountLookup,\n    filteredDescendantCountLookup\n  };\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { updateGroupDefaultExpansion, checkGroupChildrenExpansion, getGroupRowIdFromPath, insertNodeInTree, updateGroupNodeIdAndAutoGenerated } from \"./utils.js\";\n/**\n * Inserts a data row in a tree.\n * For each steps of its path:\n * - if a node exists with the same partial path, it will register this node as the ancestor of the data row.\n * - if not, it will create an auto-generated node and register it as ancestor of the data row.\n */\nexport const insertDataRowInTree = ({\n  id,\n  path,\n  updatedGroupsManager,\n  previousTree,\n  tree,\n  treeDepths,\n  onDuplicatePath,\n  isGroupExpandedByDefault,\n  defaultGroupingExpansionDepth,\n  serverChildrenCount,\n  groupsToFetch\n}) => {\n  let parentNodeId = GRID_ROOT_GROUP_ID;\n  for (let depth = 0; depth < path.length; depth += 1) {\n    const {\n      key,\n      field\n    } = path[depth];\n    const fieldWithDefaultValue = field ?? '__no_field__';\n    const keyWithDefaultValue = key ?? '__no_key__';\n    const existingNodeIdWithPartialPath = tree[parentNodeId].childrenFromPath?.[fieldWithDefaultValue]?.[keyWithDefaultValue.toString()];\n\n    // When we reach the last step of the path,\n    // We need to create a node for the row passed to `insertNodeInTree`\n    if (depth === path.length - 1) {\n      // If no node matches the full path,\n      // We create a leaf node for the data row.\n      if (existingNodeIdWithPartialPath == null) {\n        let node;\n        if (serverChildrenCount !== undefined && serverChildrenCount !== 0) {\n          node = {\n            type: 'group',\n            id,\n            parent: parentNodeId,\n            path: path.map(step => step.key),\n            depth,\n            isAutoGenerated: false,\n            groupingKey: key,\n            groupingField: field,\n            children: [],\n            childrenFromPath: {},\n            childrenExpanded: false,\n            serverChildrenCount\n          };\n          const shouldFetchChildren = checkGroupChildrenExpansion(node, defaultGroupingExpansionDepth, isGroupExpandedByDefault);\n          if (shouldFetchChildren) {\n            groupsToFetch?.add(id);\n          }\n        } else {\n          node = {\n            type: 'leaf',\n            id,\n            depth,\n            parent: parentNodeId,\n            groupingKey: key\n          };\n        }\n        updatedGroupsManager?.addAction(parentNodeId, 'insertChildren');\n        insertNodeInTree(node, tree, treeDepths, previousTree);\n      } else {\n        const existingNodeWithPartialPath = tree[existingNodeIdWithPartialPath];\n\n        // If we already have an auto-generated group matching the partial path,\n        // We replace it with the node from of data row passed to `insertNodeInTree`\n        if (existingNodeWithPartialPath.type === 'group' && existingNodeWithPartialPath.isAutoGenerated) {\n          updatedGroupsManager?.addAction(parentNodeId, 'removeChildren');\n          updatedGroupsManager?.addAction(parentNodeId, 'insertChildren');\n          updateGroupNodeIdAndAutoGenerated({\n            tree,\n            previousTree,\n            treeDepths,\n            node: existingNodeWithPartialPath,\n            updatedNode: {\n              id,\n              isAutoGenerated: false\n            }\n          });\n        } else {\n          // If we have another row matching the partial path, then there is a duplicate in the dataset.\n          // We warn the user and skip the current row.\n          onDuplicatePath?.(existingNodeIdWithPartialPath, id, path);\n        }\n      }\n    }\n    // For the intermediary steps of the path,\n    // We need to make sure that there is a node matching the partial path.\n    //\n    // If no node matches the partial path,\n    // We create an auto-generated group node.\n    else if (existingNodeIdWithPartialPath == null) {\n      const nodeId = getGroupRowIdFromPath(path.slice(0, depth + 1));\n      const autoGeneratedGroupNode = {\n        type: 'group',\n        id: nodeId,\n        parent: parentNodeId,\n        depth,\n        isAutoGenerated: true,\n        groupingKey: key,\n        groupingField: field,\n        children: [],\n        childrenFromPath: {},\n        childrenExpanded: false\n      };\n      updatedGroupsManager?.addAction(parentNodeId, 'insertChildren');\n      insertNodeInTree(updateGroupDefaultExpansion(autoGeneratedGroupNode, defaultGroupingExpansionDepth, isGroupExpandedByDefault), tree, treeDepths, previousTree);\n      parentNodeId = nodeId;\n    }\n    // For the intermediary steps of the path\n    // If a node matches the partial path, we use it as parent for the next step\n    else {\n      const currentGroupNode = tree[existingNodeIdWithPartialPath];\n\n      // If the node matching the partial path is not a group, we turn it into a group\n      if (currentGroupNode.type !== 'group') {\n        const groupNode = {\n          type: 'group',\n          id: currentGroupNode.id,\n          parent: currentGroupNode.parent,\n          depth: currentGroupNode.depth,\n          isAutoGenerated: false,\n          groupingKey: key,\n          groupingField: field,\n          children: [],\n          childrenFromPath: {},\n          childrenExpanded: false\n        };\n        tree[existingNodeIdWithPartialPath] = updateGroupDefaultExpansion(groupNode, defaultGroupingExpansionDepth, isGroupExpandedByDefault);\n      }\n      parentNodeId = currentGroupNode.id;\n    }\n  }\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { buildRootGroup } from '@mui/x-data-grid/internals';\nimport { insertDataRowInTree } from \"./insertDataRowInTree.js\";\n/**\n * Transform a list of rows into a tree structure where each row references its parent and children.\n */\nexport const createRowTree = params => {\n  const dataRowIds = [];\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: buildRootGroup()\n  };\n  const treeDepths = {};\n  const groupsToFetch = new Set();\n  for (let i = 0; i < params.nodes.length; i += 1) {\n    const node = params.nodes[i];\n    dataRowIds.push(node.id);\n    insertDataRowInTree({\n      tree,\n      previousTree: params.previousTree,\n      id: node.id,\n      path: node.path,\n      serverChildrenCount: node.serverChildrenCount,\n      onDuplicatePath: params.onDuplicatePath,\n      treeDepths,\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth,\n      groupsToFetch\n    });\n  }\n  return {\n    tree,\n    treeDepths,\n    groupingName: params.groupingName,\n    dataRowIds,\n    groupsToFetch: Array.from(groupsToFetch)\n  };\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\n// Single-linked list node\nclass Node {\n  constructor(data, next) {\n    this.next = void 0;\n    this.data = void 0;\n    this.next = next;\n    this.data = data;\n  }\n  insertAfter(list) {\n    if (!list.first || !list.last) {\n      return;\n    }\n    const next = this.next;\n    this.next = list.first;\n    list.last.next = next;\n  }\n}\n\n// Single-linked list container\nclass List {\n  constructor(first, last) {\n    this.first = void 0;\n    this.last = void 0;\n    this.first = first;\n    this.last = last;\n  }\n  data() {\n    const array = [];\n    this.forEach(node => {\n      array.push(node.data);\n    });\n    return array;\n  }\n  forEach(fn) {\n    let current = this.first;\n    while (current !== null) {\n      fn(current);\n      current = current.next;\n    }\n  }\n  static from(array) {\n    if (array.length === 0) {\n      return new List(null, null);\n    }\n    let index = 0;\n    const first = new Node(array[index], null);\n    let current = first;\n    while (index + 1 < array.length) {\n      index += 1;\n      const node = new Node(array[index], null);\n      current.next = node;\n      current = node;\n    }\n    return new List(first, current);\n  }\n}\nexport const sortRowTree = params => {\n  const {\n    rowTree,\n    disableChildrenSorting,\n    sortRowList,\n    shouldRenderGroupBelowLeaves\n  } = params;\n  const sortedGroupedByParentRows = new Map();\n  const sortGroup = node => {\n    const shouldSortGroup = !!sortRowList && (!disableChildrenSorting || node.depth === -1);\n    let sortedRowIds;\n    if (shouldSortGroup) {\n      for (let i = 0; i < node.children.length; i += 1) {\n        const childNode = rowTree[node.children[i]];\n        if (childNode.type === 'group') {\n          sortGroup(childNode);\n        }\n      }\n      sortedRowIds = sortRowList(node.children.map(childId => rowTree[childId]));\n    } else if (shouldRenderGroupBelowLeaves) {\n      const childrenLeaves = [];\n      const childrenGroups = [];\n      for (let i = 0; i < node.children.length; i += 1) {\n        const childId = node.children[i];\n        const childNode = rowTree[childId];\n        if (childNode.type === 'group') {\n          sortGroup(childNode);\n          childrenGroups.push(childId);\n        } else if (childNode.type === 'leaf') {\n          childrenLeaves.push(childId);\n        }\n      }\n      sortedRowIds = [...childrenLeaves, ...childrenGroups];\n    } else {\n      for (let i = 0; i < node.children.length; i += 1) {\n        const childNode = rowTree[node.children[i]];\n        if (childNode.type === 'group') {\n          sortGroup(childNode);\n        }\n      }\n      sortedRowIds = [...node.children];\n    }\n    if (node.footerId != null) {\n      sortedRowIds.push(node.footerId);\n    }\n    sortedGroupedByParentRows.set(node.id, sortedRowIds);\n  };\n  sortGroup(rowTree[GRID_ROOT_GROUP_ID]);\n  const rootList = List.from(sortedGroupedByParentRows.get(GRID_ROOT_GROUP_ID));\n  rootList.forEach(node => {\n    const children = sortedGroupedByParentRows.get(node.data);\n    if (children?.length) {\n      node.insertAfter(List.from(children));\n    }\n  });\n  return rootList.data();\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { getNodePathInTree, getGroupRowIdFromPath, removeNodeFromTree, updateGroupNodeIdAndAutoGenerated } from \"./utils.js\";\nconst removeNodeAndCleanParent = ({\n  node,\n  tree,\n  treeDepths,\n  updatedGroupsManager\n}) => {\n  removeNodeFromTree({\n    node,\n    tree,\n    treeDepths\n  });\n  if (node.type === 'group' && node.footerId != null) {\n    removeNodeFromTree({\n      node: tree[node.footerId],\n      tree,\n      treeDepths\n    });\n  }\n  const parentNode = tree[node.parent];\n  updatedGroupsManager?.addAction(parentNode.id, 'removeChildren');\n  const shouldDeleteGroup = parentNode.id !== GRID_ROOT_GROUP_ID && parentNode.children.length === 0;\n  if (shouldDeleteGroup) {\n    if (parentNode.isAutoGenerated) {\n      removeNodeAndCleanParent({\n        node: parentNode,\n        tree,\n        treeDepths\n      });\n    } else {\n      tree[parentNode.id] = {\n        type: 'leaf',\n        id: parentNode.id,\n        depth: parentNode.depth,\n        parent: parentNode.parent,\n        groupingKey: parentNode.groupingKey\n      };\n    }\n  }\n};\nconst replaceDataGroupWithAutoGeneratedGroup = ({\n  node,\n  tree,\n  treeDepths,\n  updatedGroupsManager\n}) => {\n  updatedGroupsManager?.addAction(node.parent, 'removeChildren');\n  updatedGroupsManager?.addAction(node.parent, 'insertChildren');\n  updateGroupNodeIdAndAutoGenerated({\n    previousTree: null,\n    tree,\n    treeDepths,\n    node,\n    updatedNode: {\n      id: getGroupRowIdFromPath(getNodePathInTree({\n        id: node.id,\n        tree\n      })),\n      isAutoGenerated: true\n    }\n  });\n};\n\n/**\n * Removed a data row from the tree.\n * If the node is a non-empty group, replace it with an auto-generated group to be able to keep displaying its children.\n * If not, remove it and recursively clean its parent with the following rules:\n * - An empty auto-generated should be removed from the tree\n * - An empty non-auto-generated should be turned into a leaf\n */\nexport const removeDataRowFromTree = ({\n  id,\n  tree,\n  treeDepths,\n  updatedGroupsManager\n}) => {\n  const node = tree[id];\n  if (node.type === 'group' && node.children.length > 0) {\n    replaceDataGroupWithAutoGeneratedGroup({\n      node,\n      tree,\n      treeDepths,\n      updatedGroupsManager\n    });\n  } else {\n    removeNodeAndCleanParent({\n      node,\n      tree,\n      treeDepths,\n      updatedGroupsManager\n    });\n  }\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { isDeepEqual, getTreeNodeDescendants } from '@mui/x-data-grid/internals';\nimport { insertDataRowInTree } from \"./insertDataRowInTree.js\";\nimport { removeDataRowFromTree } from \"./removeDataRowFromTree.js\";\nimport { createUpdatedGroupsManager, getNodePathInTree } from \"./utils.js\";\nexport const updateRowTree = params => {\n  const tree = _extends({}, params.previousTree);\n  const treeDepths = _extends({}, params.previousTreeDepth);\n  const updatedGroupsManager = createUpdatedGroupsManager();\n  const groupsToFetch = params.previousGroupsToFetch ? new Set([...params.previousGroupsToFetch]) : new Set([]);\n  for (let i = 0; i < params.nodes.inserted.length; i += 1) {\n    const {\n      id,\n      path,\n      serverChildrenCount\n    } = params.nodes.inserted[i];\n    insertDataRowInTree({\n      previousTree: params.previousTree,\n      tree,\n      treeDepths,\n      updatedGroupsManager,\n      id,\n      path,\n      serverChildrenCount,\n      onDuplicatePath: params.onDuplicatePath,\n      isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n      defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth,\n      groupsToFetch\n    });\n  }\n  for (let i = 0; i < params.nodes.removed.length; i += 1) {\n    const nodeId = params.nodes.removed[i];\n    removeDataRowFromTree({\n      tree,\n      treeDepths,\n      updatedGroupsManager,\n      id: nodeId\n    });\n  }\n  for (let i = 0; i < params.nodes.modified.length; i += 1) {\n    const {\n      id,\n      path,\n      serverChildrenCount\n    } = params.nodes.modified[i];\n    const pathInPreviousTree = getNodePathInTree({\n      tree,\n      id\n    });\n    const isInSameGroup = isDeepEqual(pathInPreviousTree, path);\n    if (!isInSameGroup) {\n      removeDataRowFromTree({\n        tree,\n        treeDepths,\n        updatedGroupsManager,\n        id\n      });\n      insertDataRowInTree({\n        previousTree: params.previousTree,\n        tree,\n        treeDepths,\n        updatedGroupsManager,\n        id,\n        path,\n        serverChildrenCount,\n        onDuplicatePath: params.onDuplicatePath,\n        isGroupExpandedByDefault: params.isGroupExpandedByDefault,\n        defaultGroupingExpansionDepth: params.defaultGroupingExpansionDepth,\n        groupsToFetch\n      });\n    } else {\n      updatedGroupsManager?.addAction(tree[id].parent, 'modifyChildren');\n    }\n  }\n\n  // TODO rows v6: Avoid walking the whole tree, we should be able to generate the new list only using slices.\n  const dataRowIds = getTreeNodeDescendants(tree, GRID_ROOT_GROUP_ID, true);\n  return {\n    tree,\n    treeDepths,\n    groupingName: params.groupingName,\n    dataRowIds,\n    updatedGroupsManager,\n    groupsToFetch: Array.from(groupsToFetch)\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideDescendantCount\"];\nimport * as React from 'react';\nimport { gridRowTreeSelector, useFirstRender, GRID_CHECKBOX_SELECTION_FIELD } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor, useGridRegisterStrategyProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_TREE_DATA_GROUPING_COL_DEF, GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES } from \"../treeData/gridTreeDataGroupColDef.js\";\nimport { skipFiltering, skipSorting } from \"./utils.js\";\nimport { GridDataSourceTreeDataGroupingCell } from \"../../../components/GridDataSourceTreeDataGroupingCell.js\";\nimport { createRowTree } from \"../../../utils/tree/createRowTree.js\";\nimport { updateRowTree } from \"../../../utils/tree/updateRowTree.js\";\nimport { getVisibleRowsLookup } from \"../../../utils/tree/utils.js\";\nimport { TreeDataStrategy } from \"../treeData/gridTreeDataUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useGridDataSourceTreeDataPreProcessors = (privateApiRef, props) => {\n  const setStrategyAvailability = React.useCallback(() => {\n    privateApiRef.current.setStrategyAvailability('rowTree', TreeDataStrategy.DataSource, props.treeData && props.unstable_dataSource ? () => true : () => false);\n  }, [privateApiRef, props.treeData, props.unstable_dataSource]);\n  const getGroupingColDef = React.useCallback(() => {\n    const groupingColDefProp = props.groupingColDef;\n    let colDefOverride;\n    if (typeof groupingColDefProp === 'function') {\n      const params = {\n        groupingName: TreeDataStrategy.DataSource,\n        fields: []\n      };\n      colDefOverride = groupingColDefProp(params);\n    } else {\n      colDefOverride = groupingColDefProp;\n    }\n    const _ref = colDefOverride ?? {},\n      {\n        hideDescendantCount\n      } = _ref,\n      colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const commonProperties = _extends({}, GRID_TREE_DATA_GROUPING_COL_DEF, {\n      renderCell: params => /*#__PURE__*/_jsx(GridDataSourceTreeDataGroupingCell, _extends({}, params, {\n        hideDescendantCount: hideDescendantCount\n      })),\n      headerName: privateApiRef.current.getLocaleText('treeDataGroupingHeaderName')\n    });\n    return _extends({}, commonProperties, colDefOverrideProperties, GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES);\n  }, [privateApiRef, props.groupingColDef]);\n  const updateGroupingColumn = React.useCallback(columnsState => {\n    if (!props.unstable_dataSource) {\n      return columnsState;\n    }\n    const groupingColDefField = GRID_TREE_DATA_GROUPING_COL_DEF_FORCED_PROPERTIES.field;\n    const shouldHaveGroupingColumn = props.treeData;\n    const prevGroupingColumn = columnsState.lookup[groupingColDefField];\n    if (shouldHaveGroupingColumn) {\n      const newGroupingColumn = getGroupingColDef();\n      if (prevGroupingColumn) {\n        newGroupingColumn.width = prevGroupingColumn.width;\n        newGroupingColumn.flex = prevGroupingColumn.flex;\n      }\n      columnsState.lookup[groupingColDefField] = newGroupingColumn;\n      if (prevGroupingColumn == null) {\n        const index = columnsState.orderedFields[0] === GRID_CHECKBOX_SELECTION_FIELD ? 1 : 0;\n        columnsState.orderedFields = [...columnsState.orderedFields.slice(0, index), groupingColDefField, ...columnsState.orderedFields.slice(index)];\n      }\n    } else if (!shouldHaveGroupingColumn && prevGroupingColumn) {\n      delete columnsState.lookup[groupingColDefField];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== groupingColDefField);\n    }\n    return columnsState;\n  }, [props.treeData, props.unstable_dataSource, getGroupingColDef]);\n  const createRowTreeForTreeData = React.useCallback(params => {\n    const getGroupKey = props.unstable_dataSource?.getGroupKey;\n    if (!getGroupKey) {\n      throw new Error('MUI X: No `getGroupKey` method provided with the dataSource.');\n    }\n    const getChildrenCount = props.unstable_dataSource?.getChildrenCount;\n    if (!getChildrenCount) {\n      throw new Error('MUI X: No `getChildrenCount` method provided with the dataSource.');\n    }\n    const parentPath = params.updates.groupKeys ?? [];\n    const getRowTreeBuilderNode = rowId => {\n      const count = getChildrenCount(params.dataRowIdToModelLookup[rowId]);\n      return {\n        id: rowId,\n        path: [...parentPath, getGroupKey(params.dataRowIdToModelLookup[rowId])].map(key => ({\n          key,\n          field: null\n        })),\n        serverChildrenCount: count\n      };\n    };\n    const onDuplicatePath = (firstId, secondId, path) => {\n      throw new Error(['MUI X: The values returned by `getGroupKey` for all the sibling rows should be unique.', `The rows with id #${firstId} and #${secondId} have the same.`, `Path: ${JSON.stringify(path.map(step => step.key))}.`].join('\\n'));\n    };\n    if (params.updates.type === 'full') {\n      return createRowTree({\n        previousTree: params.previousTree,\n        nodes: params.updates.rows.map(getRowTreeBuilderNode),\n        defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n        isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n        groupingName: TreeDataStrategy.DataSource,\n        onDuplicatePath\n      });\n    }\n    return updateRowTree({\n      nodes: {\n        inserted: params.updates.actions.insert.map(getRowTreeBuilderNode),\n        modified: params.updates.actions.modify.map(getRowTreeBuilderNode),\n        removed: params.updates.actions.remove\n      },\n      previousTree: params.previousTree,\n      previousGroupsToFetch: params.previousGroupsToFetch,\n      previousTreeDepth: params.previousTreeDepths,\n      defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n      isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n      groupingName: TreeDataStrategy.DataSource\n    });\n  }, [props.unstable_dataSource, props.defaultGroupingExpansionDepth, props.isGroupExpandedByDefault]);\n  const filterRows = React.useCallback(() => {\n    const rowTree = gridRowTreeSelector(privateApiRef);\n    return skipFiltering(rowTree);\n  }, [privateApiRef]);\n  const sortRows = React.useCallback(() => {\n    const rowTree = gridRowTreeSelector(privateApiRef);\n    return skipSorting(rowTree);\n  }, [privateApiRef]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateGroupingColumn);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.DataSource, 'rowTreeCreation', createRowTreeForTreeData);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.DataSource, 'filtering', filterRows);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.DataSource, 'sorting', sortRows);\n  useGridRegisterStrategyProcessor(privateApiRef, TreeDataStrategy.DataSource, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    setStrategyAvailability();\n  });\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (!isFirstRender.current) {\n      setStrategyAvailability();\n    } else {\n      isFirstRender.current = false;\n    }\n  }, [setStrategyAvailability]);\n};", "import { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { defaultGridFilterLookup, getTreeNodeDescendants } from '@mui/x-data-grid/internals';\nexport function skipFiltering(rowTree) {\n  const filteredRowsLookup = {};\n  const filteredChildrenCountLookup = {};\n  const nodes = Object.values(rowTree);\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    filteredRowsLookup[node.id] = true;\n    filteredChildrenCountLookup[node.id] = node.serverChildrenCount ?? 0;\n  }\n  return {\n    filteredRowsLookup,\n    filteredChildrenCountLookup,\n    filteredDescendantCountLookup: defaultGridFilterLookup.filteredDescendantCountLookup\n  };\n}\nexport function skipSorting(rowTree) {\n  return getTreeNodeDescendants(rowTree, GRID_ROOT_GROUP_ID, false);\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Box from '@mui/material/Box';\nimport { getDataGridUtilityClass, useGridSelector } from '@mui/x-data-grid';\nimport { useGridSelectorV8 } from '@mui/x-data-grid/internals';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDataSourceErrorSelector, gridDataSourceLoadingIdSelector } from \"../hooks/features/dataSource/gridDataSourceSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['treeDataGroupingCell'],\n    toggle: ['treeDataGroupingCellToggle'],\n    loadingContainer: ['treeDataGroupingCellLoadingContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridTreeDataGroupingCellIcon(props) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const {\n    rowNode,\n    id,\n    field,\n    descendantCount\n  } = props;\n  const isDataLoading = useGridSelectorV8(apiRef, gridDataSourceLoadingIdSelector, id);\n  const error = useGridSelectorV8(apiRef, gridDataSourceErrorSelector, id);\n  const handleClick = event => {\n    if (!rowNode.childrenExpanded) {\n      // always fetch/get from cache the children when the node is expanded\n      apiRef.current.unstable_dataSource.fetchRows(id);\n    } else {\n      apiRef.current.setRowChildrenExpansion(id, !rowNode.childrenExpanded);\n    }\n    apiRef.current.setCellFocus(id, field);\n    event.stopPropagation(); // TODO remove event.stopPropagation\n  };\n  const Icon = rowNode.childrenExpanded ? rootProps.slots.treeDataCollapseIcon : rootProps.slots.treeDataExpandIcon;\n  if (isDataLoading) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: classes.loadingContainer,\n      children: /*#__PURE__*/_jsx(CircularProgress, {\n        size: \"1rem\",\n        color: \"inherit\"\n      })\n    });\n  }\n  return descendantCount > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    size: \"small\",\n    onClick: handleClick,\n    tabIndex: -1,\n    \"aria-label\": rowNode.childrenExpanded ? apiRef.current.getLocaleText('treeDataCollapse') : apiRef.current.getLocaleText('treeDataExpand')\n  }, rootProps?.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, {\n      title: error?.message ?? null,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        variant: \"dot\",\n        color: \"error\",\n        invisible: !error,\n        children: /*#__PURE__*/_jsx(Icon, {\n          fontSize: \"inherit\"\n        })\n      })\n    })\n  })) : null;\n}\nexport function GridDataSourceTreeDataGroupingCell(props) {\n  const {\n    id,\n    field,\n    formattedValue,\n    rowNode,\n    hideDescendantCount,\n    offsetMultiplier = 2\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridPrivateApiContext();\n  const rowSelector = state => state.rows.dataRowIdToModelLookup[id];\n  const row = useGridSelector(apiRef, rowSelector);\n  const classes = useUtilityClasses(rootProps);\n  let descendantCount = 0;\n  if (row) {\n    descendantCount = Math.max(rootProps.unstable_dataSource?.getChildrenCount?.(row) ?? 0, 0);\n  }\n  return /*#__PURE__*/_jsxs(Box, {\n    className: classes.root,\n    sx: {\n      ml: rowNode.depth * offsetMultiplier\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.toggle,\n      children: /*#__PURE__*/_jsx(GridTreeDataGroupingCellIcon, {\n        id: id,\n        field: field,\n        rowNode: rowNode,\n        row: row,\n        descendantCount: descendantCount\n      })\n    }), /*#__PURE__*/_jsxs(\"span\", {\n      children: [formattedValue === undefined ? rowNode.groupingKey : formattedValue, !hideDescendantCount && descendantCount > 0 ? ` (${descendantCount})` : '']\n    })]\n  });\n}", "import { useGridPrivateApiContext as useCommunityGridPrivateApiContext } from '@mui/x-data-grid/internals';\nexport const useGridPrivateApiContext = useCommunityGridPrivateApiContext;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridFilterModelSelector, gridSortModelSelector, gridPaginationModelSelector } from '@mui/x-data-grid';\nimport { createSelector, createSelectorV8 } from '@mui/x-data-grid/internals';\nconst computeStartEnd = paginationModel => {\n  const start = paginationModel.page * paginationModel.pageSize;\n  const end = start + paginationModel.pageSize - 1;\n  return {\n    start,\n    end\n  };\n};\nexport const gridGetRowsParamsSelector = createSelector(gridFilterModelSelector, gridSortModelSelector, gridPaginationModelSelector, (filterModel, sortModel, paginationModel) => {\n  return _extends({\n    groupKeys: [],\n    paginationModel,\n    sortModel,\n    filterModel\n  }, computeStartEnd(paginationModel));\n});\nexport const gridDataSourceStateSelector = state => state.dataSource;\nexport const gridDataSourceLoadingSelector = createSelector(gridDataSourceStateSelector, dataSource => dataSource.loading);\nexport const gridDataSourceLoadingIdSelector = createSelectorV8(gridDataSourceStateSelector, (dataSource, id) => dataSource.loading[id] ?? false);\nexport const gridDataSourceErrorsSelector = createSelector(gridDataSourceStateSelector, dataSource => dataSource.errors);\nexport const gridDataSourceErrorSelector = createSelectorV8(gridDataSourceStateSelector, (dataSource, id) => dataSource.errors[id]);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridSelector, gridVisibleColumnDefinitionsSelector, gridColumnsTotalWidthSelector, gridColumnPositionsSelector, useGridApiMethod, useGridApiEventHandler, GridPinnedColumnPosition, gridColumnFieldsSelector } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor, gridPinnedColumnsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '@mui/x-data-grid/internals';\nexport const columnPinningStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.columnPinning = {\n    orderedFieldsBeforePinningColumns: null\n  };\n  let model;\n  if (props.pinnedColumns) {\n    model = props.pinnedColumns;\n  } else if (props.initialState?.pinnedColumns) {\n    model = props.initialState.pinnedColumns;\n  } else {\n    model = {};\n  }\n  return _extends({}, state, {\n    pinnedColumns: model\n  });\n};\nexport const useGridColumnPinning = (apiRef, props) => {\n  const pinnedColumns = useGridSelector(apiRef, gridPinnedColumnsSelector);\n\n  /**\n   * PRE-PROCESSING\n   */\n  const calculateScrollLeft = React.useCallback((initialValue, params) => {\n    const visiblePinnedColumns = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\n    if (!params.colIndex || visiblePinnedColumns.left.length === 0 && visiblePinnedColumns.right.length === 0) {\n      return initialValue;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const columnsTotalWidth = gridColumnsTotalWidthSelector(apiRef);\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    const clientWidth = apiRef.current.virtualScrollerRef.current.clientWidth;\n\n    // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n    const scrollLeft = Math.abs(apiRef.current.virtualScrollerRef.current.scrollLeft);\n    const offsetWidth = visibleColumns[params.colIndex].computedWidth;\n    const offsetLeft = columnPositions[params.colIndex];\n    const leftPinnedColumnsWidth = columnPositions[visiblePinnedColumns.left.length];\n    const rightPinnedColumnsWidth = columnsTotalWidth - columnPositions[columnPositions.length - visiblePinnedColumns.right.length];\n    const elementBottom = offsetLeft + offsetWidth;\n    if (elementBottom - (clientWidth - rightPinnedColumnsWidth) > scrollLeft) {\n      const left = elementBottom - (clientWidth - rightPinnedColumnsWidth);\n      return _extends({}, initialValue, {\n        left\n      });\n    }\n    if (offsetLeft < scrollLeft + leftPinnedColumnsWidth) {\n      const left = offsetLeft - leftPinnedColumnsWidth;\n      return _extends({}, initialValue, {\n        left\n      });\n    }\n    return initialValue;\n  }, [apiRef]);\n  const addColumnMenuItems = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableColumnPinning) {\n      return columnMenuItems;\n    }\n    if (colDef.pinnable === false) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuPinningItem'];\n  }, [props.disableColumnPinning]);\n  const checkIfCanBeReordered = React.useCallback((initialValue, {\n    targetIndex\n  }) => {\n    const visiblePinnedColumns = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\n    if (visiblePinnedColumns.left.length === 0 && visiblePinnedColumns.right.length === 0) {\n      return initialValue;\n    }\n    if (visiblePinnedColumns.left.length > 0 && targetIndex < visiblePinnedColumns.left.length) {\n      return false;\n    }\n    if (visiblePinnedColumns.right.length > 0) {\n      const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n      const firstRightPinnedColumnIndex = visibleColumns.length - visiblePinnedColumns.right.length;\n      return targetIndex >= firstRightPinnedColumnIndex ? false : initialValue;\n    }\n    return initialValue;\n  }, [apiRef]);\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const pinnedColumnsToExport = gridPinnedColumnsSelector(apiRef.current.state);\n    const shouldExportPinnedColumns =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.pinnedColumns != null ||\n    // Always export if the model has been initialized\n    props.initialState?.pinnedColumns != null ||\n    // Export if the model is not empty\n    (pinnedColumnsToExport.left ?? []).length > 0 || (pinnedColumnsToExport.right ?? []).length > 0;\n    if (!shouldExportPinnedColumns) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pinnedColumns: pinnedColumnsToExport\n    });\n  }, [apiRef, props.pinnedColumns, props.initialState?.pinnedColumns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const newPinnedColumns = context.stateToRestore.pinnedColumns;\n    if (newPinnedColumns != null) {\n      setState(apiRef, newPinnedColumns);\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'scrollToIndexes', calculateScrollLeft);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'canBeReordered', checkIfCanBeReordered);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  apiRef.current.registerControlState({\n    stateId: 'pinnedColumns',\n    propModel: props.pinnedColumns,\n    propOnChange: props.onPinnedColumnsChange,\n    stateSelector: gridPinnedColumnsSelector,\n    changeEvent: 'pinnedColumnsChange'\n  });\n  const pinColumn = React.useCallback((field, side) => {\n    if (apiRef.current.isColumnPinned(field) === side) {\n      return;\n    }\n    const otherSide = side === GridPinnedColumnPosition.RIGHT ? GridPinnedColumnPosition.LEFT : GridPinnedColumnPosition.RIGHT;\n    const newPinnedColumns = {\n      [side]: [...(pinnedColumns[side] || []), field],\n      [otherSide]: (pinnedColumns[otherSide] || []).filter(column => column !== field)\n    };\n    apiRef.current.setPinnedColumns(newPinnedColumns);\n  }, [apiRef, pinnedColumns]);\n  const unpinColumn = React.useCallback(field => {\n    apiRef.current.setPinnedColumns({\n      left: (pinnedColumns.left || []).filter(column => column !== field),\n      right: (pinnedColumns.right || []).filter(column => column !== field)\n    });\n  }, [apiRef, pinnedColumns.left, pinnedColumns.right]);\n  const getPinnedColumns = React.useCallback(() => {\n    return gridPinnedColumnsSelector(apiRef.current.state);\n  }, [apiRef]);\n  const setPinnedColumns = React.useCallback(newPinnedColumns => {\n    setState(apiRef, newPinnedColumns);\n    apiRef.current.requestPipeProcessorsApplication('hydrateColumns');\n  }, [apiRef]);\n  const isColumnPinned = React.useCallback(field => {\n    const leftPinnedColumns = pinnedColumns.left || [];\n    if (leftPinnedColumns.includes(field)) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    const rightPinnedColumns = pinnedColumns.right || [];\n    if (rightPinnedColumns.includes(field)) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return false;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const columnPinningApi = {\n    pinColumn,\n    unpinColumn,\n    getPinnedColumns,\n    setPinnedColumns,\n    isColumnPinned\n  };\n  useGridApiMethod(apiRef, columnPinningApi, 'public');\n  const handleColumnOrderChange = params => {\n    if (!apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns) {\n      return;\n    }\n    const {\n      column,\n      targetIndex,\n      oldIndex\n    } = params;\n    const delta = targetIndex > oldIndex ? 1 : -1;\n    const latestColumnFields = gridColumnFieldsSelector(apiRef);\n\n    /**\n     * When a column X is reordered to somewhere else, the position where this column X is dropped\n     * on must be moved to left or right to make room for it. The ^^^ below represents the column\n     * which gave space to receive X.\n     *\n     * | X | B | C | D | -> | B | C | D | X | (for example X moved to after D, so delta=1)\n     *              ^^^              ^^^\n     *\n     * | A | B | C | X | -> | X | A | B | C | (for example X moved before A, so delta=-1)\n     *  ^^^                      ^^^\n     *\n     * If column P is pinned, it will not move to provide space. However, it will jump to the next\n     * non-pinned column.\n     *\n     * | X | B | P | D | -> | B | D | P | X | (for example X moved to after D, with P pinned)\n     *              ^^^          ^^^\n     */\n    const siblingField = latestColumnFields[targetIndex - delta];\n    const newOrderedFieldsBeforePinningColumns = [...apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns];\n\n    // The index to start swapping fields\n    let i = newOrderedFieldsBeforePinningColumns.findIndex(currentColumn => currentColumn === column.field);\n    // The index of the field to swap with\n    let j = i + delta;\n\n    // When to stop swapping fields.\n    // We stop one field before because the swap is done with i + 1 (if delta=1)\n    const stop = newOrderedFieldsBeforePinningColumns.findIndex(currentColumn => currentColumn === siblingField);\n    while (delta > 0 ? i < stop : i > stop) {\n      // If the field to swap with is a pinned column, jump to the next\n      while (apiRef.current.isColumnPinned(newOrderedFieldsBeforePinningColumns[j])) {\n        j += delta;\n      }\n      const temp = newOrderedFieldsBeforePinningColumns[i];\n      newOrderedFieldsBeforePinningColumns[i] = newOrderedFieldsBeforePinningColumns[j];\n      newOrderedFieldsBeforePinningColumns[j] = temp;\n      i = j;\n      j = i + delta;\n    }\n    apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns = newOrderedFieldsBeforePinningColumns;\n  };\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnOrderChange);\n  React.useEffect(() => {\n    if (props.pinnedColumns) {\n      apiRef.current.setPinnedColumns(props.pinnedColumns);\n    }\n  }, [apiRef, props.pinnedColumns]);\n};\nfunction setState(apiRef, model) {\n  apiRef.current.setState(state => _extends({}, state, {\n    pinnedColumns: model\n  }));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor, gridVisiblePinnedColumnDefinitionsSelector } from '@mui/x-data-grid/internals';\nexport const useGridColumnPinningPreProcessors = (apiRef, props) => {\n  const {\n    disableColumnPinning\n  } = props;\n  const prevAllPinnedColumns = React.useRef([]);\n  const reorderPinnedColumns = React.useCallback(columnsState => {\n    if (columnsState.orderedFields.length === 0 || disableColumnPinning) {\n      return columnsState;\n    }\n\n    // HACK: This is a hack needed because the pipe processors aren't pure enough. What\n    // they should be is `gridState -> gridState` transformers, but they only transform a slice\n    // of the state, not the full state. So if they need access to other parts of the state (like\n    // the `state.columns.orderedFields` in this case), they might lag behind because the selectors\n    // are selecting the old state in `apiRef`, not the state being computed in the current pipe processor.\n    const savedState = apiRef.current.state;\n    apiRef.current.state = _extends({}, savedState, {\n      columns: columnsState\n    });\n    const visibleColumns = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\n    apiRef.current.state = savedState;\n    // HACK: Ends here //\n\n    const leftPinnedColumns = visibleColumns.left.map(c => c.field);\n    const rightPinnedColumns = visibleColumns.right.map(c => c.field);\n    let newOrderedFields;\n    const allPinnedColumns = [...leftPinnedColumns, ...rightPinnedColumns];\n    const {\n      orderedFieldsBeforePinningColumns\n    } = apiRef.current.caches.columnPinning;\n    if (orderedFieldsBeforePinningColumns) {\n      newOrderedFields = new Array(columnsState.orderedFields.length).fill(null);\n      const newOrderedFieldsBeforePinningColumns = [...newOrderedFields];\n\n      // Contains the fields not added to the orderedFields array yet\n      const remainingFields = [...columnsState.orderedFields];\n\n      // First, we check if the column was unpinned since the last processing.\n      // If yes and it still exists, we move it back to the same position it was before pinning\n      prevAllPinnedColumns.current.forEach(field => {\n        if (!allPinnedColumns.includes(field) && columnsState.lookup[field]) {\n          // Get the position before pinning\n          const index = orderedFieldsBeforePinningColumns.indexOf(field);\n          newOrderedFields[index] = field;\n          newOrderedFieldsBeforePinningColumns[index] = field;\n          // This field was already consumed so we prevent from being added again\n          remainingFields.splice(remainingFields.indexOf(field), 1);\n        }\n      });\n\n      // For columns still pinned, we keep stored their original positions\n      allPinnedColumns.forEach(field => {\n        let index = orderedFieldsBeforePinningColumns.indexOf(field);\n        // If index = -1, the pinned field didn't exist in the last processing, it's possibly being added now\n        // If index >= newOrderedFieldsBeforePinningColumns.length, then one or more columns were removed\n        // In both cases, use the position from the columns array\n        // TODO: detect removed columns and decrease the positions after it\n        if (index === -1 || index >= newOrderedFieldsBeforePinningColumns.length) {\n          index = columnsState.orderedFields.indexOf(field);\n        }\n\n        // The fallback above may make the column to be inserted in a position already occupied\n        // In this case, put it in any empty slot available\n        if (newOrderedFieldsBeforePinningColumns[index] !== null) {\n          index = 0;\n          while (newOrderedFieldsBeforePinningColumns[index] !== null) {\n            index += 1;\n          }\n        }\n        newOrderedFields[index] = field;\n        newOrderedFieldsBeforePinningColumns[index] = field;\n        // This field was already consumed so we prevent from being added again\n        remainingFields.splice(remainingFields.indexOf(field), 1);\n      });\n\n      // The fields remaining are those that're neither pinnned nor were unpinned\n      // For these, we spread them across both arrays making sure to not override existing values\n      let i = 0;\n      remainingFields.forEach(field => {\n        while (newOrderedFieldsBeforePinningColumns[i] !== null) {\n          i += 1;\n        }\n        newOrderedFieldsBeforePinningColumns[i] = field;\n        newOrderedFields[i] = field;\n      });\n      apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns = newOrderedFieldsBeforePinningColumns;\n    } else {\n      newOrderedFields = [...columnsState.orderedFields];\n      apiRef.current.caches.columnPinning.orderedFieldsBeforePinningColumns = [...columnsState.orderedFields];\n    }\n    prevAllPinnedColumns.current = allPinnedColumns;\n    const centerColumns = newOrderedFields.filter(field => {\n      return !leftPinnedColumns.includes(field) && !rightPinnedColumns.includes(field);\n    });\n    return _extends({}, columnsState, {\n      orderedFields: [...leftPinnedColumns, ...centerColumns, ...rightPinnedColumns]\n    });\n  }, [apiRef, disableColumnPinning]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', reorderPinnedColumns);\n  const isColumnPinned = React.useCallback((initialValue, field) => apiRef.current.isColumnPinned(field), [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'isColumnPinned', isColumnPinned);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridSelector, useGridApiEventHandler, useGridApiMethod, gridDataRowIdsSelector } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"./gridDetailPanelToggleColDef.js\";\nimport { gridDetailPanelExpandedRowIdsSelector, gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelRawHeightCacheSelector } from \"./gridDetailPanelSelector.js\";\nexport const detailPanelStateInitializer = (state, props) => {\n  return _extends({}, state, {\n    detailPanel: {\n      heightCache: {},\n      expandedRowIds: props.detailPanelExpandedRowIds ?? props.initialState?.detailPanel?.expandedRowIds ?? []\n    }\n  });\n};\nfunction cacheContentAndHeight(apiRef, getDetailPanelContent, getDetailPanelHeight, previousHeightCache) {\n  if (typeof getDetailPanelContent !== 'function') {\n    return {};\n  }\n\n  // TODO change to lazy approach using a Proxy\n  // only call getDetailPanelContent when asked for an id\n  const rowIds = gridDataRowIdsSelector(apiRef);\n  const contentCache = rowIds.reduce((acc, id) => {\n    const params = apiRef.current.getRowParams(id);\n    acc[id] = getDetailPanelContent(params);\n    return acc;\n  }, {});\n  const heightCache = rowIds.reduce((acc, id) => {\n    if (contentCache[id] == null) {\n      return acc;\n    }\n    const params = apiRef.current.getRowParams(id);\n    const height = getDetailPanelHeight(params);\n    const autoHeight = height === 'auto';\n    acc[id] = {\n      autoHeight,\n      height: autoHeight ? previousHeightCache[id]?.height : height\n    };\n    return acc;\n  }, {});\n  return {\n    contentCache,\n    heightCache\n  };\n}\nexport const useGridDetailPanel = (apiRef, props) => {\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  const contentCache = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const handleCellClick = React.useCallback((params, event) => {\n    if (params.field !== GRID_DETAIL_PANEL_TOGGLE_FIELD || props.getDetailPanelContent == null) {\n      return;\n    }\n    const content = contentCache[params.id];\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n\n    // Ignore if the user didn't click specifically in the \"i\" button\n    if (event.target === event.currentTarget) {\n      return;\n    }\n    apiRef.current.toggleDetailPanel(params.id);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD && event.key === ' ') {\n      apiRef.current.toggleDetailPanel(params.id);\n    }\n  }, [apiRef, props.getDetailPanelContent]);\n  useGridApiEventHandler(apiRef, 'cellClick', handleCellClick);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  apiRef.current.registerControlState({\n    stateId: 'detailPanels',\n    propModel: props.detailPanelExpandedRowIds,\n    propOnChange: props.onDetailPanelExpandedRowIdsChange,\n    stateSelector: gridDetailPanelExpandedRowIdsSelector,\n    changeEvent: 'detailPanelsExpandedRowIdsChange'\n  });\n  const toggleDetailPanel = React.useCallback(id => {\n    if (props.getDetailPanelContent == null) {\n      return;\n    }\n    const content = contentCache[id];\n    if (! /*#__PURE__*/React.isValidElement(content)) {\n      return;\n    }\n    const ids = apiRef.current.getExpandedDetailPanels();\n    apiRef.current.setExpandedDetailPanels(ids.includes(id) ? ids.filter(rowId => rowId !== id) : [...ids, id]);\n  }, [apiRef, contentCache, props.getDetailPanelContent]);\n  const getExpandedDetailPanels = React.useCallback(() => gridDetailPanelExpandedRowIdsSelector(apiRef.current.state), [apiRef]);\n  const setExpandedDetailPanels = React.useCallback(ids => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          expandedRowIds: ids\n        })\n      });\n    });\n  }, [apiRef]);\n  const storeDetailPanelHeight = React.useCallback((id, height) => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    if (!heightCache[id] || heightCache[id].height === height) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, {\n          heightCache: _extends({}, heightCache, {\n            [id]: _extends({}, heightCache[id], {\n              height\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.requestPipeProcessorsApplication('rowHeight');\n  }, [apiRef]);\n  const detailPanelHasAutoHeight = React.useCallback(id => {\n    const heightCache = gridDetailPanelRawHeightCacheSelector(apiRef.current.state);\n    return heightCache[id] ? heightCache[id].autoHeight : false;\n  }, [apiRef]);\n  const detailPanelPubicApi = {\n    toggleDetailPanel,\n    getExpandedDetailPanels,\n    setExpandedDetailPanels\n  };\n  const detailPanelPrivateApi = {\n    storeDetailPanelHeight,\n    detailPanelHasAutoHeight\n  };\n  useGridApiMethod(apiRef, detailPanelPubicApi, 'public');\n  useGridApiMethod(apiRef, detailPanelPrivateApi, 'private');\n  React.useEffect(() => {\n    if (props.detailPanelExpandedRowIds) {\n      const currentModel = gridDetailPanelExpandedRowIdsSelector(apiRef.current.state);\n      if (currentModel !== props.detailPanelExpandedRowIds) {\n        apiRef.current.setExpandedDetailPanels(props.detailPanelExpandedRowIds);\n      }\n    }\n  }, [apiRef, props.detailPanelExpandedRowIds]);\n  const updateCachesAndForceUpdate = React.useCallback(() => {\n    if (!props.getDetailPanelContent) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', updateCachesAndForceUpdate);\n  const previousGetDetailPanelContentProp = React.useRef(undefined);\n  const previousGetDetailPanelHeightProp = React.useRef(undefined);\n  const updateCachesIfNeeded = React.useCallback(() => {\n    if (props.getDetailPanelContent === previousGetDetailPanelContentProp.current && props.getDetailPanelHeight === previousGetDetailPanelHeightProp.current) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        detailPanel: _extends({}, state.detailPanel, cacheContentAndHeight(apiRef, props.getDetailPanelContent, props.getDetailPanelHeight, state.detailPanel.heightCache))\n      });\n    });\n    previousGetDetailPanelContentProp.current = props.getDetailPanelContent;\n    previousGetDetailPanelHeightProp.current = props.getDetailPanelHeight;\n  }, [apiRef, props.getDetailPanelContent, props.getDetailPanelHeight]);\n  const addDetailHeight = React.useCallback((initialValue, row) => {\n    if (!expandedRowIds || expandedRowIds.length === 0 || !expandedRowIds.includes(row.id)) {\n      initialValue.detail = 0;\n      return initialValue;\n    }\n    updateCachesIfNeeded();\n    const heightCache = gridDetailPanelExpandedRowsHeightCacheSelector(apiRef);\n    initialValue.detail = heightCache[row.id] ?? 0; // Fallback to zero because the cache might not be ready yet (for example page was changed)\n    return initialValue;\n  }, [apiRef, expandedRowIds, updateCachesIfNeeded]);\n  const enabled = props.getDetailPanelContent !== undefined;\n  useGridRegisterPipeProcessor(apiRef, 'rowHeight', addDetailHeight, enabled);\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    updateCachesIfNeeded();\n  }\n  React.useEffect(() => {\n    if (!isFirstRender.current) {\n      updateCachesIfNeeded();\n    }\n    isFirstRender.current = false;\n  }, [apiRef, updateCachesIfNeeded]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridClasses } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_DETAIL_PANEL_TOGGLE_COL_DEF } from \"./gridDetailPanelToggleColDef.js\";\nimport { gridDetailPanelExpandedRowIdsSelector } from \"./gridDetailPanelSelector.js\";\nexport const useGridDetailPanelPreProcessors = (privateApiRef, props) => {\n  const addToggleColumn = React.useCallback(columnsState => {\n    if (props.getDetailPanelContent == null) {\n      // Remove the toggle column, when it exists\n      if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n        delete columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD];\n        columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_DETAIL_PANEL_TOGGLE_FIELD);\n      }\n      return columnsState;\n    }\n\n    // Don't add the toggle column if there's already one\n    // The user might have manually added it to have it in a custom position\n    if (columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD]) {\n      return columnsState;\n    }\n\n    // Otherwise, add the toggle column at the beginning\n    columnsState.orderedFields = [GRID_DETAIL_PANEL_TOGGLE_FIELD, ...columnsState.orderedFields];\n    columnsState.lookup[GRID_DETAIL_PANEL_TOGGLE_FIELD] = _extends({}, GRID_DETAIL_PANEL_TOGGLE_COL_DEF, {\n      headerName: privateApiRef.current.getLocaleText('detailPanelToggle')\n    });\n    return columnsState;\n  }, [privateApiRef, props.getDetailPanelContent]);\n  const addExpandedClassToRow = React.useCallback((classes, id) => {\n    if (props.getDetailPanelContent == null) {\n      return classes;\n    }\n    const expandedRowIds = gridDetailPanelExpandedRowIdsSelector(privateApiRef.current.state);\n    if (!expandedRowIds.includes(id)) {\n      return classes;\n    }\n    return [...classes, gridClasses['row--detailPanelExpanded']];\n  }, [privateApiRef, props.getDetailPanelContent]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', addToggleColumn);\n  useGridRegisterPipeProcessor(privateApiRef, 'rowClassName', addExpandedClassToRow);\n};", "import * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridLogger, useGridApiEventHandler, getDataGridUtilityClass, useGridSelector, gridSortModelSelector, gridRowMaximumTreeDepthSelector, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { gridEditRowsStateSelector, gridSortedRowIndexLookupSelector } from '@mui/x-data-grid/internals';\nimport { GRID_REORDER_COL_DEF } from \"./gridRowReorderColDef.js\";\nvar Direction = /*#__PURE__*/function (Direction) {\n  Direction[Direction[\"UP\"] = 0] = \"UP\";\n  Direction[Direction[\"DOWN\"] = 1] = \"DOWN\";\n  return Direction;\n}(Direction || {});\nlet previousMousePosition = null;\nlet previousReorderState = {\n  previousTargetId: null,\n  dragDirection: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    rowDragging: ['row--dragging']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\n/**\n * Only available in DataGridPro\n * @requires useGridRows (method)\n */\nexport const useGridRowReorder = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowReorder');\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const dragRowNode = React.useRef(null);\n  const originRowIndex = React.useRef(null);\n  const removeDnDStylesTimeout = React.useRef(undefined);\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const [dragRowId, setDragRowId] = React.useState('');\n  const sortedRowIndexLookup = useGridSelector(apiRef, gridSortedRowIndexLookupSelector);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(removeDnDStylesTimeout.current);\n    };\n  }, []);\n\n  // TODO: remove sortModel check once row reorder is sorting compatible\n  // remove treeDepth once row reorder is tree compatible\n  const isRowReorderDisabled = React.useMemo(() => {\n    return !props.rowReordering || !!sortModel.length || treeDepth !== 1;\n  }, [props.rowReordering, sortModel, treeDepth]);\n  const handleDragStart = React.useCallback((params, event) => {\n    // Call the gridEditRowsStateSelector directly to avoid infnite loop\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    if (isRowReorderDisabled || Object.keys(editRowsState).length !== 0) {\n      return;\n    }\n    logger.debug(`Start dragging row ${params.id}`);\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    dragRowNode.current = event.currentTarget;\n    dragRowNode.current.classList.add(classes.rowDragging);\n    setDragRowId(params.id);\n    removeDnDStylesTimeout.current = setTimeout(() => {\n      dragRowNode.current.classList.remove(classes.rowDragging);\n    });\n    originRowIndex.current = sortedRowIndexLookup[params.id];\n    apiRef.current.setCellFocus(params.id, GRID_REORDER_COL_DEF.field);\n  }, [apiRef, isRowReorderDisabled, logger, classes.rowDragging, sortedRowIndexLookup]);\n  const handleDragOver = React.useCallback((params, event) => {\n    if (dragRowId === '') {\n      return;\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (!rowNode || rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n      return;\n    }\n    logger.debug(`Dragging over row ${params.id}`);\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    const mouseMovementDiff = previousMousePosition ? previousMousePosition.y - event.clientY : event.clientY;\n    if (params.id !== dragRowId) {\n      const targetRowIndex = sortedRowIndexLookup[params.id];\n      const dragDirection = mouseMovementDiff > 0 ? Direction.DOWN : Direction.UP;\n      const currentReorderState = {\n        dragDirection,\n        previousTargetId: params.id\n      };\n      const isStateChanged = currentReorderState.dragDirection !== previousReorderState.dragDirection || currentReorderState.previousTargetId !== previousReorderState.previousTargetId;\n      if (previousReorderState.dragDirection === null || Math.abs(mouseMovementDiff) >= 1 && isStateChanged) {\n        apiRef.current.setRowIndex(dragRowId, targetRowIndex);\n        previousReorderState = currentReorderState;\n      }\n    }\n    previousMousePosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }, [dragRowId, apiRef, logger, sortedRowIndexLookup]);\n  const handleDragEnd = React.useCallback((params, event) => {\n    // Call the gridEditRowsStateSelector directly to avoid infnite loop\n    const editRowsState = gridEditRowsStateSelector(apiRef.current.state);\n    if (dragRowId === '' || isRowReorderDisabled || Object.keys(editRowsState).length !== 0) {\n      return;\n    }\n    logger.debug('End dragging row');\n    event.preventDefault();\n    // Prevent drag events propagation.\n    // For more information check here https://github.com/mui/mui-x/issues/2680.\n    event.stopPropagation();\n    clearTimeout(removeDnDStylesTimeout.current);\n    dragRowNode.current = null;\n    previousReorderState.dragDirection = null;\n\n    // Check if the row was dropped outside the grid.\n    if (event.dataTransfer.dropEffect === 'none') {\n      // Accessing params.field may contain the wrong field as header elements are reused\n      apiRef.current.setRowIndex(dragRowId, originRowIndex.current);\n      originRowIndex.current = null;\n    } else {\n      // Emit the rowOrderChange event only once when the reordering stops.\n      const rowOrderChangeParams = {\n        row: apiRef.current.getRow(dragRowId),\n        targetIndex: sortedRowIndexLookup[params.id],\n        oldIndex: originRowIndex.current\n      };\n      apiRef.current.publishEvent('rowOrderChange', rowOrderChangeParams);\n    }\n    setDragRowId('');\n  }, [apiRef, dragRowId, isRowReorderDisabled, logger, sortedRowIndexLookup]);\n  useGridApiEventHandler(apiRef, 'rowDragStart', handleDragStart);\n  useGridApiEventHandler(apiRef, 'rowDragOver', handleDragOver);\n  useGridApiEventHandler(apiRef, 'rowDragEnd', handleDragEnd);\n  useGridApiEventHandler(apiRef, 'cellDragOver', handleDragOver);\n  useGridApiOptionHandler(apiRef, 'rowOrderChange', props.onRowOrderChange);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_REORDER_COL_DEF } from \"./gridRowReorderColDef.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      rowReorderCellContainer: ['rowReorderCellContainer'],\n      columnHeaderReorder: ['columnHeaderReorder']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowReorderPreProcessors = (privateApiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateReorderColumn = React.useCallback(columnsState => {\n    const reorderColumn = _extends({}, GRID_REORDER_COL_DEF, {\n      cellClassName: classes.rowReorderCellContainer,\n      headerClassName: classes.columnHeaderReorder,\n      headerName: privateApiRef.current.getLocaleText('rowReorderingHeaderName')\n    });\n    const shouldHaveReorderColumn = props.rowReordering;\n    const haveReorderColumn = columnsState.lookup[reorderColumn.field] != null;\n    if (shouldHaveReorderColumn && haveReorderColumn) {\n      columnsState.lookup[reorderColumn.field] = _extends({}, reorderColumn, columnsState.lookup[reorderColumn.field]);\n      return columnsState;\n    }\n    if (shouldHaveReorderColumn && !haveReorderColumn) {\n      columnsState.lookup[reorderColumn.field] = reorderColumn;\n      columnsState.orderedFields = [reorderColumn.field, ...columnsState.orderedFields];\n    } else if (!shouldHaveReorderColumn && haveReorderColumn) {\n      delete columnsState.lookup[reorderColumn.field];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== reorderColumn.field);\n    }\n    return columnsState;\n  }, [privateApiRef, classes, props.rowReordering]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateColumns', updateReorderColumn);\n};", "import * as React from 'react';\nimport { useGridApiEventHandler, useGridSelector, gridSortModelSelector, gridFilterModelSelector, gridRenderContextSelector, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { getVisibleRows } from '@mui/x-data-grid/internals';\nfunction findSkeletonRowsSection({\n  apiRef,\n  visibleRows,\n  range\n}) {\n  let {\n    firstRowIndex,\n    lastRowIndex\n  } = range;\n  const visibleRowsSection = visibleRows.slice(range.firstRowIndex, range.lastRowIndex);\n  let startIndex = 0;\n  let endIndex = visibleRowsSection.length - 1;\n  let isSkeletonSectionFound = false;\n  while (!isSkeletonSectionFound && firstRowIndex < lastRowIndex) {\n    const isStartingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[startIndex].id)?.type === 'skeletonRow';\n    const isEndingWithASkeletonRow = apiRef.current.getRowNode(visibleRowsSection[endIndex].id)?.type === 'skeletonRow';\n    if (isStartingWithASkeletonRow && isEndingWithASkeletonRow) {\n      isSkeletonSectionFound = true;\n    }\n    if (!isStartingWithASkeletonRow) {\n      startIndex += 1;\n      firstRowIndex += 1;\n    }\n    if (!isEndingWithASkeletonRow) {\n      endIndex -= 1;\n      lastRowIndex -= 1;\n    }\n  }\n  return isSkeletonSectionFound ? {\n    firstRowIndex,\n    lastRowIndex\n  } : undefined;\n}\n\n/**\n * @requires useGridRows (state)\n * @requires useGridPagination (state)\n * @requires useGridDimensions (method) - can be after\n * @requires useGridScroll (method\n */\nexport const useGridLazyLoader = (privateApiRef, props) => {\n  const sortModel = useGridSelector(privateApiRef, gridSortModelSelector);\n  const filterModel = useGridSelector(privateApiRef, gridFilterModelSelector);\n  const renderedRowsIntervalCache = React.useRef({\n    firstRowToRender: 0,\n    lastRowToRender: 0\n  });\n  const isDisabled = props.rowsLoadingMode !== 'server';\n  const handleRenderedRowsIntervalChange = React.useCallback(params => {\n    if (isDisabled) {\n      return;\n    }\n    const fetchRowsParams = {\n      firstRowToRender: params.firstRowIndex,\n      lastRowToRender: params.lastRowIndex,\n      sortModel,\n      filterModel\n    };\n    if (renderedRowsIntervalCache.current.firstRowToRender === params.firstRowIndex && renderedRowsIntervalCache.current.lastRowToRender === params.lastRowIndex) {\n      return;\n    }\n    renderedRowsIntervalCache.current = {\n      firstRowToRender: params.firstRowIndex,\n      lastRowToRender: params.lastRowIndex\n    };\n    if (sortModel.length === 0 && filterModel.items.length === 0) {\n      const currentVisibleRows = getVisibleRows(privateApiRef, {\n        pagination: props.pagination,\n        paginationMode: props.paginationMode\n      });\n      const skeletonRowsSection = findSkeletonRowsSection({\n        apiRef: privateApiRef,\n        visibleRows: currentVisibleRows.rows,\n        range: {\n          firstRowIndex: params.firstRowIndex,\n          lastRowIndex: params.lastRowIndex\n        }\n      });\n      if (!skeletonRowsSection) {\n        return;\n      }\n      fetchRowsParams.firstRowToRender = skeletonRowsSection.firstRowIndex;\n      fetchRowsParams.lastRowToRender = skeletonRowsSection.lastRowIndex;\n    }\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, props.pagination, props.paginationMode, sortModel, filterModel]);\n  const handleGridSortModelChange = React.useCallback(newSortModel => {\n    if (isDisabled) {\n      return;\n    }\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\n    const renderContext = gridRenderContextSelector(privateApiRef);\n    const fetchRowsParams = {\n      firstRowToRender: renderContext.firstRowIndex,\n      lastRowToRender: renderContext.lastRowIndex,\n      sortModel: newSortModel,\n      filterModel\n    };\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, filterModel]);\n  const handleGridFilterModelChange = React.useCallback(newFilterModel => {\n    if (isDisabled) {\n      return;\n    }\n    privateApiRef.current.requestPipeProcessorsApplication('hydrateRows');\n    const renderContext = gridRenderContextSelector(privateApiRef);\n    const fetchRowsParams = {\n      firstRowToRender: renderContext.firstRowIndex,\n      lastRowToRender: renderContext.lastRowIndex,\n      sortModel,\n      filterModel: newFilterModel\n    };\n    privateApiRef.current.publishEvent('fetchRows', fetchRowsParams);\n  }, [privateApiRef, isDisabled, sortModel]);\n  useGridApiEventHandler(privateApiRef, 'renderedRowsIntervalChange', handleRenderedRowsIntervalChange);\n  useGridApiEventHandler(privateApiRef, 'sortModelChange', handleGridSortModelChange);\n  useGridApiEventHandler(privateApiRef, 'filterModelChange', handleGridFilterModelChange);\n  useGridApiOptionHandler(privateApiRef, 'fetchRows', props.onFetchRows);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nexport const GRID_SKELETON_ROW_ROOT_ID = 'auto-generated-skeleton-row-root';\nconst getSkeletonRowId = index => `${GRID_SKELETON_ROW_ROOT_ID}-${index}`;\nexport const useGridLazyLoaderPreProcessors = (privateApiRef, props) => {\n  const addSkeletonRows = React.useCallback(groupingParams => {\n    const rootGroup = groupingParams.tree[GRID_ROOT_GROUP_ID];\n    if (props.rowsLoadingMode !== 'server' || !props.rowCount || rootGroup.children.length >= props.rowCount) {\n      return groupingParams;\n    }\n    const tree = _extends({}, groupingParams.tree);\n    const rootGroupChildren = [...rootGroup.children];\n    for (let i = 0; i < props.rowCount - rootGroup.children.length; i += 1) {\n      const skeletonId = getSkeletonRowId(i);\n      rootGroupChildren.push(skeletonId);\n      const skeletonRowNode = {\n        type: 'skeletonRow',\n        id: skeletonId,\n        parent: GRID_ROOT_GROUP_ID,\n        depth: 0\n      };\n      tree[skeletonId] = skeletonRowNode;\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n    return _extends({}, groupingParams, {\n      tree\n    });\n  }, [props.rowCount, props.rowsLoadingMode]);\n  useGridRegisterPipeProcessor(privateApiRef, 'hydrateRows', addSkeletonRows);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '@mui/x-data-grid';\nimport { getRowIdFromRowModel } from '@mui/x-data-grid/internals';\nfunction createPinnedRowsInternalCache(pinnedRows, getRowId) {\n  const cache = {\n    topIds: [],\n    bottomIds: [],\n    idLookup: {}\n  };\n  pinnedRows?.top?.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.topIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  pinnedRows?.bottom?.forEach(rowModel => {\n    const id = getRowIdFromRowModel(rowModel, getRowId);\n    cache.bottomIds.push(id);\n    cache.idLookup[id] = rowModel;\n  });\n  return cache;\n}\nexport const rowPinningStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(props.pinnedRows, props.getRowId);\n  return _extends({}, state, {\n    rows: _extends({}, state.rows, {\n      additionalRowGroups: _extends({}, state.rows?.additionalRowGroups, {\n        pinnedRows: {\n          top: [],\n          bottom: []\n        }\n      })\n    })\n  });\n};\nexport const useGridRowPinning = (apiRef, props) => {\n  const setPinnedRows = React.useCallback(newPinnedRows => {\n    apiRef.current.caches.pinnedRows = createPinnedRowsInternalCache(newPinnedRows, props.getRowId);\n    apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n  }, [apiRef, props.getRowId]);\n  useGridApiMethod(apiRef, {\n    unstable_setPinnedRows: setPinnedRows\n  }, 'public');\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    apiRef.current.unstable_setPinnedRows(props.pinnedRows);\n  }, [apiRef, props.pinnedRows]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid/internals';\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { insertNodeInTree } from \"../../../utils/tree/utils.js\";\nexport function addPinnedRow({\n  groupingParams,\n  rowModel,\n  rowId,\n  position,\n  apiRef,\n  isAutoGenerated\n}) {\n  const dataRowIdToModelLookup = _extends({}, groupingParams.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, groupingParams.dataRowIdToIdLookup);\n  const tree = _extends({}, groupingParams.tree);\n  const treeDepths = _extends({}, groupingParams.treeDepths);\n\n  // TODO: warn if id is already present in `props.rows`\n\n  const node = {\n    type: 'pinnedRow',\n    id: rowId,\n    depth: 0,\n    parent: GRID_ROOT_GROUP_ID,\n    isAutoGenerated\n  };\n  insertNodeInTree(node, tree, treeDepths, null);\n  if (!isAutoGenerated) {\n    dataRowIdToModelLookup[rowId] = rowModel;\n    dataRowIdToIdLookup[rowId] = rowId;\n  }\n  // Do not push it to ids list so that pagination is not affected by pinned rows\n\n  apiRef.current.caches.rows.dataRowIdToModelLookup[rowId] = _extends({}, rowModel);\n  apiRef.current.caches.rows.dataRowIdToIdLookup[rowId] = rowId;\n  const previousPinnedRows = groupingParams.additionalRowGroups?.pinnedRows || {};\n  const newPinnedRow = {\n    id: rowId,\n    model: rowModel\n  };\n  if (groupingParams.additionalRowGroups?.pinnedRows?.[position]?.includes(newPinnedRow)) {\n    return _extends({}, groupingParams, {\n      dataRowIdToModelLookup,\n      dataRowIdToIdLookup,\n      tree,\n      treeDepths\n    });\n  }\n  return _extends({}, groupingParams, {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    tree,\n    treeDepths,\n    additionalRowGroups: _extends({}, groupingParams.additionalRowGroups, {\n      pinnedRows: _extends({}, previousPinnedRows, {\n        [position]: [...(previousPinnedRows[position] || []), newPinnedRow]\n      })\n    })\n  });\n}\nexport const useGridRowPinningPreProcessors = apiRef => {\n  const prevPinnedRowsCacheRef = React.useRef(null);\n  const addPinnedRows = React.useCallback(groupingParams => {\n    const pinnedRowsCache = apiRef.current.caches.pinnedRows || {};\n    const prevPinnedRowsCache = prevPinnedRowsCacheRef.current;\n    prevPinnedRowsCacheRef.current = pinnedRowsCache;\n    let newGroupingParams = _extends({}, groupingParams, {\n      additionalRowGroups: _extends({}, groupingParams.additionalRowGroups, {\n        // reset pinned rows state\n        pinnedRows: {}\n      })\n    });\n    if (prevPinnedRowsCache) {\n      const pinnedRowCleanup = rowId => {\n        const node = newGroupingParams.tree[rowId];\n        if (node?.type === 'pinnedRow') {\n          delete newGroupingParams.tree[rowId];\n          delete newGroupingParams.dataRowIdToModelLookup[rowId];\n          delete newGroupingParams.dataRowIdToIdLookup[rowId];\n          delete apiRef.current.caches.rows.dataRowIdToIdLookup[rowId];\n          delete apiRef.current.caches.rows.dataRowIdToModelLookup[rowId];\n        }\n      };\n      prevPinnedRowsCache.topIds?.forEach(pinnedRowCleanup);\n      prevPinnedRowsCache.bottomIds?.forEach(pinnedRowCleanup);\n    }\n    pinnedRowsCache.topIds?.forEach(rowId => {\n      newGroupingParams = addPinnedRow({\n        groupingParams: newGroupingParams,\n        rowModel: pinnedRowsCache.idLookup[rowId],\n        rowId,\n        position: 'top',\n        apiRef,\n        isAutoGenerated: false\n      });\n    });\n    pinnedRowsCache.bottomIds?.forEach(rowId => {\n      newGroupingParams = addPinnedRow({\n        groupingParams: newGroupingParams,\n        rowModel: pinnedRowsCache.idLookup[rowId],\n        rowId,\n        position: 'bottom',\n        apiRef,\n        isAutoGenerated: false\n      });\n    });\n\n    // If row with the same `id` is present both in `rows` and `pinnedRows` - remove it from the root group children\n    if (pinnedRowsCache.bottomIds?.length || pinnedRowsCache.topIds?.length) {\n      const shouldKeepRow = rowId => {\n        if (newGroupingParams.tree[rowId] && newGroupingParams.tree[rowId].type === 'pinnedRow') {\n          return false;\n        }\n        return true;\n      };\n      const rootGroupNode = newGroupingParams.tree[GRID_ROOT_GROUP_ID];\n      newGroupingParams.tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroupNode, {\n        children: rootGroupNode.children.filter(shouldKeepRow)\n      });\n      newGroupingParams.dataRowIds = newGroupingParams.dataRowIds.filter(shouldKeepRow);\n    }\n    return newGroupingParams;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addPinnedRows);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiEventHandler, gridRowsLoadingSelector, useGridApiMethod, useGridSelector } from '@mui/x-data-grid';\nimport { gridRowGroupsToFetchSelector } from '@mui/x-data-grid/internals';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { gridGetRowsParamsSelector, gridDataSourceErrorsSelector } from \"./gridDataSourceSelector.js\";\nimport { NestedDataManager, RequestStatus, runIfServerMode } from \"./utils.js\";\nimport { GridDataSourceCacheDefault } from \"./cache.js\";\nconst INITIAL_STATE = {\n  loading: {},\n  errors: {}\n};\nconst noopCache = {\n  clear: () => {},\n  get: () => undefined,\n  set: () => {}\n};\nfunction getCache(cacheProp) {\n  if (cacheProp === null) {\n    return noopCache;\n  }\n  return cacheProp ?? new GridDataSourceCacheDefault({});\n}\nexport const dataSourceStateInitializer = state => {\n  return _extends({}, state, {\n    dataSource: INITIAL_STATE\n  });\n};\nexport const useGridDataSource = (apiRef, props) => {\n  const nestedDataManager = useLazyRef(() => new NestedDataManager(apiRef)).current;\n  const groupsToAutoFetch = useGridSelector(apiRef, gridRowGroupsToFetchSelector);\n  const scheduledGroups = React.useRef(0);\n  const onError = props.unstable_onDataSourceError;\n  const [cache, setCache] = React.useState(() => getCache(props.unstable_dataSourceCache));\n  const fetchRows = React.useCallback(async parentId => {\n    const getRows = props.unstable_dataSource?.getRows;\n    if (!getRows) {\n      return;\n    }\n    if (parentId) {\n      nestedDataManager.queue([parentId]);\n      return;\n    }\n    nestedDataManager.clear();\n    scheduledGroups.current = 0;\n    const dataSourceState = apiRef.current.state.dataSource;\n    if (dataSourceState !== INITIAL_STATE) {\n      apiRef.current.resetDataSourceState();\n    }\n    const fetchParams = _extends({}, gridGetRowsParamsSelector(apiRef), apiRef.current.unstable_applyPipeProcessors('getRowsParams', {}));\n    const cachedData = apiRef.current.unstable_dataSource.cache.get(fetchParams);\n    if (cachedData !== undefined) {\n      const rows = cachedData.rows;\n      apiRef.current.setRows(rows);\n      if (cachedData.rowCount !== undefined) {\n        apiRef.current.setRowCount(cachedData.rowCount);\n      }\n      return;\n    }\n    const isLoading = gridRowsLoadingSelector(apiRef);\n    if (!isLoading) {\n      apiRef.current.setLoading(true);\n    }\n    try {\n      const getRowsResponse = await getRows(fetchParams);\n      apiRef.current.unstable_dataSource.cache.set(fetchParams, getRowsResponse);\n      if (getRowsResponse.rowCount !== undefined) {\n        apiRef.current.setRowCount(getRowsResponse.rowCount);\n      }\n      apiRef.current.setRows(getRowsResponse.rows);\n      apiRef.current.setLoading(false);\n    } catch (error) {\n      apiRef.current.setRows([]);\n      apiRef.current.setLoading(false);\n      onError?.(error, fetchParams);\n    }\n  }, [nestedDataManager, apiRef, props.unstable_dataSource?.getRows, onError]);\n  const fetchRowChildren = React.useCallback(async id => {\n    const pipedParams = apiRef.current.unstable_applyPipeProcessors('getRowsParams', {});\n    if (!props.treeData && (pipedParams.groupFields?.length ?? 0) === 0) {\n      nestedDataManager.clearPendingRequest(id);\n      return;\n    }\n    const getRows = props.unstable_dataSource?.getRows;\n    if (!getRows) {\n      nestedDataManager.clearPendingRequest(id);\n      return;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!rowNode) {\n      nestedDataManager.clearPendingRequest(id);\n      return;\n    }\n    const fetchParams = _extends({}, gridGetRowsParamsSelector(apiRef), pipedParams, {\n      groupKeys: rowNode.path\n    });\n    const cachedData = apiRef.current.unstable_dataSource.cache.get(fetchParams);\n    if (cachedData !== undefined) {\n      const rows = cachedData.rows;\n      nestedDataManager.setRequestSettled(id);\n      apiRef.current.updateServerRows(rows, rowNode.path);\n      if (cachedData.rowCount) {\n        apiRef.current.setRowCount(cachedData.rowCount);\n      }\n      apiRef.current.setRowChildrenExpansion(id, true);\n      apiRef.current.unstable_dataSource.setChildrenLoading(id, false);\n      return;\n    }\n    const existingError = gridDataSourceErrorsSelector(apiRef)[id] ?? null;\n    if (existingError) {\n      apiRef.current.unstable_dataSource.setChildrenFetchError(id, null);\n    }\n    try {\n      const getRowsResponse = await getRows(fetchParams);\n      if (!apiRef.current.getRowNode(id)) {\n        // The row has been removed from the grid\n        nestedDataManager.clearPendingRequest(id);\n        return;\n      }\n      if (nestedDataManager.getRequestStatus(id) === RequestStatus.UNKNOWN) {\n        apiRef.current.unstable_dataSource.setChildrenLoading(id, false);\n        return;\n      }\n      nestedDataManager.setRequestSettled(id);\n      apiRef.current.unstable_dataSource.cache.set(fetchParams, getRowsResponse);\n      if (getRowsResponse.rowCount) {\n        apiRef.current.setRowCount(getRowsResponse.rowCount);\n      }\n      apiRef.current.updateServerRows(getRowsResponse.rows, rowNode.path);\n      apiRef.current.setRowChildrenExpansion(id, true);\n    } catch (error) {\n      const childrenFetchError = error;\n      apiRef.current.unstable_dataSource.setChildrenFetchError(id, childrenFetchError);\n      onError?.(childrenFetchError, fetchParams);\n    } finally {\n      apiRef.current.unstable_dataSource.setChildrenLoading(id, false);\n      nestedDataManager.setRequestSettled(id);\n    }\n  }, [nestedDataManager, onError, apiRef, props.treeData, props.unstable_dataSource?.getRows]);\n  const setChildrenLoading = React.useCallback((parentId, isLoading) => {\n    apiRef.current.setState(state => {\n      if (!state.dataSource.loading[parentId] && isLoading === false) {\n        return state;\n      }\n      const newLoadingState = _extends({}, state.dataSource.loading);\n      if (isLoading === false) {\n        delete newLoadingState[parentId];\n      } else {\n        newLoadingState[parentId] = isLoading;\n      }\n      return _extends({}, state, {\n        dataSource: _extends({}, state.dataSource, {\n          loading: newLoadingState\n        })\n      });\n    });\n  }, [apiRef]);\n  const setChildrenFetchError = React.useCallback((parentId, error) => {\n    apiRef.current.setState(state => {\n      const newErrorsState = _extends({}, state.dataSource.errors);\n      if (error === null && newErrorsState[parentId] !== undefined) {\n        delete newErrorsState[parentId];\n      } else {\n        newErrorsState[parentId] = error;\n      }\n      return _extends({}, state, {\n        dataSource: _extends({}, state.dataSource, {\n          errors: newErrorsState\n        })\n      });\n    });\n  }, [apiRef]);\n  const resetDataSourceState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        dataSource: INITIAL_STATE\n      });\n    });\n  }, [apiRef]);\n  const debouncedFetchRows = React.useMemo(() => debounce(fetchRows, 0), [fetchRows]);\n  const dataSourceApi = {\n    unstable_dataSource: {\n      setChildrenLoading,\n      setChildrenFetchError,\n      fetchRows,\n      cache\n    }\n  };\n  const dataSourcePrivateApi = {\n    fetchRowChildren,\n    resetDataSourceState\n  };\n  useGridApiMethod(apiRef, dataSourceApi, 'public');\n  useGridApiMethod(apiRef, dataSourcePrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'sortModelChange', runIfServerMode(props.sortingMode, debouncedFetchRows));\n  useGridApiEventHandler(apiRef, 'filterModelChange', runIfServerMode(props.filterMode, debouncedFetchRows));\n  useGridApiEventHandler(apiRef, 'paginationModelChange', runIfServerMode(props.paginationMode, debouncedFetchRows));\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const newCache = getCache(props.unstable_dataSourceCache);\n    setCache(prevCache => prevCache !== newCache ? newCache : prevCache);\n  }, [props.unstable_dataSourceCache]);\n  React.useEffect(() => {\n    if (props.unstable_dataSource) {\n      apiRef.current.unstable_dataSource.cache.clear();\n      apiRef.current.unstable_dataSource.fetchRows();\n    }\n  }, [apiRef, props.unstable_dataSource]);\n  React.useEffect(() => {\n    if (groupsToAutoFetch && groupsToAutoFetch.length && scheduledGroups.current < groupsToAutoFetch.length) {\n      const groupsToSchedule = groupsToAutoFetch.slice(scheduledGroups.current);\n      nestedDataManager.queue(groupsToSchedule);\n      scheduledGroups.current = groupsToAutoFetch.length;\n    }\n  }, [apiRef, nestedDataManager, groupsToAutoFetch]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nconst MAX_CONCURRENT_REQUESTS = Infinity;\nexport const runIfServerMode = (modeProp, fn) => () => {\n  if (modeProp === 'server') {\n    fn();\n  }\n};\nexport let RequestStatus = /*#__PURE__*/function (RequestStatus) {\n  RequestStatus[RequestStatus[\"QUEUED\"] = 0] = \"QUEUED\";\n  RequestStatus[RequestStatus[\"PENDING\"] = 1] = \"PENDING\";\n  RequestStatus[RequestStatus[\"SETTLED\"] = 2] = \"SETTLED\";\n  RequestStatus[RequestStatus[\"UNKNOWN\"] = 3] = \"UNKNOWN\";\n  return RequestStatus;\n}({});\n\n/**\n * Fetches row children from the server with option to limit the number of concurrent requests\n * Determines the status of a request based on the enum `RequestStatus`\n * Uses `GridRowId` to uniquely identify a request\n */\nexport class NestedDataManager {\n  constructor(privateApiRef, maxConcurrentRequests = MAX_CONCURRENT_REQUESTS) {\n    this.pendingRequests = new Set();\n    this.queuedRequests = new Set();\n    this.settledRequests = new Set();\n    this.api = void 0;\n    this.maxConcurrentRequests = void 0;\n    this.processQueue = async () => {\n      if (this.queuedRequests.size === 0 || this.pendingRequests.size >= this.maxConcurrentRequests) {\n        return;\n      }\n      const loopLength = Math.min(this.maxConcurrentRequests - this.pendingRequests.size, this.queuedRequests.size);\n      if (loopLength === 0) {\n        return;\n      }\n      const fetchQueue = Array.from(this.queuedRequests);\n      for (let i = 0; i < loopLength; i += 1) {\n        const id = fetchQueue[i];\n        this.queuedRequests.delete(id);\n        this.pendingRequests.add(id);\n        this.api.fetchRowChildren(id);\n      }\n    };\n    this.queue = async ids => {\n      const loadingIds = {};\n      ids.forEach(id => {\n        this.queuedRequests.add(id);\n        loadingIds[id] = true;\n      });\n      this.api.setState(state => _extends({}, state, {\n        dataSource: _extends({}, state.dataSource, {\n          loading: _extends({}, state.dataSource.loading, loadingIds)\n        })\n      }));\n      this.processQueue();\n    };\n    this.setRequestSettled = id => {\n      this.pendingRequests.delete(id);\n      this.settledRequests.add(id);\n      this.processQueue();\n    };\n    this.clear = () => {\n      this.queuedRequests.clear();\n      Array.from(this.pendingRequests).forEach(id => this.clearPendingRequest(id));\n    };\n    this.clearPendingRequest = id => {\n      this.api.unstable_dataSource.setChildrenLoading(id, false);\n      this.pendingRequests.delete(id);\n      this.processQueue();\n    };\n    this.getRequestStatus = id => {\n      if (this.pendingRequests.has(id)) {\n        return RequestStatus.PENDING;\n      }\n      if (this.queuedRequests.has(id)) {\n        return RequestStatus.QUEUED;\n      }\n      if (this.settledRequests.has(id)) {\n        return RequestStatus.SETTLED;\n      }\n      return RequestStatus.UNKNOWN;\n    };\n    this.getActiveRequestsCount = () => this.pendingRequests.size + this.queuedRequests.size;\n    this.api = privateApiRef.current;\n    this.maxConcurrentRequests = maxConcurrentRequests;\n  }\n}", "import { useGridInitialization, useGridInitializeState, useGridClipboard, useGridColumnMenu, useGridColumns, columnsStateInitializer, useGridDensity, useGridCsvExport, useGridPrintExport, useGridFilter, filterStateInitializer, useGridFocus, useGridKeyboardNavigation, useGridPagination, paginationStateInitializer, useGridPreferencesPanel, useGridEditing, editingStateInitializer, useGridRows, useGridRowsPreProcessors, rowsStateInitializer, useGridRowsMeta, useGridParamsApi, useGridRowSelection, useGridSorting, sortingStateInitializer, useGridScroll, useGridEvents, dimensionsStateInitializer, useGridDimensions, useGridStatePersistence, useGridRowSelectionPreProcessors, useGridColumnSpanning, columnMenuStateInitializer, densityStateInitializer, focusStateInitializer, preferencePanelStateInitializer, rowsMetaStateInitializer, rowSelectionStateInitializer, useGridColumnGrouping, columnGroupsStateInitializer, headerFilteringStateInitializer, useGridHeaderFiltering, virtualizationStateInitializer, useGridVirtualization, useGridColumnResize, columnResizeStateInitializer, useGridRowSpanning, rowSpanningStateInitializer, useGridListView, listViewStateInitializer } from '@mui/x-data-grid/internals';\n// Pro-only features\nimport { useGridInfiniteLoader } from \"../hooks/features/infiniteLoader/useGridInfiniteLoader.js\";\nimport { useGridColumnReorder, columnReorderStateInitializer } from \"../hooks/features/columnReorder/useGridColumnReorder.js\";\nimport { useGridTreeData } from \"../hooks/features/treeData/useGridTreeData.js\";\nimport { useGridTreeDataPreProcessors } from \"../hooks/features/treeData/useGridTreeDataPreProcessors.js\";\nimport { useGridDataSourceTreeDataPreProcessors } from \"../hooks/features/serverSideTreeData/useGridDataSourceTreeDataPreProcessors.js\";\nimport { useGridColumnPinning, columnPinningStateInitializer } from \"../hooks/features/columnPinning/useGridColumnPinning.js\";\nimport { useGridColumnPinningPreProcessors } from \"../hooks/features/columnPinning/useGridColumnPinningPreProcessors.js\";\nimport { useGridDetailPanel, detailPanelStateInitializer } from \"../hooks/features/detailPanel/useGridDetailPanel.js\";\nimport { useGridDetailPanelPreProcessors } from \"../hooks/features/detailPanel/useGridDetailPanelPreProcessors.js\";\nimport { useGridRowReorder } from \"../hooks/features/rowReorder/useGridRowReorder.js\";\nimport { useGridRowReorderPreProcessors } from \"../hooks/features/rowReorder/useGridRowReorderPreProcessors.js\";\nimport { useGridLazyLoader } from \"../hooks/features/lazyLoader/useGridLazyLoader.js\";\nimport { useGridLazyLoaderPreProcessors } from \"../hooks/features/lazyLoader/useGridLazyLoaderPreProcessors.js\";\nimport { useGridRowPinning, rowPinningStateInitializer } from \"../hooks/features/rowPinning/useGridRowPinning.js\";\nimport { useGridRowPinningPreProcessors } from \"../hooks/features/rowPinning/useGridRowPinningPreProcessors.js\";\nimport { useGridDataSource, dataSourceStateInitializer } from \"../hooks/features/dataSource/useGridDataSource.js\";\nexport const useDataGridProComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowReorderPreProcessors(apiRef, props);\n  useGridTreeDataPreProcessors(apiRef, props);\n  useGridDataSourceTreeDataPreProcessors(apiRef, props);\n  useGridLazyLoaderPreProcessors(apiRef, props);\n  useGridRowPinningPreProcessors(apiRef);\n  useGridDetailPanelPreProcessors(apiRef, props);\n  // The column pinning `hydrateColumns` pre-processor must be after every other `hydrateColumns` pre-processors\n  // Because it changes the order of the columns.\n  useGridColumnPinningPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(headerFilteringStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(detailPanelStateInitializer, apiRef, props);\n  useGridInitializeState(columnPinningStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowPinningStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnReorderStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(dataSourceStateInitializer, apiRef, props);\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridHeaderFiltering(apiRef, props);\n  useGridTreeData(apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumnPinning(apiRef, props);\n  useGridRowPinning(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridDetailPanel(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnReorder(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridRowReorder(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridInfiniteLoader(apiRef, props);\n  useGridLazyLoader(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridDataSource(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT, DATA_GRID_PROPS_DEFAULT_VALUES } from '@mui/x-data-grid';\nimport { computeSlots, useProps, ROW_SELECTION_PROPAGATION_DEFAULT } from '@mui/x-data-grid/internals';\nimport { DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS } from \"../constants/dataGridProDefaultSlotsComponents.js\";\nconst getDataGridProForcedProps = themedProps => _extends({\n  signature: 'DataGridPro'\n}, themedProps.unstable_dataSource ? {\n  filterMode: 'server',\n  sortingMode: 'server',\n  paginationMode: 'server'\n} : {});\n\n/**\n * The default values of `DataGridProPropsWithDefaultValue` to inject in the props of DataGridPro.\n */\nexport const DATA_GRID_PRO_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, {\n  autosizeOnMount: false,\n  defaultGroupingExpansionDepth: 0,\n  disableAutosize: false,\n  disableChildrenFiltering: false,\n  disableChildrenSorting: false,\n  disableColumnPinning: false,\n  getDetailPanelHeight: () => 500,\n  headerFilters: false,\n  keepColumnPositionIfDraggedOutside: false,\n  rowSelectionPropagation: ROW_SELECTION_PROPAGATION_DEFAULT,\n  rowReordering: false,\n  rowsLoadingMode: 'client',\n  scrollEndThreshold: 80,\n  treeData: false,\n  unstable_listView: false\n});\nconst defaultSlots = DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots\n  }, getDataGridProForcedProps(themedProps)), [themedProps, localeText, slots]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridGenericColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from '@mui/x-data-grid';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridColumnMenuPinningItem } from \"./GridColumnMenuPinningItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS_PRO = _extends({}, GRID_COLUMN_MENU_SLOTS, {\n  columnMenuPinningItem: GridColumnMenuPinningItem\n});\nexport const GRID_COLUMN_MENU_SLOT_PROPS_PRO = _extends({}, GRID_COLUMN_MENU_SLOT_PROPS, {\n  columnMenuPinningItem: {\n    displayOrder: 15\n  }\n});\nexport const GridProColumnMenu = forwardRef(function GridProColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    defaultSlots: GRID_COLUMN_MENU_SLOTS_PRO,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS_PRO,\n    ref: ref\n  }));\n});", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"style\", \"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { GridBaseColumnHeaders } from '@mui/x-data-grid/internals';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  flex: 1,\n  backgroundColor: 'var(--DataGrid-containerBackground)'\n});\nconst GridColumnHeaders = forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className,\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnFiltersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    hasOtherElementInTabSequence,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    className: className\n  }, other, getInnerProps(), {\n    ref: ref,\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow(), getColumnFiltersRow(), /*#__PURE__*/_jsx(Filler, {})]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nexport { GridColumnHeaders };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"getColumnsToRender\", \"getPinnedCellOffset\", \"renderContext\", \"leftRenderContext\", \"rightRenderContext\", \"pinnedColumns\", \"visibleColumns\", \"columnPositions\"];\nimport * as React from 'react';\nimport { gridFocusColumnHeaderFilterSelector, useGridSelector, gridFilterModelSelector, gridTabIndexColumnHeaderFilterSelector, getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { gridColumnsTotalWidthSelector, gridHasFillerSelector, gridHeaderFilterHeightSelector, gridVerticalScrollbarWidthSelector, useGridColumnHeaders as useGridColumnHeadersCommunity, useGridPrivateApiContext, getGridFilter, GridColumnHeaderRow, shouldCellShowLeftBorder, shouldCellShowRightBorder, PinnedColumnPosition } from '@mui/x-data-grid/internals';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      headerFilterRow: ['headerFilterRow']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nconst filterItemsCache = Object.create(null);\nexport const useGridColumnHeaders = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    headerGroupingMaxDepth,\n    hasOtherElementInTabSequence\n  } = props;\n  const columnHeaderFilterTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderFilterSelector);\n  const _useGridColumnHeaders = useGridColumnHeadersCommunity(_extends({}, props, {\n      hasOtherElementInTabSequence: hasOtherElementInTabSequence || columnHeaderFilterTabIndexState !== null\n    })),\n    {\n      getColumnsToRender,\n      getPinnedCellOffset,\n      renderContext,\n      leftRenderContext,\n      rightRenderContext,\n      pinnedColumns,\n      visibleColumns,\n      columnPositions\n    } = _useGridColumnHeaders,\n    otherProps = _objectWithoutPropertiesLoose(_useGridColumnHeaders, _excluded);\n  const headerFiltersRef = React.useRef(null);\n  apiRef.current.register('private', {\n    headerFiltersElementRef: headerFiltersRef\n  });\n  const headerFilterMenuRef = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const disableHeaderFiltering = !rootProps.headerFilters;\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const gridHasFiller = useGridSelector(apiRef, gridHasFillerSelector);\n  const headerFilterHeight = useGridSelector(apiRef, gridHeaderFilterHeightSelector);\n  const scrollbarWidth = useGridSelector(apiRef, gridVerticalScrollbarWidthSelector);\n  const columnHeaderFilterFocus = useGridSelector(apiRef, gridFocusColumnHeaderFilterSelector);\n  const getFilterItem = React.useCallback(colDef => {\n    const filterModelItem = filterModel?.items.find(it => it.field === colDef.field && it.operator !== 'isAnyOf');\n    if (filterModelItem != null) {\n      // there's a valid `filterModelItem` for this column\n      return filterModelItem;\n    }\n    const defaultCachedItem = filterItemsCache[colDef.field];\n    if (defaultCachedItem != null) {\n      // there's a cached `defaultItem` for this column\n      return defaultCachedItem;\n    }\n    // there's no cached `defaultItem` for this column, let's generate one and cache it\n    const defaultItem = getGridFilter(colDef);\n    filterItemsCache[colDef.field] = defaultItem;\n    return defaultItem;\n  }, [filterModel]);\n  const getColumnFilters = params => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const filters = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const hasFocus = columnHeaderFilterFocus?.field === colDef.field;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndexField = columnHeaderFilterTabIndexState?.field;\n      const tabIndex = tabIndexField === colDef.field || isFirstColumn && !props.hasOtherElementInTabSequence ? 0 : -1;\n      const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n        field: colDef.field,\n        colDef\n      }) : colDef.headerClassName;\n      const item = getFilterItem(colDef);\n      const pinnedPosition = params?.position;\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, colDef.computedWidth, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      const indexInSection = i;\n      const sectionLength = renderedColumns.length;\n      const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n      const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n      filters.push(/*#__PURE__*/_jsx(rootProps.slots.headerFilterCell, _extends({\n        colIndex: columnIndex,\n        height: headerFilterHeight,\n        width: colDef.computedWidth,\n        colDef: colDef,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        headerFilterMenuRef: headerFilterMenuRef,\n        headerClassName: headerClassName,\n        \"data-field\": colDef.field,\n        item: item,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        showLeftBorder: showLeftBorder,\n        showRightBorder: showRightBorder\n      }, rootProps.slotProps?.headerFilterCell), `${colDef.field}-filter`));\n    }\n    return otherProps.getFillers(params, filters, 0, true);\n  };\n  const getColumnFiltersRow = () => {\n    if (disableHeaderFiltering) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      ref: headerFiltersRef,\n      className: classes.headerFilterRow,\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 2,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnFilters({\n        position: PinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }), getColumnFilters({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnFilters({\n        position: PinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      })]\n    });\n  };\n  return _extends({}, otherProps, {\n    getColumnFiltersRow\n  });\n};", "import * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass, useGridSelector } from '@mui/x-data-grid';\nimport { EMPTY_DETAIL_PANELS } from '@mui/x-data-grid/internals';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridDetailPanelExpandedRowsContentCacheSelector, gridDetailPanelExpandedRowsHeightCacheSelector, gridDetailPanelExpandedRowIdsSelector } from \"../hooks/features/detailPanel/index.js\";\nimport { GridDetailPanel } from \"./GridDetailPanel.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    detailPanel: ['detailPanel']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nexport function GridDetailPanels(props) {\n  const rootProps = useGridRootProps();\n  if (!rootProps.getDetailPanelContent) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(GridDetailPanelsImpl, props);\n}\nfunction GridDetailPanelsImpl({\n  virtualScroller\n}) {\n  const apiRef = useGridPrivateApiContext();\n  const classes = useUtilityClasses();\n  const {\n    setPanels\n  } = virtualScroller;\n  const expandedRowIds = useGridSelector(apiRef, gridDetailPanelExpandedRowIdsSelector);\n  const detailPanelsContent = useGridSelector(apiRef, gridDetailPanelExpandedRowsContentCacheSelector);\n  const detailPanelsHeights = useGridSelector(apiRef, gridDetailPanelExpandedRowsHeightCacheSelector);\n  const getDetailPanel = React.useCallback(rowId => {\n    const content = detailPanelsContent[rowId];\n\n    // Check if the id exists in the current page\n    const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n    const exists = rowIndex !== undefined;\n    if (! /*#__PURE__*/React.isValidElement(content) || !exists) {\n      return null;\n    }\n    const hasAutoHeight = apiRef.current.detailPanelHasAutoHeight(rowId);\n    const height = hasAutoHeight ? 'auto' : detailPanelsHeights[rowId];\n    return /*#__PURE__*/_jsx(GridDetailPanel, {\n      rowId: rowId,\n      height: height,\n      className: classes.detailPanel,\n      children: content\n    }, `panel-${rowId}`);\n  }, [apiRef, classes.detailPanel, detailPanelsHeights, detailPanelsContent]);\n  React.useEffect(() => {\n    if (expandedRowIds.length === 0) {\n      setPanels(EMPTY_DETAIL_PANELS);\n    } else {\n      setPanels(new Map(expandedRowIds.map(rowId => [rowId, getDetailPanel(rowId)])));\n    }\n  }, [expandedRowIds, setPanels, getDetailPanel]);\n  return null;\n}", "import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DetailPanel = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'DetailPanel',\n  overridesResolver: (props, styles) => styles.detailPanel\n})(({\n  theme\n}) => ({\n  width: 'calc(var(--DataGrid-rowWidth) - var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  overflow: 'auto'\n}));\nfunction GridDetailPanel(props) {\n  const {\n    rowId,\n    height,\n    className,\n    children\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const ownerState = rootProps;\n  const hasAutoHeight = height === 'auto';\n  React.useLayoutEffect(() => {\n    if (hasAutoHeight && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.storeDetailPanelHeight(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, hasAutoHeight, rowId]);\n  useResizeObserver(ref, entries => {\n    const [entry] = entries;\n    const observedHeight = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n    apiRef.current.storeDetailPanelHeight(rowId, observedHeight);\n  }, hasAutoHeight);\n  return /*#__PURE__*/_jsx(DetailPanel, {\n    ref: ref,\n    ownerState: ownerState,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    className: className,\n    children: children\n  });\n}\nexport { GridDetailPanel };", "import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}", "import * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass, gridClasses, useGridSelector } from '@mui/x-data-grid';\nimport { gridPinnedRowsSelector, useGridPrivateApiContext } from '@mui/x-data-grid/internals';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['pinnedRows']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nexport function GridPinnedRows({\n  position,\n  virtualScroller\n}) {\n  const classes = useUtilityClasses();\n  const apiRef = useGridPrivateApiContext();\n  const pinnedRowsData = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rows = pinnedRowsData[position];\n  const pinnedRenderContext = React.useMemo(() => ({\n    firstRowIndex: 0,\n    lastRowIndex: rows.length,\n    firstColumnIndex: -1,\n    lastColumnIndex: -1\n  }), [rows]);\n  if (rows.length === 0) {\n    return null;\n  }\n  const pinnedRows = virtualScroller.getRows({\n    position,\n    rows,\n    renderContext: pinnedRenderContext\n  });\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: clsx(classes.root, gridClasses[`pinnedRows--${position}`]),\n    role: \"presentation\",\n    children: pinnedRows\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridPushPinRightIcon, GridPushPinLeftIcon } from \"./icons.js\";\nconst iconSlots = {\n  columnMenuPinRightIcon: GridPushPinRightIcon,\n  columnMenuPinLeftIcon: GridPushPinLeftIcon\n};\nconst materialSlots = _extends({}, iconSlots);\nexport default materialSlots;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '@mui/x-data-grid/internals';\nimport { GridProColumnMenu } from \"../components/GridProColumnMenu.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridHeaderFilterMenu } from \"../components/headerFiltering/GridHeaderFilterMenu.js\";\nimport { GridHeaderFilterCell } from \"../components/headerFiltering/GridHeaderFilterCell.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport materialSlots from \"../material/index.js\";\nexport const DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS = _extends({}, DATA_GRID_DEFAULT_SLOTS_COMPONENTS, materialSlots, {\n  columnMenu: GridProColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  headerFilterCell: GridHeaderFilterCell,\n  headerFilterMenu: GridHeaderFilterMenu,\n  pinnedRows: GridPinnedRows\n});", "import { ponyfillGlobal } from '@mui/utils';\nexport const getReleaseInfo = () => {\n  const releaseInfo = \"MTczOTc0NjgwMDAwMA==\";\n  if (process.env.NODE_ENV !== 'production') {\n    // A simple hack to set the value in the test environment (has no build step).\n    // eslint-disable-next-line no-useless-concat\n    if (releaseInfo === '__RELEASE' + '_INFO__') {\n      // eslint-disable-next-line no-underscore-dangle\n      return ponyfillGlobal.__MUI_RELEASE_INFO__;\n    }\n  }\n  return releaseInfo;\n};", "import { GridSignature, isNumber, propValidatorsDataGrid } from '@mui/x-data-grid/internals';\nexport const propValidatorsDataGridPro = [...propValidatorsDataGrid, props => props.pagination && props.hideFooterRowCount && 'MUI X: The `hideFooterRowCount` prop has no effect when the pagination is enabled.' || undefined, props => props.treeData && props.filterMode === 'server' && !props.unstable_dataSource && 'MUI X: The `filterMode=\"server\"` prop is not available when the `treeData` is enabled.' || undefined, props => !props.pagination && props.checkboxSelectionVisibleOnly && 'MUI X: The `checkboxSelectionVisibleOnly` prop has no effect when the pagination is not enabled.' || undefined, props => props.signature !== GridSignature.DataGrid && props.paginationMode === 'client' && props.rowsLoadingMode !== 'server' && isNumber(props.rowCount) && 'MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode=\"client\"`) has no effect. `rowCount` is only meant to be used with `paginationMode=\"server\"`.' || undefined];", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridAriaAttributes as useGridAriaAttributesCommunity } from '@mui/x-data-grid/internals';\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nexport const useGridAriaAttributes = () => {\n  const ariaAttributesCommunity = useGridAriaAttributesCommunity();\n  const rootProps = useGridRootProps();\n  const ariaAttributesPro = rootProps.treeData ? {\n    role: 'treegrid'\n  } : {};\n  return _extends({}, ariaAttributesCommunity, ariaAttributesPro);\n};", "import * as React from 'react';\nimport { useGridSelector, gridFilteredTopLevelRowCountSelector, GRID_ROOT_GROUP_ID } from '@mui/x-data-grid';\nimport { useGridRowAriaAttributes as useGridRowAriaAttributesCommunity, gridFilteredChildrenCountLookupSelector, gridExpandedSortedRowTreeLevelPositionLookupSelector } from '@mui/x-data-grid/internals';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nexport const useGridRowAriaAttributes = addTreeDataAttributes => {\n  const apiRef = useGridPrivateApiContext();\n  const props = useGridRootProps();\n  const getRowAriaAttributesCommunity = useGridRowAriaAttributesCommunity();\n  const filteredTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const filteredChildrenCountLookup = useGridSelector(apiRef, gridFilteredChildrenCountLookupSelector);\n  const sortedVisibleRowPositionsLookup = useGridSelector(apiRef, gridExpandedSortedRowTreeLevelPositionLookupSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = getRowAriaAttributesCommunity(rowNode, index);\n    if (rowNode === null || !(props.treeData || addTreeDataAttributes)) {\n      return ariaAttributes;\n    }\n\n    // pinned and footer rows are not part of the rowgroup and should not get the set specific aria attributes\n    if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n      return ariaAttributes;\n    }\n    ariaAttributes['aria-level'] = rowNode.depth + 1;\n    const filteredChildrenCount = filteredChildrenCountLookup[rowNode.id] ?? 0;\n    // aria-expanded should only be added to the rows that contain children\n    if (rowNode.type === 'group' && filteredChildrenCount > 0) {\n      ariaAttributes['aria-expanded'] = Boolean(rowNode.childrenExpanded);\n    }\n\n    // if the parent is null, set size and position cannot be determined\n    if (rowNode.parent !== null) {\n      ariaAttributes['aria-setsize'] = rowNode.parent === GRID_ROOT_GROUP_ID ? filteredTopLevelRowCount : filteredChildrenCountLookup[rowNode.parent];\n      ariaAttributes['aria-posinset'] = sortedVisibleRowPositionsLookup[rowNode.id];\n    }\n    return ariaAttributes;\n  }, [props.treeData, addTreeDataAttributes, filteredTopLevelRowCount, filteredChildrenCountLookup, sortedVisibleRowPositionsLookup, getRowAriaAttributesCommunity]);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnLookupSelector, useGridApiEventHandler, useGridApiMethod } from '@mui/x-data-grid-pro';\nimport { gridAggregationModelSelector } from \"./gridAggregationSelectors.js\";\nimport { getAggregationRules, mergeStateWithAggregationModel, areAggregationRulesEqual } from \"./gridAggregationUtils.js\";\nimport { createAggregationLookup } from \"./createAggregationLookup.js\";\nexport const aggregationStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.aggregation = {\n    rulesOnLastColumnHydration: {},\n    rulesOnLastRowHydration: {}\n  };\n  return _extends({}, state, {\n    aggregation: {\n      model: props.aggregationModel ?? props.initialState?.aggregation?.model ?? {}\n    }\n  });\n};\nexport const useGridAggregation = (apiRef, props) => {\n  apiRef.current.registerControlState({\n    stateId: 'aggregation',\n    propModel: props.aggregationModel,\n    propOnChange: props.onAggregationModelChange,\n    stateSelector: gridAggregationModelSelector,\n    changeEvent: 'aggregationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setAggregationModel = React.useCallback(model => {\n    const currentModel = gridAggregationModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(mergeStateWithAggregationModel(model));\n    }\n  }, [apiRef]);\n  const applyAggregation = React.useCallback(() => {\n    const aggregationLookup = createAggregationLookup({\n      apiRef,\n      getAggregationPosition: props.getAggregationPosition,\n      aggregationFunctions: props.aggregationFunctions,\n      aggregationRowsScope: props.aggregationRowsScope\n    });\n    apiRef.current.setState(state => _extends({}, state, {\n      aggregation: _extends({}, state.aggregation, {\n        lookup: aggregationLookup\n      })\n    }));\n  }, [apiRef, props.getAggregationPosition, props.aggregationFunctions, props.aggregationRowsScope]);\n  const aggregationApi = {\n    setAggregationModel\n  };\n  useGridApiMethod(apiRef, aggregationApi, 'public');\n\n  /**\n   * EVENTS\n   */\n  const checkAggregationRulesDiff = React.useCallback(() => {\n    const {\n      rulesOnLastRowHydration,\n      rulesOnLastColumnHydration\n    } = apiRef.current.caches.aggregation;\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: gridColumnLookupSelector(apiRef),\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n\n    // Re-apply the row hydration to add / remove the aggregation footers\n    if (!areAggregationRulesEqual(rulesOnLastRowHydration, aggregationRules)) {\n      apiRef.current.requestPipeProcessorsApplication('hydrateRows');\n      applyAggregation();\n    }\n\n    // Re-apply the column hydration to wrap / unwrap the aggregated columns\n    if (!areAggregationRulesEqual(rulesOnLastColumnHydration, aggregationRules)) {\n      apiRef.current.requestPipeProcessorsApplication('hydrateColumns');\n    }\n  }, [apiRef, applyAggregation, props.aggregationFunctions, props.disableAggregation]);\n  useGridApiEventHandler(apiRef, 'aggregationModelChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'columnsChange', checkAggregationRulesDiff);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', applyAggregation);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.aggregationModel !== undefined) {\n      apiRef.current.setAggregationModel(props.aggregationModel);\n    }\n  }, [apiRef, props.aggregationModel]);\n};", "import { createSelector } from '@mui/x-data-grid-pro/internals';\nexport const gridAggregationStateSelector = state => state.aggregation;\n\n/**\n * Get the aggregation model, containing the aggregation function of each column.\n * If a column is not in the model, it is not aggregated.\n * @category Aggregation\n */\nexport const gridAggregationModelSelector = createSelector(gridAggregationStateSelector, aggregationState => aggregationState.model);\n\n/**\n * Get the aggregation results as a lookup.\n * @category Aggregation\n */\nexport const gridAggregationLookupSelector = createSelector(gridAggregationStateSelector, aggregationState => aggregationState.lookup);", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { GRID_ID_AUTOGENERATED } from '@mui/x-data-grid/internals';\nimport { GRID_ROOT_GROUP_ID } from '@mui/x-data-grid-pro';\nimport { addPinnedRow, isDeepEqual, insertNodeInTree, removeNodeFromTree } from '@mui/x-data-grid-pro/internals';\nexport const GRID_AGGREGATION_ROOT_FOOTER_ROW_ID = 'auto-generated-group-footer-root';\nexport const getAggregationFooterRowIdFromGroupId = groupId => {\n  if (groupId == null) {\n    return GRID_AGGREGATION_ROOT_FOOTER_ROW_ID;\n  }\n  return `auto-generated-group-footer-${groupId}`;\n};\nexport const canColumnHaveAggregationFunction = ({\n  colDef,\n  aggregationFunctionName,\n  aggregationFunction\n}) => {\n  if (!colDef) {\n    return false;\n  }\n  if (!aggregationFunction) {\n    return false;\n  }\n  if (colDef.availableAggregationFunctions != null) {\n    return colDef.availableAggregationFunctions.includes(aggregationFunctionName);\n  }\n  if (!aggregationFunction.columnTypes) {\n    return true;\n  }\n  return aggregationFunction.columnTypes.includes(colDef.type);\n};\nexport const getAvailableAggregationFunctions = ({\n  aggregationFunctions,\n  colDef\n}) => Object.keys(aggregationFunctions).filter(aggregationFunctionName => canColumnHaveAggregationFunction({\n  colDef,\n  aggregationFunctionName,\n  aggregationFunction: aggregationFunctions[aggregationFunctionName]\n}));\nexport const mergeStateWithAggregationModel = aggregationModel => state => _extends({}, state, {\n  aggregation: _extends({}, state.aggregation, {\n    model: aggregationModel\n  })\n});\nexport const getAggregationRules = ({\n  columnsLookup,\n  aggregationModel,\n  aggregationFunctions\n}) => {\n  const aggregationRules = {};\n  Object.entries(aggregationModel).forEach(([field, columnItem]) => {\n    if (columnsLookup[field] && canColumnHaveAggregationFunction({\n      colDef: columnsLookup[field],\n      aggregationFunctionName: columnItem,\n      aggregationFunction: aggregationFunctions[columnItem]\n    })) {\n      aggregationRules[field] = {\n        aggregationFunctionName: columnItem,\n        aggregationFunction: aggregationFunctions[columnItem]\n      };\n    }\n  });\n  return aggregationRules;\n};\n/**\n * Add a footer for each group that has at least one column with an aggregated value.\n */\nexport const addFooterRows = ({\n  groupingParams,\n  apiRef,\n  getAggregationPosition,\n  hasAggregationRule\n}) => {\n  let newGroupingParams = _extends({}, groupingParams, {\n    tree: _extends({}, groupingParams.tree),\n    treeDepths: _extends({}, groupingParams.treeDepths)\n  });\n  const updateChildGroupFooter = groupNode => {\n    const shouldHaveFooter = hasAggregationRule && getAggregationPosition(groupNode) === 'footer';\n    if (shouldHaveFooter) {\n      const footerId = getAggregationFooterRowIdFromGroupId(groupNode.id);\n      if (groupNode.footerId !== footerId) {\n        if (groupNode.footerId != null) {\n          removeNodeFromTree({\n            node: newGroupingParams.tree[groupNode.footerId],\n            tree: newGroupingParams.tree,\n            treeDepths: newGroupingParams.treeDepths\n          });\n        }\n        const footerNode = {\n          id: footerId,\n          parent: groupNode.id,\n          depth: groupNode ? groupNode.depth + 1 : 0,\n          type: 'footer'\n        };\n        insertNodeInTree(footerNode, newGroupingParams.tree, newGroupingParams.treeDepths, null);\n      }\n    } else if (groupNode.footerId != null) {\n      removeNodeFromTree({\n        node: newGroupingParams.tree[groupNode.footerId],\n        tree: newGroupingParams.tree,\n        treeDepths: newGroupingParams.treeDepths\n      });\n      newGroupingParams.tree[groupNode.id] = _extends({}, newGroupingParams.tree[groupNode.id], {\n        footerId: null\n      });\n    }\n  };\n  const updateRootGroupFooter = groupNode => {\n    const shouldHaveFooter = hasAggregationRule && getAggregationPosition(groupNode) === 'footer' && groupNode.children.length > 0;\n    if (shouldHaveFooter) {\n      const rowId = getAggregationFooterRowIdFromGroupId(null);\n      newGroupingParams = addPinnedRow({\n        groupingParams: newGroupingParams,\n        rowModel: {\n          [GRID_ID_AUTOGENERATED]: rowId\n        },\n        rowId,\n        position: 'bottom',\n        apiRef,\n        isAutoGenerated: true\n      });\n    }\n  };\n  const updateGroupFooter = groupNode => {\n    if (groupNode.id === GRID_ROOT_GROUP_ID) {\n      updateRootGroupFooter(groupNode);\n    } else {\n      updateChildGroupFooter(groupNode);\n    }\n    groupNode.children.forEach(childId => {\n      const childNode = newGroupingParams.tree[childId];\n      if (childNode.type === 'group') {\n        updateGroupFooter(childNode);\n      }\n    });\n  };\n  updateGroupFooter(newGroupingParams.tree[GRID_ROOT_GROUP_ID]);\n  return newGroupingParams;\n};\n\n/**\n * Compares two sets of aggregation rules to determine if they are equal or not.\n */\nexport const areAggregationRulesEqual = (previousValue, newValue) => {\n  const previousFields = Object.keys(previousValue ?? {});\n  const newFields = Object.keys(newValue);\n  if (!isDeepEqual(previousFields, newFields)) {\n    return false;\n  }\n  return newFields.every(field => {\n    const previousRule = previousValue?.[field];\n    const newRule = newValue[field];\n    if (previousRule?.aggregationFunction !== newRule?.aggregationFunction) {\n      return false;\n    }\n    if (previousRule?.aggregationFunctionName !== newRule?.aggregationFunctionName) {\n      return false;\n    }\n    return true;\n  });\n};\nexport const getAggregationFunctionLabel = ({\n  apiRef,\n  aggregationRule\n}) => {\n  if (aggregationRule.aggregationFunction.label != null) {\n    return aggregationRule.aggregationFunction.label;\n  }\n  try {\n    return apiRef.current.getLocaleText(`aggregationFunctionLabel${capitalize(aggregationRule.aggregationFunctionName)}`);\n  } catch {\n    return aggregationRule.aggregationFunctionName;\n  }\n};", "import { gridColumnLookupSelector, gridFilteredRowsLookupSelector, gridRowTreeSelector, GRID_ROOT_GROUP_ID } from '@mui/x-data-grid-pro';\nimport { getAggregationRules } from \"./gridAggregationUtils.js\";\nimport { gridAggregationModelSelector } from \"./gridAggregationSelectors.js\";\nconst getAggregationCellValue = ({\n  apiRef,\n  groupId,\n  field,\n  aggregationFunction,\n  aggregationRowsScope\n}) => {\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const rowIds = apiRef.current.getRowGroupChildren({\n    groupId\n  });\n  const values = [];\n  rowIds.forEach(rowId => {\n    if (aggregationRowsScope === 'filtered' && filteredRowsLookup[rowId] === false) {\n      return;\n    }\n\n    // If the row is a group, we want to aggregate based on its children\n    // For instance in the following tree, we want the aggregated values of A to be based on A.A, A.B.A and A.B.B but not A.B\n    // A\n    //   A.A\n    //   A.B\n    //     A.B.A\n    //     A.B.B\n    const rowNode = apiRef.current.getRowNode(rowId);\n    if (rowNode.type === 'group') {\n      return;\n    }\n    if (typeof aggregationFunction.getCellValue === 'function') {\n      const row = apiRef.current.getRow(rowId);\n      values.push(aggregationFunction.getCellValue({\n        row\n      }));\n    } else {\n      values.push(apiRef.current.getCellValue(rowId, field));\n    }\n  });\n  return aggregationFunction.apply({\n    values,\n    groupId,\n    field // Added per user request in https://github.com/mui/mui-x/issues/6995#issuecomment-1327423455\n  });\n};\nconst getGroupAggregatedValue = ({\n  groupId,\n  apiRef,\n  aggregationRowsScope,\n  aggregatedFields,\n  aggregationRules,\n  position\n}) => {\n  const groupAggregationLookup = {};\n  for (let j = 0; j < aggregatedFields.length; j += 1) {\n    const aggregatedField = aggregatedFields[j];\n    const columnAggregationRules = aggregationRules[aggregatedField];\n    groupAggregationLookup[aggregatedField] = {\n      position,\n      value: getAggregationCellValue({\n        apiRef,\n        groupId,\n        field: aggregatedField,\n        aggregationFunction: columnAggregationRules.aggregationFunction,\n        aggregationRowsScope\n      })\n    };\n  }\n  return groupAggregationLookup;\n};\nexport const createAggregationLookup = ({\n  apiRef,\n  aggregationFunctions,\n  aggregationRowsScope,\n  getAggregationPosition\n}) => {\n  const aggregationRules = getAggregationRules({\n    columnsLookup: gridColumnLookupSelector(apiRef),\n    aggregationModel: gridAggregationModelSelector(apiRef),\n    aggregationFunctions\n  });\n  const aggregatedFields = Object.keys(aggregationRules);\n  if (aggregatedFields.length === 0) {\n    return {};\n  }\n  const aggregationLookup = {};\n  const rowTree = gridRowTreeSelector(apiRef);\n  const createGroupAggregationLookup = groupNode => {\n    for (let i = 0; i < groupNode.children.length; i += 1) {\n      const childId = groupNode.children[i];\n      const childNode = rowTree[childId];\n      if (childNode.type === 'group') {\n        createGroupAggregationLookup(childNode);\n      }\n    }\n    const hasAggregableChildren = groupNode.children.length;\n    if (hasAggregableChildren) {\n      const position = getAggregationPosition(groupNode);\n      if (position != null) {\n        aggregationLookup[groupNode.id] = getGroupAggregatedValue({\n          groupId: groupNode.id,\n          apiRef,\n          aggregatedFields,\n          aggregationRowsScope,\n          aggregationRules,\n          position\n        });\n      }\n    }\n  };\n  createGroupAggregationLookup(rowTree[GRID_ROOT_GROUP_ID]);\n  return aggregationLookup;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { getAvailableAggregationFunctions, addFooterRows, getAggregationRules, mergeStateWithAggregationModel } from \"./gridAggregationUtils.js\";\nimport { wrapColumnWithAggregationValue, unwrapColumnFromAggregation } from \"./wrapColumnWithAggregation.js\";\nimport { gridAggregationModelSelector } from \"./gridAggregationSelectors.js\";\nexport const useGridAggregationPreProcessors = (apiRef, props) => {\n  // apiRef.current.caches.aggregation.rulesOnLastColumnHydration is not used because by the time\n  // that the pre-processor is called it will already have been updated with the current rules.\n  const rulesOnLastColumnHydration = React.useRef({});\n  const updateAggregatedColumns = React.useCallback(columnsState => {\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: columnsState.lookup,\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    columnsState.orderedFields.forEach(field => {\n      const shouldHaveAggregationValue = !!aggregationRules[field];\n      const haveAggregationColumnValue = !!rulesOnLastColumnHydration.current[field];\n      let column = columnsState.lookup[field];\n      if (haveAggregationColumnValue) {\n        column = unwrapColumnFromAggregation({\n          column\n        });\n      }\n      if (shouldHaveAggregationValue) {\n        column = wrapColumnWithAggregationValue({\n          column,\n          aggregationRule: aggregationRules[field],\n          apiRef\n        });\n      }\n      columnsState.lookup[field] = column;\n    });\n    rulesOnLastColumnHydration.current = aggregationRules;\n    apiRef.current.caches.aggregation.rulesOnLastColumnHydration = aggregationRules;\n    return columnsState;\n  }, [apiRef, props.aggregationFunctions, props.disableAggregation]);\n  const addGroupFooterRows = React.useCallback(value => {\n    const aggregationRules = props.disableAggregation ? {} : getAggregationRules({\n      columnsLookup: gridColumnLookupSelector(apiRef),\n      aggregationModel: gridAggregationModelSelector(apiRef),\n      aggregationFunctions: props.aggregationFunctions\n    });\n    const hasAggregationRule = Object.keys(aggregationRules).length > 0;\n\n    // If we did not have any aggregation footer before, and we still don't have any,\n    // Then we can skip this step\n    if (Object.keys(apiRef.current.caches.aggregation.rulesOnLastRowHydration).length === 0 && !hasAggregationRule) {\n      return value;\n    }\n    apiRef.current.caches.aggregation.rulesOnLastRowHydration = aggregationRules;\n    return addFooterRows({\n      apiRef,\n      groupingParams: value,\n      getAggregationPosition: props.getAggregationPosition,\n      hasAggregationRule\n    });\n  }, [apiRef, props.disableAggregation, props.getAggregationPosition, props.aggregationFunctions]);\n  const addColumnMenuButtons = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableAggregation || !colDef.aggregable) {\n      return columnMenuItems;\n    }\n    const availableAggregationFunctions = getAvailableAggregationFunctions({\n      aggregationFunctions: props.aggregationFunctions,\n      colDef\n    });\n    if (availableAggregationFunctions.length === 0) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuAggregationItem'];\n  }, [props.aggregationFunctions, props.disableAggregation]);\n  const stateExportPreProcessing = React.useCallback(prevState => {\n    if (props.disableAggregation) {\n      return prevState;\n    }\n    const aggregationModelToExport = gridAggregationModelSelector(apiRef);\n    if (Object.values(aggregationModelToExport).length === 0) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      aggregation: {\n        model: aggregationModelToExport\n      }\n    });\n  }, [apiRef, props.disableAggregation]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    if (props.disableAggregation) {\n      return params;\n    }\n    const aggregationModel = context.stateToRestore.aggregation?.model;\n    if (aggregationModel != null) {\n      apiRef.current.setState(mergeStateWithAggregationModel(aggregationModel));\n    }\n    return params;\n  }, [apiRef, props.disableAggregation]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateAggregatedColumns);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateRows', addGroupFooterRows);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuButtons);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aggregationWrappedProperties\"];\nimport * as React from 'react';\nimport { gridAggregationLookupSelector } from \"./gridAggregationSelectors.js\";\nimport { GridFooterCell } from \"../../../components/GridFooterCell.js\";\nimport { GridAggregationHeader } from \"../../../components/GridAggregationHeader.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AGGREGATION_WRAPPABLE_PROPERTIES = ['valueGetter', 'valueFormatter', 'renderCell', 'renderHeader', 'filterOperators'];\nconst getAggregationValueWrappedValueGetter = ({\n  value: valueGetter,\n  getCellAggregationResult\n}) => {\n  const wrappedValueGetter = (value, row, column, apiRef) => {\n    const rowId = apiRef.current.getRowId?.(row);\n    const cellAggregationResult = rowId ? getCellAggregationResult(rowId, column.field) : null;\n    if (cellAggregationResult != null) {\n      return cellAggregationResult?.value ?? null;\n    }\n    if (valueGetter) {\n      return valueGetter(value, row, column, apiRef);\n    }\n    return row[column.field];\n  };\n  return wrappedValueGetter;\n};\nconst getAggregationValueWrappedValueFormatter = ({\n  value: valueFormatter,\n  aggregationRule,\n  getCellAggregationResult\n}) => {\n  // If neither the inline aggregation function nor the footer aggregation function have a custom value formatter,\n  // Then we don't wrap the column value formatter\n  if (!aggregationRule.aggregationFunction.valueFormatter) {\n    return valueFormatter;\n  }\n  const wrappedValueFormatter = (value, row, column, apiRef) => {\n    const rowId = apiRef.current.getRowId(row);\n    if (rowId != null) {\n      const cellAggregationResult = getCellAggregationResult(rowId, column.field);\n      if (cellAggregationResult != null) {\n        return aggregationRule.aggregationFunction.valueFormatter?.(value, row, column, apiRef);\n      }\n    }\n    if (valueFormatter) {\n      return valueFormatter(value, row, column, apiRef);\n    }\n    return value;\n  };\n  return wrappedValueFormatter;\n};\nconst getAggregationValueWrappedRenderCell = ({\n  value: renderCell,\n  aggregationRule,\n  getCellAggregationResult\n}) => {\n  const wrappedRenderCell = params => {\n    const cellAggregationResult = getCellAggregationResult(params.id, params.field);\n    if (cellAggregationResult != null) {\n      if (!renderCell) {\n        if (cellAggregationResult.position === 'footer') {\n          return /*#__PURE__*/_jsx(GridFooterCell, _extends({}, params));\n        }\n        return params.formattedValue;\n      }\n      const aggregationMeta = {\n        hasCellUnit: aggregationRule.aggregationFunction.hasCellUnit ?? true,\n        aggregationFunctionName: aggregationRule.aggregationFunctionName\n      };\n      return renderCell(_extends({}, params, {\n        aggregation: aggregationMeta\n      }));\n    }\n    if (!renderCell) {\n      return params.formattedValue;\n    }\n    return renderCell(params);\n  };\n  return wrappedRenderCell;\n};\n\n/**\n * Skips the filtering for aggregated rows\n */\nconst getWrappedFilterOperators = ({\n  value: filterOperators,\n  apiRef,\n  getCellAggregationResult\n}) => filterOperators.map(operator => {\n  const baseGetApplyFilterFn = operator.getApplyFilterFn;\n  const getApplyFilterFn = (filterItem, colDef) => {\n    const filterFn = baseGetApplyFilterFn(filterItem, colDef);\n    if (!filterFn) {\n      return null;\n    }\n    return (value, row, column, api) => {\n      if (getCellAggregationResult(apiRef.current.getRowId(row), column.field) != null) {\n        return true;\n      }\n      return filterFn(value, row, column, api);\n    };\n  };\n  return _extends({}, operator, {\n    getApplyFilterFn\n  });\n});\n\n/**\n * Add the aggregation method around the header name\n */\nconst getWrappedRenderHeader = ({\n  value: renderHeader,\n  aggregationRule\n}) => {\n  const wrappedRenderHeader = params => {\n    return /*#__PURE__*/_jsx(GridAggregationHeader, _extends({}, params, {\n      aggregation: {\n        aggregationRule\n      },\n      renderHeader: renderHeader\n    }));\n  };\n  return wrappedRenderHeader;\n};\n\n/**\n * Add a wrapper around each wrappable property of the column to customize the behavior of the aggregation cells.\n */\nexport const wrapColumnWithAggregationValue = ({\n  column,\n  apiRef,\n  aggregationRule\n}) => {\n  const getCellAggregationResult = (id, field) => {\n    let cellAggregationPosition = null;\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode.type === 'group') {\n      cellAggregationPosition = 'inline';\n    } else if (id.toString().startsWith('auto-generated-group-footer-')) {\n      cellAggregationPosition = 'footer';\n    }\n    if (cellAggregationPosition == null) {\n      return null;\n    }\n\n    // TODO: Add custom root id\n    const groupId = cellAggregationPosition === 'inline' ? id : rowNode.parent ?? '';\n    const aggregationResult = gridAggregationLookupSelector(apiRef)?.[groupId]?.[field];\n    if (!aggregationResult || aggregationResult.position !== cellAggregationPosition) {\n      return null;\n    }\n    return aggregationResult;\n  };\n  let didWrapSomeProperty = false;\n  const wrappedColumn = _extends({}, column, {\n    aggregationWrappedProperties: []\n  });\n  const wrapColumnProperty = (property, wrapper) => {\n    const originalValue = column[property];\n    const wrappedProperty = wrapper({\n      apiRef,\n      value: originalValue,\n      colDef: column,\n      aggregationRule,\n      getCellAggregationResult\n    });\n    if (wrappedProperty !== originalValue) {\n      didWrapSomeProperty = true;\n      wrappedColumn[property] = wrappedProperty;\n      wrappedColumn.aggregationWrappedProperties.push({\n        name: property,\n        originalValue,\n        wrappedValue: wrappedProperty\n      });\n    }\n  };\n  wrapColumnProperty('valueGetter', getAggregationValueWrappedValueGetter);\n  wrapColumnProperty('valueFormatter', getAggregationValueWrappedValueFormatter);\n  wrapColumnProperty('renderCell', getAggregationValueWrappedRenderCell);\n  wrapColumnProperty('renderHeader', getWrappedRenderHeader);\n  wrapColumnProperty('filterOperators', getWrappedFilterOperators);\n  if (!didWrapSomeProperty) {\n    return column;\n  }\n  return wrappedColumn;\n};\n\n/**\n * Remove the aggregation wrappers around the wrappable properties of the column.\n */\nexport const unwrapColumnFromAggregation = ({\n  column\n}) => {\n  if (!column.aggregationWrappedProperties) {\n    return column;\n  }\n  const _ref = column,\n    {\n      aggregationWrappedProperties\n    } = _ref,\n    unwrappedColumn = _objectWithoutPropertiesLoose(_ref, _excluded);\n  aggregationWrappedProperties.forEach(({\n    name,\n    originalValue,\n    wrappedValue\n  }) => {\n    // The value changed since we wrapped it\n    if (wrappedValue !== unwrappedColumn[name]) {\n      return;\n    }\n    unwrappedColumn[name] = originalValue;\n  });\n  return unwrappedColumn;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"formattedValue\", \"colDef\", \"cellMode\", \"row\", \"api\", \"id\", \"value\", \"rowNode\", \"field\", \"focusElementRef\", \"hasFocus\", \"tabIndex\", \"isEditable\"];\nimport * as React from 'react';\nimport { getDataGridUtilityClass } from '@mui/x-data-grid';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridFooterCellRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterCell',\n  overridesResolver: (_, styles) => styles.footerCell\n})(({\n  theme\n}) => ({\n  fontWeight: theme.typography.fontWeightMedium,\n  color: (theme.vars || theme).palette.primary.dark\n}));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridFooterCell(props) {\n  const {\n      formattedValue\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridFooterCellRoot, _extends({\n    ownerState: ownerState,\n    className: classes.root\n  }, other, {\n    children: formattedValue\n  }));\n}\nexport { GridFooterCell };", "import { useGridRootProps as useCommunityGridRootProps } from '@mui/x-data-grid-pro';\nexport const useGridRootProps = useCommunityGridRootProps;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"renderHeader\"];\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses, GridColumnHeaderTitle } from '@mui/x-data-grid';\nimport { getAggregationFunctionLabel } from \"../hooks/features/aggregation/gridAggregationUtils.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridAggregationHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'AggregationColumnHeader',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.aggregationColumnHeader, ownerState.colDef.headerAlign === 'left' && styles['aggregationColumnHeader--alignLeft'], ownerState.colDef.headerAlign === 'center' && styles['aggregationColumnHeader--alignCenter'], ownerState.colDef.headerAlign === 'right' && styles['aggregationColumnHeader--alignRight']];\n  }\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  [`&.${gridClasses['aggregationColumnHeader--alignRight']}`]: {\n    alignItems: 'flex-end'\n  },\n  [`&.${gridClasses['aggregationColumnHeader--alignCenter']}`]: {\n    alignItems: 'center'\n  }\n});\nconst GridAggregationFunctionLabel = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'AggregationColumnHeaderLabel',\n  overridesResolver: (_, styles) => styles.aggregationColumnHeaderLabel\n})(({\n  theme\n}) => {\n  return {\n    fontSize: theme.typography.caption.fontSize,\n    lineHeight: 'normal',\n    color: theme.palette.text.secondary,\n    marginTop: -1\n  };\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    colDef\n  } = ownerState;\n  const slots = {\n    root: ['aggregationColumnHeader', colDef.headerAlign === 'left' && 'aggregationColumnHeader--alignLeft', colDef.headerAlign === 'center' && 'aggregationColumnHeader--alignCenter', colDef.headerAlign === 'right' && 'aggregationColumnHeader--alignRight'],\n    aggregationLabel: ['aggregationColumnHeaderLabel']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridAggregationHeader(props) {\n  const {\n      renderHeader\n    } = props,\n    params = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    colDef,\n    aggregation\n  } = params;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    classes: rootProps.classes,\n    colDef\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (!aggregation) {\n    return null;\n  }\n  const aggregationLabel = getAggregationFunctionLabel({\n    apiRef,\n    aggregationRule: aggregation.aggregationRule\n  });\n  return /*#__PURE__*/_jsxs(GridAggregationHeaderRoot, {\n    ownerState: ownerState,\n    className: classes.root,\n    children: [renderHeader ? renderHeader(params) : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n      label: colDef.headerName ?? colDef.field,\n      description: colDef.description,\n      columnWidth: colDef.computedWidth\n    }), /*#__PURE__*/_jsx(GridAggregationFunctionLabel, {\n      ownerState: ownerState,\n      className: classes.aggregationLabel,\n      children: aggregationLabel\n    })]\n  });\n}\nexport { GridAggregationHeader };", "import { useGridApiContext as useCommunityGridApiContext } from '@mui/x-data-grid';\nexport const useGridApiContext = useCommunityGridApiContext;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiEventHandler, useGridApiMethod, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingModelSelector, gridRowGroupingSanitizedModelSelector } from \"./gridRowGroupingSelector.js\";\nimport { getRowGroupingFieldFromGroupingCriteria, RowGroupingStrategy, isGroupingColumn, mergeStateWithRowGroupingModel, setStrategyAvailability, getGroupingRules, areGroupingRulesEqual } from \"./gridRowGroupingUtils.js\";\nexport const rowGroupingStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowGrouping = {\n    rulesOnLastRowTreeCreation: []\n  };\n  return _extends({}, state, {\n    rowGrouping: {\n      model: props.rowGroupingModel ?? props.initialState?.rowGrouping?.model ?? []\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (state, method) - can be after, async only\n * @requires useGridRows (state, method) - can be after, async only\n * @requires useGridParamsApi (method) - can be after, async only\n */\nexport const useGridRowGrouping = (apiRef, props) => {\n  apiRef.current.registerControlState({\n    stateId: 'rowGrouping',\n    propModel: props.rowGroupingModel,\n    propOnChange: props.onRowGroupingModelChange,\n    stateSelector: gridRowGroupingModelSelector,\n    changeEvent: 'rowGroupingModelChange'\n  });\n\n  /*\n   * API METHODS\n   */\n  const setRowGroupingModel = React.useCallback(model => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(mergeStateWithRowGroupingModel(model));\n      setStrategyAvailability(apiRef, props.disableRowGrouping);\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, props.disableRowGrouping]);\n  const addRowGroupingCriteria = React.useCallback((field, groupingIndex) => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    if (currentModel.includes(field)) {\n      return;\n    }\n    const cleanGroupingIndex = groupingIndex ?? currentModel.length;\n    const updatedModel = [...currentModel.slice(0, cleanGroupingIndex), field, ...currentModel.slice(cleanGroupingIndex)];\n    apiRef.current.setRowGroupingModel(updatedModel);\n  }, [apiRef]);\n  const removeRowGroupingCriteria = React.useCallback(field => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    if (!currentModel.includes(field)) {\n      return;\n    }\n    apiRef.current.setRowGroupingModel(currentModel.filter(el => el !== field));\n  }, [apiRef]);\n  const setRowGroupingCriteriaIndex = React.useCallback((field, targetIndex) => {\n    const currentModel = gridRowGroupingModelSelector(apiRef);\n    const currentTargetIndex = currentModel.indexOf(field);\n    if (currentTargetIndex === -1) {\n      return;\n    }\n    const updatedModel = [...currentModel];\n    updatedModel.splice(targetIndex, 0, updatedModel.splice(currentTargetIndex, 1)[0]);\n    apiRef.current.setRowGroupingModel(updatedModel);\n  }, [apiRef]);\n  const rowGroupingApi = {\n    setRowGroupingModel,\n    addRowGroupingCriteria,\n    removeRowGroupingCriteria,\n    setRowGroupingCriteriaIndex\n  };\n  useGridApiMethod(apiRef, rowGroupingApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addColumnMenuButtons = React.useCallback((columnMenuItems, colDef) => {\n    if (props.disableRowGrouping) {\n      return columnMenuItems;\n    }\n    if (isGroupingColumn(colDef.field) || colDef.groupable) {\n      return [...columnMenuItems, 'columnMenuGroupingItem'];\n    }\n    return columnMenuItems;\n  }, [props.disableRowGrouping]);\n  const addGetRowsParams = React.useCallback(params => {\n    return _extends({}, params, {\n      groupFields: gridRowGroupingModelSelector(apiRef)\n    });\n  }, [apiRef]);\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const rowGroupingModelToExport = gridRowGroupingModelSelector(apiRef);\n    const shouldExportRowGroupingModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.rowGroupingModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.rowGrouping?.model != null ||\n    // Export if the model is not empty\n    Object.keys(rowGroupingModelToExport).length > 0;\n    if (!shouldExportRowGroupingModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      rowGrouping: {\n        model: rowGroupingModelToExport\n      }\n    });\n  }, [apiRef, props.rowGroupingModel, props.initialState?.rowGrouping?.model]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    if (props.disableRowGrouping) {\n      return params;\n    }\n    const rowGroupingModel = context.stateToRestore.rowGrouping?.model;\n    if (rowGroupingModel != null) {\n      apiRef.current.setState(mergeStateWithRowGroupingModel(rowGroupingModel));\n    }\n    return params;\n  }, [apiRef, props.disableRowGrouping]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuButtons);\n  useGridRegisterPipeProcessor(apiRef, 'getRowsParams', addGetRowsParams);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /*\n   * EVENTS\n   */\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (isGroupingColumn(cellParams.field) && event.key === ' ' && !event.shiftKey) {\n      event.stopPropagation();\n      event.preventDefault();\n      if (params.rowNode.type !== 'group') {\n        return;\n      }\n      const isOnGroupingCell = props.rowGroupingColumnMode === 'single' || getRowGroupingFieldFromGroupingCriteria(params.rowNode.groupingField) === params.field;\n      if (!isOnGroupingCell) {\n        return;\n      }\n      if (props.unstable_dataSource && !params.rowNode.childrenExpanded) {\n        apiRef.current.unstable_dataSource.fetchRows(params.id);\n        return;\n      }\n      apiRef.current.setRowChildrenExpansion(params.id, !params.rowNode.childrenExpanded);\n    }\n  }, [apiRef, props.rowGroupingColumnMode, props.unstable_dataSource]);\n  const checkGroupingColumnsModelDiff = React.useCallback(() => {\n    const sanitizedRowGroupingModel = gridRowGroupingSanitizedModelSelector(apiRef);\n    const rulesOnLastRowTreeCreation = apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation || [];\n    const groupingRules = getGroupingRules({\n      sanitizedRowGroupingModel,\n      columnsLookup: gridColumnLookupSelector(apiRef)\n    });\n    if (!areGroupingRulesEqual(rulesOnLastRowTreeCreation, groupingRules)) {\n      apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation = groupingRules;\n      apiRef.current.requestPipeProcessorsApplication('hydrateColumns');\n      setStrategyAvailability(apiRef, props.disableRowGrouping);\n\n      // Refresh the row tree creation strategy processing\n      // TODO: Add a clean way to re-run a strategy processing without publishing a private event\n      if (apiRef.current.getActiveStrategy('rowTree') === RowGroupingStrategy.Default) {\n        apiRef.current.publishEvent('activeStrategyProcessorChange', 'rowTreeCreation');\n      }\n    }\n  }, [apiRef, props.disableRowGrouping]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'columnsChange', checkGroupingColumnsModelDiff);\n  useGridApiEventHandler(apiRef, 'rowGroupingModelChange', checkGroupingColumnsModelDiff);\n  useGridApiEventHandler(apiRef, 'rowGroupingModelChange', () => apiRef.current.unstable_dataSource.fetchRows());\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.rowGroupingModel !== undefined) {\n      apiRef.current.setRowGroupingModel(props.rowGroupingModel);\n    }\n  }, [apiRef, props.rowGroupingModel]);\n};", "import { gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { createSelector, createSelectorMemoized } from '@mui/x-data-grid/internals';\nconst gridRowGroupingStateSelector = state => state.rowGrouping;\nexport const gridRowGroupingModelSelector = createSelector(gridRowGroupingStateSelector, rowGrouping => rowGrouping.model);\nexport const gridRowGroupingSanitizedModelSelector = createSelectorMemoized(gridRowGroupingModelSelector, gridColumnLookupSelector, (model, columnsLookup) => model.filter(field => !!columnsLookup[field]));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { passFilterLogic, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, getRowGroupingCriteriaFromGroupingField, isGroupingColumn } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingSanitizedModelSelector } from \"./gridRowGroupingSelector.js\";\nexport { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, getRowGroupingCriteriaFromGroupingField, isGroupingColumn };\nexport let RowGroupingStrategy = /*#__PURE__*/function (RowGroupingStrategy) {\n  RowGroupingStrategy[\"Default\"] = \"grouping-columns\";\n  RowGroupingStrategy[\"DataSource\"] = \"grouping-columns-data-source\";\n  return RowGroupingStrategy;\n}({});\nexport const getRowGroupingFieldFromGroupingCriteria = groupingCriteria => {\n  if (groupingCriteria === null) {\n    return GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD;\n  }\n  return `__row_group_by_columns_group_${groupingCriteria}__`;\n};\n/**\n * When filtering a group, we only want to filter according to the items related to this grouping column.\n */\nconst shouldApplyFilterItemOnGroup = (columnField, node) => {\n  if (columnField === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return true;\n  }\n  const groupingCriteriaField = getRowGroupingCriteriaFromGroupingField(columnField);\n  return groupingCriteriaField === node.groupingField;\n};\n\n/**\n * A leaf is visible if it passed the filter\n * A group is visible if all the following criteria are met:\n * - One of its children is passing the filter\n * - It is passing the filter\n */\nexport const filterRowTreeFromGroupingColumns = params => {\n  const {\n    apiRef,\n    rowTree,\n    isRowMatchingFilters,\n    filterModel\n  } = params;\n  const filteredRowsLookup = {};\n  const filteredChildrenCountLookup = {};\n  const filteredDescendantCountLookup = {};\n  const filterCache = {};\n  const filterTreeNode = (node, areAncestorsExpanded, ancestorsResults) => {\n    const filterResults = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    let isPassingFiltering = false;\n    if (isRowMatchingFilters && node.type !== 'footer') {\n      const shouldApplyItem = node.type === 'group' && node.isAutoGenerated ? columnField => shouldApplyFilterItemOnGroup(columnField, node) : undefined;\n      const row = apiRef.current.getRow(node.id);\n      isRowMatchingFilters(row, shouldApplyItem, filterResults);\n    } else {\n      isPassingFiltering = true;\n    }\n    let filteredChildrenCount = 0;\n    let filteredDescendantCount = 0;\n    if (node.type === 'group') {\n      node.children.forEach(childId => {\n        const childNode = rowTree[childId];\n        const childSubTreeSize = filterTreeNode(childNode, areAncestorsExpanded && !!node.childrenExpanded, [...ancestorsResults, filterResults]);\n        filteredDescendantCount += childSubTreeSize;\n        if (childSubTreeSize > 0) {\n          filteredChildrenCount += 1;\n        }\n      });\n    }\n    if (isPassingFiltering === false) {\n      if (node.type === 'group') {\n        // If node has children - it's passing if at least one child passes filters\n        isPassingFiltering = filteredDescendantCount > 0;\n      } else {\n        const allResults = [...ancestorsResults, filterResults];\n        isPassingFiltering = passFilterLogic(allResults.map(result => result.passingFilterItems), allResults.map(result => result.passingQuickFilterValues), filterModel, params.apiRef, filterCache);\n      }\n    }\n    filteredRowsLookup[node.id] = isPassingFiltering;\n    if (!isPassingFiltering) {\n      return 0;\n    }\n    filteredChildrenCountLookup[node.id] = filteredChildrenCount;\n    filteredDescendantCountLookup[node.id] = filteredDescendantCount;\n    if (node.type !== 'group') {\n      return filteredDescendantCount + 1;\n    }\n    return filteredDescendantCount;\n  };\n  const nodes = Object.values(rowTree);\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    if (node.depth === 0) {\n      filterTreeNode(node, true, []);\n    }\n  }\n  return {\n    filteredRowsLookup,\n    filteredChildrenCountLookup,\n    filteredDescendantCountLookup\n  };\n};\nexport const getColDefOverrides = (groupingColDefProp, fields, strategy) => {\n  if (typeof groupingColDefProp === 'function') {\n    return groupingColDefProp({\n      groupingName: strategy ?? RowGroupingStrategy.Default,\n      fields\n    });\n  }\n  return groupingColDefProp;\n};\nexport const mergeStateWithRowGroupingModel = rowGroupingModel => state => _extends({}, state, {\n  rowGrouping: _extends({}, state.rowGrouping, {\n    model: rowGroupingModel\n  })\n});\nexport const setStrategyAvailability = (privateApiRef, disableRowGrouping, dataSource) => {\n  let isAvailable;\n  if (disableRowGrouping) {\n    isAvailable = () => false;\n  } else {\n    isAvailable = () => {\n      const rowGroupingSanitizedModel = gridRowGroupingSanitizedModelSelector(privateApiRef);\n      return rowGroupingSanitizedModel.length > 0;\n    };\n  }\n  const strategy = dataSource ? RowGroupingStrategy.DataSource : RowGroupingStrategy.Default;\n  privateApiRef.current.setStrategyAvailability('rowTree', strategy, isAvailable);\n};\nexport const getCellGroupingCriteria = ({\n  row,\n  colDef,\n  groupingRule,\n  apiRef\n}) => {\n  let key;\n  if (groupingRule.groupingValueGetter) {\n    key = groupingRule.groupingValueGetter(row[groupingRule.field], row, colDef, apiRef);\n  } else {\n    key = row[groupingRule.field];\n  }\n  return {\n    key,\n    field: groupingRule.field\n  };\n};\nexport const getGroupingRules = ({\n  sanitizedRowGroupingModel,\n  columnsLookup\n}) => sanitizedRowGroupingModel.map(field => ({\n  field,\n  groupingValueGetter: columnsLookup[field]?.groupingValueGetter\n}));\n\n/**\n * Compares two sets of grouping rules to determine if they are equal or not.\n */\nexport const areGroupingRulesEqual = (newValue, previousValue) => {\n  if (previousValue.length !== newValue.length) {\n    return false;\n  }\n  return newValue.every((newRule, newRuleIndex) => {\n    const previousRule = previousValue[newRuleIndex];\n    if (previousRule.groupingValueGetter !== newRule.groupingValueGetter) {\n      return false;\n    }\n    if (previousRule.field !== newRule.field) {\n      return false;\n    }\n    return true;\n  });\n};", "import * as React from 'react';\nimport { gridColumnLookupSelector, gridRowTreeSelector, useFirstRender, GRID_CHECKBOX_SELECTION_FIELD } from '@mui/x-data-grid-pro';\nimport { useGridRegisterPipeProcessor, useGridRegisterStrategyProcessor, sortRowTree, createRowTree, updateRowTree, getVisibleRowsLookup } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingModelSelector, gridRowGroupingSanitizedModelSelector } from \"./gridRowGroupingSelector.js\";\nimport { createGroupingColDefForAllGroupingCriteria, createGroupingColDefForOneGroupingCriteria } from \"./createGroupingColDef.js\";\nimport { filterRowTreeFromGroupingColumns, getColDefOverrides, RowGroupingStrategy, isGroupingColumn, setStrategyAvailability, getCellGroupingCriteria, getGroupingRules } from \"./gridRowGroupingUtils.js\";\nexport const useGridRowGroupingPreProcessors = (apiRef, props) => {\n  const getGroupingColDefs = React.useCallback(columnsState => {\n    if (props.disableRowGrouping) {\n      return [];\n    }\n    const strategy = props.unstable_dataSource ? RowGroupingStrategy.DataSource : RowGroupingStrategy.Default;\n    const groupingColDefProp = props.groupingColDef;\n\n    // We can't use `gridGroupingRowsSanitizedModelSelector` here because the new columns are not in the state yet\n    const rowGroupingModel = gridRowGroupingModelSelector(apiRef).filter(field => !!columnsState.lookup[field]);\n    if (rowGroupingModel.length === 0) {\n      return [];\n    }\n    switch (props.rowGroupingColumnMode) {\n      case 'single':\n        {\n          return [createGroupingColDefForAllGroupingCriteria({\n            apiRef,\n            rowGroupingModel,\n            colDefOverride: getColDefOverrides(groupingColDefProp, rowGroupingModel, strategy),\n            columnsLookup: columnsState.lookup,\n            strategy\n          })];\n        }\n      case 'multiple':\n        {\n          return rowGroupingModel.map(groupingCriteria => createGroupingColDefForOneGroupingCriteria({\n            groupingCriteria,\n            colDefOverride: getColDefOverrides(groupingColDefProp, [groupingCriteria]),\n            groupedByColDef: columnsState.lookup[groupingCriteria],\n            columnsLookup: columnsState.lookup,\n            strategy\n          }));\n        }\n      default:\n        {\n          return [];\n        }\n    }\n  }, [apiRef, props.groupingColDef, props.rowGroupingColumnMode, props.disableRowGrouping, props.unstable_dataSource]);\n  const updateGroupingColumn = React.useCallback(columnsState => {\n    const groupingColDefs = getGroupingColDefs(columnsState);\n    let newColumnFields = [];\n    const newColumnsLookup = {};\n    const prevGroupingfields = [];\n\n    // We only keep the non-grouping columns\n    columnsState.orderedFields.forEach(field => {\n      if (isGroupingColumn(field)) {\n        prevGroupingfields.push(field);\n      } else {\n        newColumnFields.push(field);\n        newColumnsLookup[field] = columnsState.lookup[field];\n      }\n    });\n\n    // We add the grouping column\n    groupingColDefs.forEach(groupingColDef => {\n      const matchingGroupingColDef = columnsState.lookup[groupingColDef.field];\n      if (matchingGroupingColDef) {\n        groupingColDef.width = matchingGroupingColDef.width;\n        groupingColDef.flex = matchingGroupingColDef.flex;\n      }\n      newColumnsLookup[groupingColDef.field] = groupingColDef;\n    });\n    if (prevGroupingfields.length !== groupingColDefs.length) {\n      const startIndex = newColumnFields[0] === GRID_CHECKBOX_SELECTION_FIELD ? 1 : 0;\n      newColumnFields = [...newColumnFields.slice(0, startIndex), ...groupingColDefs.map(colDef => colDef.field), ...newColumnFields.slice(startIndex)];\n      columnsState.orderedFields = newColumnFields;\n    }\n    columnsState.lookup = newColumnsLookup;\n    return columnsState;\n  }, [getGroupingColDefs]);\n  const createRowTreeForRowGrouping = React.useCallback(params => {\n    const sanitizedRowGroupingModel = gridRowGroupingSanitizedModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const groupingRules = getGroupingRules({\n      sanitizedRowGroupingModel,\n      columnsLookup\n    });\n    apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation = groupingRules;\n    const getRowTreeBuilderNode = rowId => {\n      const row = params.dataRowIdToModelLookup[rowId];\n      const parentPath = groupingRules.map(groupingRule => getCellGroupingCriteria({\n        row,\n        groupingRule,\n        colDef: columnsLookup[groupingRule.field],\n        apiRef\n      })).filter(cell => cell.key != null);\n      const leafGroupingCriteria = {\n        key: rowId.toString(),\n        field: null\n      };\n      return {\n        path: [...parentPath, leafGroupingCriteria],\n        id: rowId\n      };\n    };\n    if (params.updates.type === 'full') {\n      return createRowTree({\n        previousTree: params.previousTree,\n        nodes: params.updates.rows.map(getRowTreeBuilderNode),\n        defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n        isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n        groupingName: RowGroupingStrategy.Default\n      });\n    }\n    return updateRowTree({\n      nodes: {\n        inserted: params.updates.actions.insert.map(getRowTreeBuilderNode),\n        modified: params.updates.actions.modify.map(getRowTreeBuilderNode),\n        removed: params.updates.actions.remove\n      },\n      previousTree: params.previousTree,\n      previousTreeDepth: params.previousTreeDepths,\n      defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n      isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n      groupingName: RowGroupingStrategy.Default\n    });\n  }, [apiRef, props.defaultGroupingExpansionDepth, props.isGroupExpandedByDefault]);\n  const filterRows = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    return filterRowTreeFromGroupingColumns({\n      rowTree,\n      isRowMatchingFilters: params.isRowMatchingFilters,\n      filterModel: params.filterModel,\n      apiRef\n    });\n  }, [apiRef]);\n  const sortRows = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    return sortRowTree({\n      rowTree,\n      sortRowList: params.sortRowList,\n      disableChildrenSorting: false,\n      shouldRenderGroupBelowLeaves: true\n    });\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateGroupingColumn);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.Default, 'rowTreeCreation', createRowTreeForRowGrouping);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.Default, 'filtering', filterRows);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.Default, 'sorting', sortRows);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.Default, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n  useFirstRender(() => {\n    setStrategyAvailability(apiRef, props.disableRowGrouping, props.unstable_dataSource);\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (!isFirstRender.current) {\n      setStrategyAvailability(apiRef, props.disableRowGrouping, props.unstable_dataSource);\n    } else {\n      isFirstRender.current = false;\n    }\n  }, [apiRef, props.disableRowGrouping, props.unstable_dataSource]);\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"leafField\", \"mainGroupingCriteria\", \"hideDescendantCount\"],\n  _excluded2 = [\"leafField\", \"mainGroupingCriteria\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport { GRID_STRING_COL_DEF } from '@mui/x-data-grid-pro';\nimport { isSingleSelectColDef } from '@mui/x-data-grid-pro/internals';\nimport { GridGroupingColumnFooterCell } from \"../../../components/GridGroupingColumnFooterCell.js\";\nimport { GridGroupingCriteriaCell } from \"../../../components/GridGroupingCriteriaCell.js\";\nimport { GridDataSourceGroupingCriteriaCell } from \"../../../components/GridDataSourceGroupingCriteriaCell.js\";\nimport { GridGroupingColumnLeafCell } from \"../../../components/GridGroupingColumnLeafCell.js\";\nimport { getRowGroupingFieldFromGroupingCriteria, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, RowGroupingStrategy } from \"./gridRowGroupingUtils.js\";\nimport { gridRowGroupingSanitizedModelSelector } from \"./gridRowGroupingSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GROUPING_COL_DEF_DEFAULT_PROPERTIES = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'custom',\n  disableReorder: true\n});\nconst GROUPING_COL_DEF_FORCED_PROPERTIES_DEFAULT = {\n  editable: false,\n  groupable: false\n};\nconst GROUPING_COL_DEF_FORCED_PROPERTIES_DATA_SOURCE = _extends({}, GROUPING_COL_DEF_FORCED_PROPERTIES_DEFAULT, {\n  // TODO: Support these features on the grouping column(s)\n  filterable: false,\n  sortable: false\n});\n\n/**\n * When sorting two cells with different grouping criteria, we consider that the cell with the grouping criteria coming first in the model should be displayed below.\n * This can occur when some rows don't have all the fields. In which case we want the rows with the missing field to be displayed above.\n * TODO: Make this index comparator depth invariant, the logic should not be inverted when sorting in the \"desc\" direction (but the current return format of `sortComparator` does not support this behavior).\n */\nconst groupingFieldIndexComparator = (v1, v2, cellParams1, cellParams2) => {\n  const model = gridRowGroupingSanitizedModelSelector(cellParams1.api.state, cellParams1.api.instanceId);\n  const groupingField1 = cellParams1.rowNode.groupingField ?? null;\n  const groupingField2 = cellParams2.rowNode.groupingField ?? null;\n  if (groupingField1 === groupingField2) {\n    return 0;\n  }\n  if (groupingField1 == null) {\n    return -1;\n  }\n  if (groupingField2 == null) {\n    return 1;\n  }\n  if (model.indexOf(groupingField1) < model.indexOf(groupingField2)) {\n    return -1;\n  }\n  return 1;\n};\nconst getLeafProperties = leafColDef => ({\n  headerName: leafColDef.headerName ?? leafColDef.field,\n  sortable: leafColDef.sortable,\n  filterable: leafColDef.filterable,\n  valueOptions: isSingleSelectColDef(leafColDef) ? leafColDef.valueOptions : undefined,\n  filterOperators: leafColDef.filterOperators,\n  sortComparator: (v1, v2, cellParams1, cellParams2) => {\n    // We only want to sort the leaves\n    if (cellParams1.rowNode.type === 'leaf' && cellParams2.rowNode.type === 'leaf') {\n      return leafColDef.sortComparator(v1, v2, cellParams1, cellParams2);\n    }\n    return groupingFieldIndexComparator(v1, v2, cellParams1, cellParams2);\n  }\n});\nconst groupedByColValueFormatter = groupedByColDef => (value, row, _, apiRef) => groupedByColDef.valueFormatter(value, row, groupedByColDef, apiRef);\nconst getGroupingCriteriaProperties = (groupedByColDef, applyHeaderName) => {\n  const properties = {\n    sortable: groupedByColDef.sortable,\n    filterable: groupedByColDef.filterable,\n    valueFormatter: groupedByColDef.valueFormatter ? groupedByColValueFormatter(groupedByColDef) : undefined,\n    valueOptions: isSingleSelectColDef(groupedByColDef) ? groupedByColDef.valueOptions : undefined,\n    sortComparator: (v1, v2, cellParams1, cellParams2) => {\n      // We only want to sort the groups of the current grouping criteria\n      if (cellParams1.rowNode.type === 'group' && cellParams2.rowNode.type === 'group' && cellParams1.rowNode.groupingField === cellParams2.rowNode.groupingField) {\n        const colDef = cellParams1.api.getColumn(cellParams1.rowNode.groupingField);\n        return colDef.sortComparator(v1, v2, cellParams1, cellParams2);\n      }\n      return groupingFieldIndexComparator(v1, v2, cellParams1, cellParams2);\n    },\n    filterOperators: groupedByColDef.filterOperators\n  };\n  if (applyHeaderName) {\n    properties.headerName = groupedByColDef.headerName ?? groupedByColDef.field;\n  }\n  return properties;\n};\n/**\n * Creates the `GridColDef` for a grouping column that only takes care of a single grouping criteria\n */\nexport const createGroupingColDefForOneGroupingCriteria = ({\n  columnsLookup,\n  groupedByColDef,\n  groupingCriteria,\n  colDefOverride,\n  strategy = RowGroupingStrategy.Default\n}) => {\n  const _ref = colDefOverride ?? {},\n    {\n      leafField,\n      mainGroupingCriteria,\n      hideDescendantCount\n    } = _ref,\n    colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const leafColDef = leafField ? columnsLookup[leafField] : null;\n  const CriteriaCell = strategy === RowGroupingStrategy.Default ? GridGroupingCriteriaCell : GridDataSourceGroupingCriteriaCell;\n\n  // The properties that do not depend on the presence of a `leafColDef` and that can be overridden by `colDefOverride`\n  const commonProperties = {\n    width: Math.max((groupedByColDef.width ?? GRID_STRING_COL_DEF.width) + 40, leafColDef?.width ?? 0),\n    renderCell: params => {\n      // Render footer\n      if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n        return /*#__PURE__*/_jsx(GridGroupingColumnFooterCell, _extends({}, params));\n      }\n\n      // Render leaves\n      if (params.rowNode.type === 'leaf') {\n        if (leafColDef) {\n          const leafParams = _extends({}, params.api.getCellParams(params.id, leafField), {\n            api: params.api,\n            hasFocus: params.hasFocus\n          });\n          if (leafColDef.renderCell) {\n            return leafColDef.renderCell(leafParams);\n          }\n          return /*#__PURE__*/_jsx(GridGroupingColumnLeafCell, _extends({}, leafParams));\n        }\n        return '';\n      }\n\n      // Render current grouping criteria groups\n      if (params.rowNode.groupingField === groupingCriteria) {\n        return /*#__PURE__*/_jsx(CriteriaCell, _extends({}, params, {\n          hideDescendantCount: hideDescendantCount\n        }));\n      }\n      return '';\n    },\n    valueGetter: (value, row, column, apiRef) => {\n      const rowId = apiRef.current.getRowId(row);\n      const rowNode = apiRef.current.getRowNode(rowId);\n      if (!rowNode || rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n        return undefined;\n      }\n      if (rowNode.type === 'leaf') {\n        if (leafColDef) {\n          return apiRef.current.getCellValue(rowId, leafField);\n        }\n        return undefined;\n      }\n      if (rowNode.groupingField === groupingCriteria) {\n        return rowNode.groupingKey;\n      }\n      return undefined;\n    }\n  };\n\n  // If we have a `mainGroupingCriteria` defined and matching the `groupingCriteria`\n  // Then we apply the sorting / filtering on the groups of this column's grouping criteria based on the properties of `groupedByColDef`.\n  // It can be useful to define a `leafField` for leaves rendering but still use the grouping criteria for the sorting / filtering\n  //\n  // If we have a `leafField` defined and matching an existing column\n  // Then we apply the sorting / filtering on the leaves based on the properties of `leavesColDef`\n  //\n  // By default, we apply the sorting / filtering on the groups of this column's grouping criteria based on the properties of `groupedColDef`.\n  let sourceProperties;\n  if (mainGroupingCriteria && mainGroupingCriteria === groupingCriteria) {\n    sourceProperties = getGroupingCriteriaProperties(groupedByColDef, true);\n  } else if (leafColDef) {\n    sourceProperties = getLeafProperties(leafColDef);\n  } else {\n    sourceProperties = getGroupingCriteriaProperties(groupedByColDef, true);\n  }\n\n  // The properties that can't be overridden with `colDefOverride`\n  const forcedProperties = _extends({\n    field: getRowGroupingFieldFromGroupingCriteria(groupingCriteria)\n  }, GROUPING_COL_DEF_FORCED_PROPERTIES_DEFAULT);\n  return _extends({}, GROUPING_COL_DEF_DEFAULT_PROPERTIES, commonProperties, sourceProperties, colDefOverrideProperties, forcedProperties);\n};\n/**\n * Creates the `GridColDef` for a grouping column that takes care of all the grouping criteria\n */\nexport const createGroupingColDefForAllGroupingCriteria = ({\n  apiRef,\n  columnsLookup,\n  rowGroupingModel,\n  colDefOverride,\n  strategy = RowGroupingStrategy.Default\n}) => {\n  const _ref2 = colDefOverride ?? {},\n    {\n      leafField,\n      mainGroupingCriteria,\n      hideDescendantCount\n    } = _ref2,\n    colDefOverrideProperties = _objectWithoutPropertiesLoose(_ref2, _excluded2);\n  const leafColDef = leafField ? columnsLookup[leafField] : null;\n  const CriteriaCell = strategy === RowGroupingStrategy.Default ? GridGroupingCriteriaCell : GridDataSourceGroupingCriteriaCell;\n\n  // The properties that do not depend on the presence of a `leafColDef` and that can be overridden by `colDefOverride`\n  const commonProperties = {\n    headerName: apiRef.current.getLocaleText('groupingColumnHeaderName'),\n    width: Math.max(...rowGroupingModel.map(field => (columnsLookup[field].width ?? GRID_STRING_COL_DEF.width) + 40), leafColDef?.width ?? 0),\n    renderCell: params => {\n      // Render footer\n      if (params.rowNode.type === 'footer' || params.rowNode.type === 'pinnedRow') {\n        return /*#__PURE__*/_jsx(GridGroupingColumnFooterCell, _extends({}, params));\n      }\n\n      // Render the leaves\n      if (params.rowNode.type === 'leaf') {\n        if (leafColDef) {\n          const leafParams = _extends({}, params.api.getCellParams(params.id, leafField), {\n            api: params.api,\n            hasFocus: params.hasFocus\n          });\n          if (leafColDef.renderCell) {\n            return leafColDef.renderCell(leafParams);\n          }\n          return /*#__PURE__*/_jsx(GridGroupingColumnLeafCell, _extends({}, leafParams));\n        }\n        return '';\n      }\n\n      // Render the groups\n      return /*#__PURE__*/_jsx(CriteriaCell, _extends({}, params, {\n        hideDescendantCount: hideDescendantCount\n      }));\n    },\n    valueGetter: (value, row) => {\n      const rowId = apiRef.current.getRowId(row);\n      const rowNode = apiRef.current.getRowNode(rowId);\n      if (!rowNode || rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n        return undefined;\n      }\n      if (rowNode.type === 'leaf') {\n        if (leafColDef) {\n          return apiRef.current.getCellValue(rowId, leafField);\n        }\n        return undefined;\n      }\n      return rowNode.groupingKey;\n    }\n  };\n\n  // If we have a `mainGroupingCriteria` defined and matching one of the `orderedGroupedByFields`\n  // Then we apply the sorting / filtering on the groups of this column's grouping criteria based on the properties of `columnsLookup[mainGroupingCriteria]`.\n  // It can be useful to use another grouping criteria than the top level one for the sorting / filtering\n  //\n  // If we have a `leafField` defined and matching an existing column\n  // Then we apply the sorting / filtering on the leaves based on the properties of `leavesColDef`\n  //\n  // By default, we apply the sorting / filtering on the groups of the top level grouping criteria based on the properties of `columnsLookup[orderedGroupedByFields[0]]`.\n  let sourceProperties;\n  if (mainGroupingCriteria && rowGroupingModel.includes(mainGroupingCriteria)) {\n    sourceProperties = getGroupingCriteriaProperties(columnsLookup[mainGroupingCriteria], true);\n  } else if (leafColDef) {\n    sourceProperties = getLeafProperties(leafColDef);\n  } else {\n    sourceProperties = getGroupingCriteriaProperties(columnsLookup[rowGroupingModel[0]], rowGroupingModel.length === 1);\n  }\n\n  // The properties that can't be overridden with `colDefOverride`\n  const forcedProperties = _extends({\n    field: GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD\n  }, strategy === RowGroupingStrategy.Default ? GROUPING_COL_DEF_FORCED_PROPERTIES_DEFAULT : GROUPING_COL_DEF_FORCED_PROPERTIES_DATA_SOURCE);\n  return _extends({}, GROUPING_COL_DEF_DEFAULT_PROPERTIES, commonProperties, sourceProperties, colDefOverrideProperties, forcedProperties);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridFooterCell } from \"./GridFooterCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridGroupingColumnFooterCell(props) {\n  const rootProps = useGridRootProps();\n  const sx = {\n    ml: 0\n  };\n  if (props.rowNode.parent == null) {\n    sx.ml = 0;\n  } else if (rootProps.rowGroupingColumnMode === 'multiple') {\n    sx.ml = 2;\n  } else {\n    sx.ml = theme => `calc(var(--DataGrid-cellOffsetMultiplier) * ${theme.spacing(props.rowNode.depth)})`;\n  }\n  return /*#__PURE__*/_jsx(GridFooterCell, _extends({\n    sx: sx\n  }, props));\n}\nexport { GridGroupingColumnFooterCell };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Box from '@mui/material/Box';\nimport { useGridSelector, gridFilteredDescendantCountLookupSelector, getDataGridUtilityClass } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['groupingCriteriaCell'],\n    toggle: ['groupingCriteriaCellToggle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport function GridGroupingCriteriaCell(props) {\n  const {\n    id,\n    field,\n    rowNode,\n    hideDescendantCount,\n    formattedValue\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const filteredDescendantCountLookup = useGridSelector(apiRef, gridFilteredDescendantCountLookupSelector);\n  const filteredDescendantCount = filteredDescendantCountLookup[rowNode.id] ?? 0;\n  const Icon = rowNode.childrenExpanded ? rootProps.slots.groupingCriteriaCollapseIcon : rootProps.slots.groupingCriteriaExpandIcon;\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid unfolding the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n    apiRef.current.publishEvent('cellKeyDown', props, event);\n  };\n  const handleClick = event => {\n    apiRef.current.setRowChildrenExpansion(id, !rowNode.childrenExpanded);\n    apiRef.current.setCellFocus(id, field);\n    event.stopPropagation();\n  };\n  let cellContent;\n  const colDef = apiRef.current.getColumn(rowNode.groupingField);\n  if (typeof colDef.renderCell === 'function') {\n    cellContent = colDef.renderCell(props);\n  } else if (typeof formattedValue !== 'undefined') {\n    cellContent = /*#__PURE__*/_jsx(\"span\", {\n      children: formattedValue\n    });\n  } else {\n    cellContent = /*#__PURE__*/_jsx(\"span\", {\n      children: rowNode.groupingKey\n    });\n  }\n  return /*#__PURE__*/_jsxs(Box, {\n    className: classes.root,\n    sx: [rootProps.rowGroupingColumnMode === 'multiple' ? {\n      ml: 0\n    } : theme => ({\n      ml: `calc(var(--DataGrid-cellOffsetMultiplier) * var(--depth) * ${theme.spacing(1)})`\n    })],\n    style: {\n      '--depth': rowNode.depth\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.toggle,\n      children: filteredDescendantCount > 0 && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        size: \"small\",\n        onClick: handleClick,\n        onKeyDown: handleKeyDown,\n        tabIndex: -1,\n        \"aria-label\": rowNode.childrenExpanded ? apiRef.current.getLocaleText('treeDataCollapse') : apiRef.current.getLocaleText('treeDataExpand')\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(Icon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }), cellContent, !hideDescendantCount && filteredDescendantCount > 0 ? /*#__PURE__*/_jsxs(\"span\", {\n      style: {\n        whiteSpace: 'pre'\n      },\n      children: [\" (\", filteredDescendantCount, \")\"]\n    }) : null]\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useGridPrivateApiContext } from '@mui/x-data-grid-pro/internals';\nimport { useGridSelector, getDataGridUtilityClass } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['groupingCriteriaCell'],\n    toggle: ['groupingCriteriaCellToggle'],\n    loadingContainer: ['groupingCriteriaCellLoadingContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridGroupingCriteriaCellIcon(props) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const {\n    rowNode,\n    id,\n    field,\n    descendantCount\n  } = props;\n  const loadingSelector = state => state.dataSource.loading[id] ?? false;\n  const errorSelector = state => state.dataSource.errors[id];\n  const isDataLoading = useGridSelector(apiRef, loadingSelector);\n  const error = useGridSelector(apiRef, errorSelector);\n  const handleClick = event => {\n    if (!rowNode.childrenExpanded) {\n      // always fetch/get from cache the children when the node is expanded\n      apiRef.current.unstable_dataSource.fetchRows(id);\n    } else {\n      apiRef.current.setRowChildrenExpansion(id, !rowNode.childrenExpanded);\n    }\n    apiRef.current.setCellFocus(id, field);\n    event.stopPropagation();\n  };\n  const Icon = rowNode.childrenExpanded ? rootProps.slots.groupingCriteriaCollapseIcon : rootProps.slots.groupingCriteriaExpandIcon;\n  if (isDataLoading) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: classes.loadingContainer,\n      children: /*#__PURE__*/_jsx(CircularProgress, {\n        size: \"1rem\",\n        color: \"inherit\"\n      })\n    });\n  }\n  return descendantCount > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    size: \"small\",\n    onClick: handleClick,\n    tabIndex: -1,\n    \"aria-label\": rowNode.childrenExpanded ? apiRef.current.getLocaleText('treeDataCollapse') : apiRef.current.getLocaleText('treeDataExpand')\n  }, rootProps?.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, {\n      title: error?.message ?? null,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        variant: \"dot\",\n        color: \"error\",\n        invisible: !error,\n        children: /*#__PURE__*/_jsx(Icon, {\n          fontSize: \"inherit\"\n        })\n      })\n    })\n  })) : null;\n}\nexport function GridDataSourceGroupingCriteriaCell(props) {\n  const {\n    id,\n    field,\n    rowNode,\n    hideDescendantCount,\n    formattedValue\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const rowSelector = state => state.rows.dataRowIdToModelLookup[id];\n  const row = useGridSelector(apiRef, rowSelector);\n  const classes = useUtilityClasses(rootProps);\n  let descendantCount = 0;\n  if (row) {\n    descendantCount = Math.max(rootProps.unstable_dataSource?.getChildrenCount?.(row) ?? 0, 0);\n  }\n  let cellContent;\n  const colDef = apiRef.current.getColumn(rowNode.groupingField);\n  if (typeof colDef?.renderCell === 'function') {\n    cellContent = colDef.renderCell(props);\n  } else if (typeof formattedValue !== 'undefined') {\n    cellContent = /*#__PURE__*/_jsx(\"span\", {\n      children: formattedValue\n    });\n  } else {\n    cellContent = /*#__PURE__*/_jsx(\"span\", {\n      children: rowNode.groupingKey\n    });\n  }\n  return /*#__PURE__*/_jsxs(Box, {\n    className: classes.root,\n    sx: {\n      ml: rootProps.rowGroupingColumnMode === 'multiple' ? 0 : theme => `calc(var(--DataGrid-cellOffsetMultiplier) * ${theme.spacing(rowNode.depth)})`\n    },\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.toggle,\n      children: /*#__PURE__*/_jsx(GridGroupingCriteriaCellIcon, {\n        id: id,\n        field: field,\n        rowNode: rowNode,\n        row: row,\n        descendantCount: descendantCount\n      })\n    }), cellContent, !hideDescendantCount && descendantCount > 0 ? /*#__PURE__*/_jsxs(\"span\", {\n      style: {\n        whiteSpace: 'pre'\n      },\n      children: [\" (\", descendantCount, \")\"]\n    }) : null]\n  });\n}", "import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridGroupingColumnLeafCell(props) {\n  const {\n    rowNode\n  } = props;\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(Box, {\n    sx: [rootProps.rowGroupingColumnMode === 'multiple' ? {\n      ml: 1\n    } : theme => ({\n      ml: `calc(var(--DataGrid-cellOffsetMultiplier) * var(--depth) * ${theme.spacing(1)})`\n    })],\n    style: {\n      '--depth': rowNode.depth\n    },\n    children: props.formattedValue ?? props.value\n  });\n}\nexport { GridGroupingColumnLeafCell };", "import * as React from 'react';\nimport { gridRowTreeSelector, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridRegisterStrategyProcessor, createRowTree, updateRowTree, getVisibleRowsLookup, skipSorting, skipFiltering } from '@mui/x-data-grid-pro/internals';\nimport { getGroupingRules, RowGroupingStrategy } from \"./gridRowGroupingUtils.js\";\nimport { gridRowGroupingSanitizedModelSelector } from \"./gridRowGroupingSelector.js\";\nexport const useGridDataSourceRowGroupingPreProcessors = (apiRef, props) => {\n  const createRowTreeForRowGrouping = React.useCallback(params => {\n    const getGroupKey = props.unstable_dataSource?.getGroupKey;\n    if (!getGroupKey) {\n      throw new Error('MUI X: No `getGroupKey` method provided with the dataSource.');\n    }\n    const getChildrenCount = props.unstable_dataSource?.getChildrenCount;\n    if (!getChildrenCount) {\n      throw new Error('MUI X: No `getChildrenCount` method provided with the dataSource.');\n    }\n    const sanitizedRowGroupingModel = gridRowGroupingSanitizedModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const groupingRules = getGroupingRules({\n      sanitizedRowGroupingModel,\n      columnsLookup\n    });\n    apiRef.current.caches.rowGrouping.rulesOnLastRowTreeCreation = groupingRules;\n    const getRowTreeBuilderNode = rowId => {\n      const parentPath = params.updates.groupKeys ?? [];\n      const row = params.dataRowIdToModelLookup[rowId];\n      const groupingRule = groupingRules[parentPath.length];\n      const groupingValueGetter = groupingRule?.groupingValueGetter;\n      const leafKey = groupingValueGetter?.(row[groupingRule.field], row, columnsLookup[groupingRule.field], apiRef) ?? getGroupKey(params.dataRowIdToModelLookup[rowId]);\n      return {\n        id: rowId,\n        path: [...parentPath, leafKey ?? rowId.toString()].map((key, i) => ({\n          key,\n          field: groupingRules[i]?.field ?? null\n        })),\n        serverChildrenCount: getChildrenCount(params.dataRowIdToModelLookup[rowId]) ?? 0\n      };\n    };\n    if (params.updates.type === 'full') {\n      return createRowTree({\n        previousTree: params.previousTree,\n        nodes: params.updates.rows.map(getRowTreeBuilderNode),\n        defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n        isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n        groupingName: RowGroupingStrategy.DataSource\n      });\n    }\n    return updateRowTree({\n      nodes: {\n        inserted: params.updates.actions.insert.map(getRowTreeBuilderNode),\n        modified: params.updates.actions.modify.map(getRowTreeBuilderNode),\n        removed: params.updates.actions.remove\n      },\n      previousTree: params.previousTree,\n      previousGroupsToFetch: params.previousGroupsToFetch,\n      previousTreeDepth: params.previousTreeDepths,\n      defaultGroupingExpansionDepth: props.defaultGroupingExpansionDepth,\n      isGroupExpandedByDefault: props.isGroupExpandedByDefault,\n      groupingName: RowGroupingStrategy.DataSource\n    });\n  }, [apiRef, props.unstable_dataSource, props.defaultGroupingExpansionDepth, props.isGroupExpandedByDefault]);\n  const filterRows = React.useCallback(() => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    return skipFiltering(rowTree);\n  }, [apiRef]);\n  const sortRows = React.useCallback(() => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    return skipSorting(rowTree);\n  }, [apiRef]);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.DataSource, 'rowTreeCreation', createRowTreeForRowGrouping);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.DataSource, 'filtering', filterRows);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.DataSource, 'sorting', sortRows);\n  useGridRegisterStrategyProcessor(apiRef, RowGroupingStrategy.DataSource, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n};", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"worker\", \"exceljsPostProcess\", \"exceljsPreProcess\", \"columnsStyles\", \"includeHeaders\", \"getRowsToExport\", \"valueOptionsSheetName\"];\nimport * as React from 'react';\nimport { useGridApiMethod, useGridLogger, useGridApiOptionHandler } from '@mui/x-data-grid';\nimport { useGridRegisterPipeProcessor, exportAs, getColumnsToExport, defaultGetRowsToExport } from '@mui/x-data-grid/internals';\nimport { buildExcel, getDataForValueOptionsSheet, serializeColumns, serializeRowUnsafe } from \"./serializer/excelSerializer.js\";\nimport { GridExcelExportMenuItem } from \"../../../components/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridExcelExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridExcelExport');\n  const getDataAsExcel = React.useCallback((options = {}) => {\n    logger.debug(`Get data as excel`);\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    return buildExcel({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      includeHeaders: options.includeHeaders ?? true,\n      includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n      valueOptionsSheetName: options?.valueOptionsSheetName || 'Options',\n      columnsStyles: options?.columnsStyles,\n      exceljsPreProcess: options?.exceljsPreProcess,\n      exceljsPostProcess: options?.exceljsPostProcess,\n      escapeFormulas: options.escapeFormulas ?? true\n    }, apiRef);\n  }, [logger, apiRef]);\n  const exportDataAsExcel = React.useCallback(async (options = {}) => {\n    const {\n        worker: workerFn,\n        exceljsPostProcess,\n        exceljsPreProcess,\n        getRowsToExport = defaultGetRowsToExport,\n        valueOptionsSheetName = 'Options'\n      } = options,\n      cloneableOptions = _objectWithoutPropertiesLoose(options, _excluded);\n    const sendExcelToUser = buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      exportAs(blob, 'xlsx', options?.fileName);\n    };\n    if (!workerFn) {\n      apiRef.current.publishEvent('excelExportStateChange', 'pending');\n      const workbook = await getDataAsExcel(options);\n      if (workbook === null) {\n        return;\n      }\n      const content = await workbook.xlsx.writeBuffer();\n      apiRef.current.publishEvent('excelExportStateChange', 'finished');\n      sendExcelToUser(content);\n      return;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (exceljsPostProcess) {\n        console.warn([`MUI X: The exceljsPostProcess option is not supported when a web worker is used.`, 'As alternative, pass the callback to the same option in setupExcelExportWebWorker.'].join('\\n'));\n      }\n      if (exceljsPreProcess) {\n        console.warn([`MUI X: The exceljsPreProcess option is not supported when a web worker is used.`, 'As alternative, pass the callback to the same option in setupExcelExportWebWorker.'].join('\\n'));\n      }\n    }\n    const worker = workerFn();\n    apiRef.current.publishEvent('excelExportStateChange', 'pending');\n    worker.onmessage = async event => {\n      sendExcelToUser(event.data);\n      apiRef.current.publishEvent('excelExportStateChange', 'finished');\n      worker.terminate();\n    };\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const valueOptionsData = await getDataForValueOptionsSheet(exportedColumns, valueOptionsSheetName, apiRef.current);\n    const serializedColumns = serializeColumns(exportedColumns, options.columnsStyles || {});\n    apiRef.current.resetColSpan();\n    const serializedRows = [];\n    for (let i = 0; i < exportedRowIds.length; i += 1) {\n      const id = exportedRowIds[i];\n      const serializedRow = serializeRowUnsafe(id, exportedColumns, apiRef, valueOptionsData, {\n        escapeFormulas: options.escapeFormulas ?? true\n      });\n      serializedRows.push(serializedRow);\n    }\n    apiRef.current.resetColSpan();\n    const columnGroupPaths = exportedColumns.reduce((acc, column) => {\n      acc[column.field] = apiRef.current.getColumnGroupPath(column.field);\n      return acc;\n    }, {});\n    const message = {\n      // workers share the pub-sub channel namespace. Use this property to filter out messages.\n      namespace: 'mui-x-data-grid-export',\n      serializedColumns,\n      serializedRows,\n      valueOptionsData,\n      columnGroupPaths,\n      columnGroupDetails: apiRef.current.getAllGroupDetails(),\n      options: cloneableOptions,\n      valueOptionsSheetName\n    };\n    worker.postMessage(message);\n  }, [apiRef, getDataAsExcel]);\n  const excelExportApi = {\n    getDataAsExcel,\n    exportDataAsExcel\n  };\n  useGridApiMethod(apiRef, excelExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.excelOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridExcelExportMenuItem, {\n        options: options.excelOptions\n      }),\n      componentName: 'excelExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n  useGridApiOptionHandler(apiRef, 'excelExportStateChange', props.onExcelExportStateChange);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport const getExcelJs = async () => {\n  const excelJsModule = await import('exceljs');\n  return excelJsModule.default ?? excelJsModule;\n};\nexport const addColumnGroupingHeaders = (worksheet, columns, columnGroupPaths, columnGroupDetails) => {\n  const maxDepth = Math.max(...columns.map(({\n    key\n  }) => columnGroupPaths[key]?.length ?? 0));\n  if (maxDepth === 0) {\n    return;\n  }\n  for (let rowIndex = 0; rowIndex < maxDepth; rowIndex += 1) {\n    const row = columns.map(({\n      key\n    }) => {\n      const groupingPath = columnGroupPaths[key];\n      if (groupingPath.length <= rowIndex) {\n        return {\n          groupId: null,\n          parents: groupingPath\n        };\n      }\n      return _extends({}, columnGroupDetails[groupingPath[rowIndex]], {\n        parents: groupingPath.slice(0, rowIndex)\n      });\n    });\n    const newRow = worksheet.addRow(row.map(group => group.groupId === null ? null : group?.headerName ?? group.groupId));\n\n    // use `rowCount`, since worksheet can have additional rows added in `exceljsPreProcess`\n    const lastRowIndex = newRow.worksheet.rowCount;\n    let leftIndex = 0;\n    let rightIndex = 1;\n    while (rightIndex < columns.length) {\n      const {\n        groupId: leftGroupId,\n        parents: leftParents\n      } = row[leftIndex];\n      const {\n        groupId: rightGroupId,\n        parents: rightParents\n      } = row[rightIndex];\n      const areInSameGroup = leftGroupId === rightGroupId && leftParents.length === rightParents.length && leftParents.every((leftParent, index) => rightParents[index] === leftParent);\n      if (areInSameGroup) {\n        rightIndex += 1;\n      } else {\n        if (rightIndex - leftIndex > 1) {\n          worksheet.mergeCells(lastRowIndex, leftIndex + 1, lastRowIndex, rightIndex);\n        }\n        leftIndex = rightIndex;\n        rightIndex += 1;\n      }\n    }\n    if (rightIndex - leftIndex > 1) {\n      worksheet.mergeCells(lastRowIndex, leftIndex + 1, lastRowIndex, rightIndex);\n    }\n  }\n};\nexport function addSerializedRowToWorksheet(serializedRow, worksheet) {\n  const {\n    row,\n    dataValidation,\n    outlineLevel,\n    mergedCells\n  } = serializedRow;\n  const newRow = worksheet.addRow(row);\n  Object.keys(dataValidation).forEach(field => {\n    newRow.getCell(field).dataValidation = _extends({}, dataValidation[field]);\n  });\n  if (outlineLevel) {\n    newRow.outlineLevel = outlineLevel;\n  }\n\n  // use `rowCount`, since worksheet can have additional rows added in `exceljsPreProcess`\n  const lastRowIndex = newRow.worksheet.rowCount;\n  mergedCells.forEach(mergedCell => {\n    worksheet.mergeCells(lastRowIndex, mergedCell.leftIndex, lastRowIndex, mergedCell.rightIndex);\n  });\n}\nexport async function createValueOptionsSheetIfNeeded(valueOptionsData, sheetName, workbook) {\n  if (Object.keys(valueOptionsData).length === 0) {\n    return;\n  }\n  const valueOptionsWorksheet = workbook.addWorksheet(sheetName);\n  valueOptionsWorksheet.columns = Object.keys(valueOptionsData).map(key => ({\n    key\n  }));\n  Object.entries(valueOptionsData).forEach(([field, {\n    values\n  }]) => {\n    valueOptionsWorksheet.getColumn(field).values = values;\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from '@mui/x-data-grid-pro';\nimport { isObject, isSingleSelectColDef, gridHasColSpanSelector } from '@mui/x-data-grid/internals';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { addColumnGroupingHeaders, addSerializedRowToWorksheet, createValueOptionsSheetIfNeeded, getExcelJs } from \"./utils.js\";\nconst getFormattedValueOptions = (colDef, row, valueOptions, api, callback) => {\n  if (!colDef.valueOptions) {\n    return;\n  }\n  const valueFormatter = colDef.valueFormatter;\n  for (let i = 0; i < valueOptions.length; i += 1) {\n    const option = valueOptions[i];\n    let value;\n    if (valueFormatter) {\n      if (typeof option === 'object') {\n        value = option.label;\n      } else {\n        value = String(colDef.valueFormatter(option, row, colDef, {\n          current: api\n        }));\n      }\n    } else {\n      value = typeof option === 'object' ? option.label : option;\n    }\n    callback(value, i);\n  }\n};\nconst commaRegex = /,/g;\nconst commaReplacement = 'CHAR(44)';\n\n/**\n * FIXME: This function mutates the colspan info, but colspan info assumes that the columns\n * passed to it are always consistent. In this case, the exported columns may differ from the\n * actual rendered columns.\n * The caller of this function MUST call `resetColSpan()` before and after usage.\n */\nexport const serializeRowUnsafe = (id, columns, apiRef, defaultValueOptionsFormulae, options) => {\n  const serializedRow = {};\n  const dataValidation = {};\n  const mergedCells = [];\n  const row = apiRef.current.getRow(id);\n  const rowNode = apiRef.current.getRowNode(id);\n  if (!row || !rowNode) {\n    throw new Error(`No row with id #${id} found`);\n  }\n  const outlineLevel = rowNode.depth;\n  const hasColSpan = gridHasColSpanSelector(apiRef);\n  if (hasColSpan) {\n    // `colSpan` is only calculated for rendered rows, so we need to calculate it during export for every row\n    apiRef.current.calculateColSpan({\n      rowId: id,\n      minFirstColumn: 0,\n      maxLastColumn: columns.length,\n      columns\n    });\n  }\n  columns.forEach((column, colIndex) => {\n    const colSpanInfo = hasColSpan ? apiRef.current.unstable_getCellColSpanInfo(id, colIndex) : undefined;\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      return;\n    }\n    if (colSpanInfo && colSpanInfo.cellProps.colSpan > 1) {\n      mergedCells.push({\n        leftIndex: colIndex + 1,\n        rightIndex: colIndex + colSpanInfo.cellProps.colSpan\n      });\n    }\n    let cellValue;\n    switch (column.type) {\n      case 'singleSelect':\n        {\n          const castColumn = column;\n          if (typeof castColumn.valueOptions === 'function') {\n            // If value option depends on the row, set specific options to the cell\n            // This dataValidation is buggy with LibreOffice and does not allow to have coma\n            const valueOptions = castColumn.valueOptions({\n              id,\n              row,\n              field: column.field\n            });\n            let formulae = '\"';\n            getFormattedValueOptions(castColumn, row, valueOptions, apiRef.current, (value, index) => {\n              const formatted = value.toString().replace(commaRegex, commaReplacement);\n              formulae += formatted;\n              if (index < valueOptions.length - 1) {\n                formulae += ',';\n              }\n            });\n            formulae += '\"';\n            dataValidation[castColumn.field] = {\n              type: 'list',\n              allowBlank: true,\n              formulae: [formulae]\n            };\n          } else {\n            const address = defaultValueOptionsFormulae[column.field].address;\n\n            // If value option is defined for the column, refer to another sheet\n            dataValidation[castColumn.field] = {\n              type: 'list',\n              allowBlank: true,\n              formulae: [address]\n            };\n          }\n          const formattedValue = apiRef.current.getRowFormattedValue(row, castColumn);\n          if (process.env.NODE_ENV !== 'production') {\n            if (String(formattedValue) === '[object Object]') {\n              warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the Excel export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n            }\n          }\n          if (isObject(formattedValue)) {\n            serializedRow[castColumn.field] = formattedValue?.label;\n          } else {\n            serializedRow[castColumn.field] = formattedValue;\n          }\n          break;\n        }\n      case 'boolean':\n      case 'number':\n        cellValue = apiRef.current.getRowValue(row, column);\n        break;\n      case 'date':\n      case 'dateTime':\n        {\n          // Excel does not do any timezone conversion, so we create a date using UTC instead of local timezone\n          // Solution from: https://github.com/exceljs/exceljs/issues/486#issuecomment-432557582\n          // About Date.UTC(): https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC#exemples\n          const value = apiRef.current.getRowValue(row, column);\n          // value may be `undefined` in auto-generated grouping rows\n          if (!value) {\n            break;\n          }\n          const utcDate = new Date(Date.UTC(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds()));\n          serializedRow[column.field] = utcDate;\n          break;\n        }\n      case 'actions':\n        break;\n      default:\n        cellValue = apiRef.current.getRowFormattedValue(row, column);\n        if (process.env.NODE_ENV !== 'production') {\n          if (String(cellValue) === '[object Object]') {\n            warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the Excel export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n          }\n        }\n        break;\n    }\n    if (typeof cellValue === 'string' && options.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(cellValue[0])) {\n        cellValue = `'${cellValue}`;\n      }\n    }\n    if (typeof cellValue !== 'undefined') {\n      serializedRow[column.field] = cellValue;\n    }\n  });\n  return {\n    row: serializedRow,\n    dataValidation,\n    outlineLevel,\n    mergedCells\n  };\n};\nconst defaultColumnsStyles = {\n  [GRID_DATE_COL_DEF.type]: {\n    numFmt: 'dd.mm.yyyy'\n  },\n  [GRID_DATETIME_COL_DEF.type]: {\n    numFmt: 'dd.mm.yyyy hh:mm'\n  }\n};\nexport const serializeColumn = (column, columnsStyles) => {\n  const {\n    field,\n    type\n  } = column;\n  return {\n    key: field,\n    headerText: column.headerName ?? column.field,\n    // Excel width must stay between 0 and 255 (https://support.microsoft.com/en-us/office/change-the-column-width-and-row-height-72f5e3cc-994d-43e8-ae58-9774a0905f46)\n    // From the example of column width behavior (https://docs.microsoft.com/en-US/office/troubleshoot/excel/determine-column-widths#example-of-column-width-behavior)\n    // a value of 10 corresponds to 75px. This is an approximation, because column width depends on the font-size\n    width: Math.min(255, column.width ? column.width / 7.5 : 8.43),\n    style: _extends({}, type && defaultColumnsStyles?.[type], columnsStyles?.[field])\n  };\n};\nexport function serializeColumns(columns, styles) {\n  return columns.map(column => serializeColumn(column, styles));\n}\nexport async function getDataForValueOptionsSheet(columns, valueOptionsSheetName, api) {\n  // Creates a temp worksheet to obtain the column letters\n  const excelJS = await getExcelJs();\n  const workbook = new excelJS.Workbook();\n  const worksheet = workbook.addWorksheet('Sheet1');\n  const record = {};\n  const worksheetColumns = [];\n  for (let i = 0; i < columns.length; i += 1) {\n    const column = columns[i];\n    const isCandidateColumn = isSingleSelectColDef(column) && Array.isArray(column.valueOptions);\n    if (!isCandidateColumn) {\n      continue;\n    }\n    worksheetColumns.push({\n      key: column.field\n    });\n    worksheet.columns = worksheetColumns;\n    const header = column.headerName ?? column.field;\n    const values = [header];\n    getFormattedValueOptions(column, {}, column.valueOptions, api, value => {\n      values.push(value);\n    });\n    const letter = worksheet.getColumn(column.field).letter;\n    const address = `${valueOptionsSheetName}!$${letter}$2:$${letter}$${values.length}`;\n    record[column.field] = {\n      values,\n      address\n    };\n  }\n  return record;\n}\nexport async function buildExcel(options, apiRef) {\n  const {\n    columns,\n    rowIds,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    valueOptionsSheetName = 'Options',\n    exceljsPreProcess,\n    exceljsPostProcess,\n    columnsStyles = {}\n  } = options;\n  const excelJS = await getExcelJs();\n  const workbook = new excelJS.Workbook();\n  const worksheet = workbook.addWorksheet('Sheet1');\n  const serializedColumns = serializeColumns(columns, columnsStyles);\n  worksheet.columns = serializedColumns;\n  if (exceljsPreProcess) {\n    await exceljsPreProcess({\n      workbook,\n      worksheet\n    });\n  }\n  if (includeColumnGroupsHeaders) {\n    const columnGroupPaths = columns.reduce((acc, column) => {\n      acc[column.field] = apiRef.current.getColumnGroupPath(column.field);\n      return acc;\n    }, {});\n    addColumnGroupingHeaders(worksheet, serializedColumns, columnGroupPaths, apiRef.current.getAllGroupDetails());\n  }\n  if (includeHeaders) {\n    worksheet.addRow(columns.map(column => column.headerName ?? column.field));\n  }\n  const valueOptionsData = await getDataForValueOptionsSheet(columns, valueOptionsSheetName, apiRef.current);\n  createValueOptionsSheetIfNeeded(valueOptionsData, valueOptionsSheetName, workbook);\n  apiRef.current.resetColSpan();\n  rowIds.forEach(id => {\n    const serializedRow = serializeRowUnsafe(id, columns, apiRef, valueOptionsData, options);\n    addSerializedRowToWorksheet(serializedRow, worksheet);\n  });\n  apiRef.current.resetColSpan();\n  if (exceljsPostProcess) {\n    await exceljsPostProcess({\n      workbook,\n      worksheet\n    });\n  }\n  return workbook;\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridExcelExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsExcel(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportExcel')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridExcelExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    columnsStyles: PropTypes.object,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    exceljsPostProcess: PropTypes.func,\n    exceljsPreProcess: PropTypes.func,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    valueOptionsSheetName: PropTypes.string,\n    worker: PropTypes.func\n  })\n} : void 0;\nexport { GridExcelExportMenuItem };", "import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridWorkspacesIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M6,13c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S8.2,13,6,13z M12,3C9.8,3,8,4.8,8,7s1.8,4,4,4s4-1.8,4-4S14.2,3,12,3z M18,13 c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S20.2,13,18,13z\"\n  })\n}), 'Workspaces');\nexport const GridGroupWorkIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zM8 17.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5zM9.5 8c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5S9.5 9.38 9.5 8zm6.5 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'GroupWork');\nexport const GridFunctionsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 4H6v2l6.5 6L6 18v2h12v-3h-7l5-5-5-5h7z\"\n}), 'Functions');", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '@mui/x-data-grid-pro';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport { unstable_useId as useId } from '@mui/utils';\nimport Select from '@mui/material/Select';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { canColumnHaveAggregationFunction, getAggregationFunctionLabel, getAvailableAggregationFunctions } from \"../hooks/features/aggregation/gridAggregationUtils.js\";\nimport { gridAggregationModelSelector } from \"../hooks/features/aggregation/gridAggregationSelectors.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuAggregationItem(props) {\n  const {\n    colDef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const id = useId();\n  const aggregationModel = useGridSelector(apiRef, gridAggregationModelSelector);\n  const availableAggregationFunctions = React.useMemo(() => getAvailableAggregationFunctions({\n    aggregationFunctions: rootProps.aggregationFunctions,\n    colDef\n  }), [colDef, rootProps.aggregationFunctions]);\n  const selectedAggregationRule = React.useMemo(() => {\n    if (!colDef || !aggregationModel[colDef.field]) {\n      return '';\n    }\n    const aggregationFunctionName = aggregationModel[colDef.field];\n    if (canColumnHaveAggregationFunction({\n      colDef,\n      aggregationFunctionName,\n      aggregationFunction: rootProps.aggregationFunctions[aggregationFunctionName]\n    })) {\n      return aggregationFunctionName;\n    }\n    return '';\n  }, [rootProps.aggregationFunctions, aggregationModel, colDef]);\n  const handleAggregationItemChange = event => {\n    const newAggregationItem = event.target?.value || undefined;\n    const currentModel = gridAggregationModelSelector(apiRef);\n    const _colDef$field = colDef.field,\n      otherColumnItems = _objectWithoutPropertiesLoose(currentModel, [_colDef$field].map(_toPropertyKey));\n    const newModel = newAggregationItem == null ? otherColumnItems : _extends({}, otherColumnItems, {\n      [colDef?.field]: newAggregationItem\n    });\n    apiRef.current.setAggregationModel(newModel);\n    apiRef.current.hideColumnMenu();\n  };\n  const label = apiRef.current.getLocaleText('aggregationMenuItemHeader');\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    disableRipple: true,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuAggregationIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: /*#__PURE__*/_jsxs(FormControl, {\n        size: \"small\",\n        fullWidth: true,\n        sx: {\n          minWidth: 150\n        },\n        children: [/*#__PURE__*/_jsx(InputLabel, {\n          id: `${id}-label`,\n          children: label\n        }), /*#__PURE__*/_jsxs(Select, {\n          labelId: `${id}-label`,\n          id: `${id}-input`,\n          value: selectedAggregationRule,\n          label: label,\n          color: \"primary\",\n          onChange: handleAggregationItemChange,\n          onBlur: event => event.stopPropagation(),\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsx(MenuItem, {\n            value: \"\",\n            children: \"...\"\n          }), availableAggregationFunctions.map(aggFunc => /*#__PURE__*/_jsx(MenuItem, {\n            value: aggFunc,\n            children: getAggregationFunctionLabel({\n              apiRef,\n              aggregationRule: {\n                aggregationFunctionName: aggFunc,\n                aggregationFunction: rootProps.aggregationFunctions[aggFunc]\n              }\n            })\n          }, aggFunc))]\n        })]\n      })\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuAggregationItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuAggregationItem };", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridGenericColumnMenu, GRID_COLUMN_MENU_SLOTS, GRID_COLUMN_MENU_SLOT_PROPS } from '@mui/x-data-grid-pro';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridColumnMenuAggregationItem } from \"./GridColumnMenuAggregationItem.js\";\nimport { isGroupingColumn } from \"../hooks/features/rowGrouping/index.js\";\nimport { GridColumnMenuRowGroupItem } from \"./GridColumnMenuRowGroupItem.js\";\nimport { GridColumnMenuRowUngroupItem } from \"./GridColumnMenuRowUngroupItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridColumnMenuGroupingItem(props) {\n  const {\n    colDef\n  } = props;\n  if (isGroupingColumn(colDef.field)) {\n    return /*#__PURE__*/_jsx(GridColumnMenuRowGroupItem, _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(GridColumnMenuRowUngroupItem, _extends({}, props));\n}\nexport const GRID_COLUMN_MENU_SLOTS_PREMIUM = _extends({}, GRID_COLUMN_MENU_SLOTS, {\n  columnMenuAggregationItem: GridColumnMenuAggregationItem,\n  columnMenuGroupingItem: GridColumnMenuGroupingItem\n});\nexport const GRID_COLUMN_MENU_SLOT_PROPS_PREMIUM = _extends({}, GRID_COLUMN_MENU_SLOT_PROPS, {\n  columnMenuAggregationItem: {\n    displayOrder: 23\n  },\n  columnMenuGroupingItem: {\n    displayOrder: 27\n  }\n});\nexport const GridPremiumColumnMenu = forwardRef(function GridPremiumColumnMenuSimple(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    defaultSlots: GRID_COLUMN_MENU_SLOTS_PREMIUM,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS_PREMIUM,\n    ref: ref\n  }));\n});", "import * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector, gridColumnLookupSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowGroupingSanitizedModelSelector } from \"../hooks/features/rowGrouping/gridRowGroupingSelector.js\";\nimport { getRowGroupingCriteriaFromGroupingField, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, isGroupingColumn } from \"../hooks/features/rowGrouping/gridRowGroupingUtils.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridColumnMenuRowGroupItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const rootProps = useGridRootProps();\n  const renderUnGroupingMenuItem = field => {\n    const ungroupColumn = event => {\n      apiRef.current.removeRowGroupingCriteria(field);\n      onClick(event);\n    };\n    const groupedColumn = columnsLookup[field];\n    const name = groupedColumn.headerName ?? field;\n    return /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: ungroupColumn,\n      disabled: !groupedColumn.groupable,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuUngroupIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('unGroupColumn')(name)\n      })]\n    }, field);\n  };\n  if (!colDef || !isGroupingColumn(colDef.field)) {\n    return null;\n  }\n  if (colDef.field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD) {\n    return /*#__PURE__*/_jsx(React.Fragment, {\n      children: rowGroupingModel.map(renderUnGroupingMenuItem)\n    });\n  }\n  return renderUnGroupingMenuItem(getRowGroupingCriteriaFromGroupingField(colDef.field));\n}", "import * as React from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { gridColumnLookupSelector, useGridSelector } from '@mui/x-data-grid-pro';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowGroupingSanitizedModelSelector } from \"../hooks/features/rowGrouping/gridRowGroupingSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridColumnMenuRowUngroupItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const rootProps = useGridRootProps();\n  if (!colDef.groupable) {\n    return null;\n  }\n  const ungroupColumn = event => {\n    apiRef.current.removeRowGroupingCriteria(colDef.field);\n    onClick(event);\n  };\n  const groupColumn = event => {\n    apiRef.current.addRowGroupingCriteria(colDef.field);\n    onClick(event);\n  };\n  const name = columnsLookup[colDef.field].headerName ?? colDef.field;\n  if (rowGroupingModel.includes(colDef.field)) {\n    return /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: ungroupColumn,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuUngroupIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('unGroupColumn')(name)\n      })]\n    });\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: groupColumn,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuGroupIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('groupColumn')(name)\n    })]\n  });\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { ownerDocument, useEventCallback } from '@mui/material/utils';\nimport { getTotalHeaderHeight, getVisibleRows, isNavigationKey, serializeCellValue, useGridRegisterPipeProcessor } from '@mui/x-data-grid-pro/internals';\nimport { useGridApiEventHandler, useGridApiMethod, GRID_ACTIONS_COLUMN_TYPE, GRID_CHECKBOX_SELECTION_COL_DEF, GRID_DETAIL_PANEL_TOGGLE_FIELD, gridRowsDataRowIdToIdLookupSelector, gridClasses, gridFocusCellSelector, GRID_REORDER_COL_DEF, gridSortedRowIdsSelector, gridDimensionsSelector } from '@mui/x-data-grid-pro';\nimport { gridCellSelectionStateSelector } from \"./gridCellSelectionSelector.js\";\nexport const cellSelectionStateInitializer = (state, props) => _extends({}, state, {\n  cellSelection: _extends({}, props.cellSelectionModel ?? props.initialState?.cellSelection)\n});\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nconst AUTO_SCROLL_SENSITIVITY = 50; // The distance from the edge to start scrolling\nconst AUTO_SCROLL_SPEED = 20; // The speed to scroll once the mouse enters the sensitivity area\n\nexport const useGridCellSelection = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const cellWithVirtualFocus = React.useRef(null);\n  const lastMouseDownCell = React.useRef(null);\n  const mousePosition = React.useRef(null);\n  const autoScrollRAF = React.useRef(null);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, props);\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  apiRef.current.registerControlState({\n    stateId: 'cellSelection',\n    propModel: props.cellSelectionModel,\n    propOnChange: props.onCellSelectionModelChange,\n    stateSelector: gridCellSelectionStateSelector,\n    changeEvent: 'cellSelectionChange'\n  });\n  const runIfCellSelectionIsEnabled = callback => (...args) => {\n    if (props.cellSelection) {\n      callback(...args);\n    }\n  };\n  const isCellSelected = React.useCallback((id, field) => {\n    if (!props.cellSelection) {\n      return false;\n    }\n    const cellSelectionModel = gridCellSelectionStateSelector(apiRef.current.state);\n    return cellSelectionModel[id] ? !!cellSelectionModel[id][field] : false;\n  }, [apiRef, props.cellSelection]);\n  const getCellSelectionModel = React.useCallback(() => {\n    return gridCellSelectionStateSelector(apiRef.current.state);\n  }, [apiRef]);\n  const setCellSelectionModel = React.useCallback(newModel => {\n    if (!props.cellSelection) {\n      return;\n    }\n    apiRef.current.setState(prevState => _extends({}, prevState, {\n      cellSelection: newModel\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.cellSelection]);\n  const selectCellRange = React.useCallback((start, end, keepOtherSelected = false) => {\n    const startRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(start.id);\n    const startColumnIndex = apiRef.current.getColumnIndex(start.field);\n    const endRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(end.id);\n    const endColumnIndex = apiRef.current.getColumnIndex(end.field);\n    let finalStartRowIndex = startRowIndex;\n    let finalStartColumnIndex = startColumnIndex;\n    let finalEndRowIndex = endRowIndex;\n    let finalEndColumnIndex = endColumnIndex;\n    if (finalStartRowIndex > finalEndRowIndex) {\n      finalStartRowIndex = endRowIndex;\n      finalEndRowIndex = startRowIndex;\n    }\n    if (finalStartColumnIndex > finalEndColumnIndex) {\n      finalStartColumnIndex = endColumnIndex;\n      finalEndColumnIndex = startColumnIndex;\n    }\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    const visibleRows = getVisibleRows(apiRef);\n    const rowsInRange = visibleRows.rows.slice(finalStartRowIndex, finalEndRowIndex + 1);\n    const columnsInRange = visibleColumns.slice(finalStartColumnIndex, finalEndColumnIndex + 1);\n    const newModel = keepOtherSelected ? _extends({}, apiRef.current.getCellSelectionModel()) : {};\n    rowsInRange.forEach(row => {\n      if (!newModel[row.id]) {\n        newModel[row.id] = {};\n      }\n      columnsInRange.forEach(column => {\n        newModel[row.id][column.field] = true;\n      }, {});\n    });\n    apiRef.current.setCellSelectionModel(newModel);\n  }, [apiRef]);\n  const getSelectedCellsAsArray = React.useCallback(() => {\n    const selectionModel = apiRef.current.getCellSelectionModel();\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n    const currentVisibleRows = getVisibleRows(apiRef, props);\n    const sortedEntries = currentVisibleRows.rows.reduce((result, row) => {\n      if (row.id in selectionModel) {\n        result.push([row.id, selectionModel[row.id]]);\n      }\n      return result;\n    }, []);\n    return sortedEntries.reduce((selectedCells, [id, fields]) => {\n      selectedCells.push(...Object.entries(fields).reduce((selectedFields, [field, isSelected]) => {\n        if (isSelected) {\n          selectedFields.push({\n            id: idToIdLookup[id],\n            field\n          });\n        }\n        return selectedFields;\n      }, []));\n      return selectedCells;\n    }, []);\n  }, [apiRef, props]);\n  const cellSelectionApi = {\n    isCellSelected,\n    getCellSelectionModel,\n    setCellSelectionModel,\n    selectCellRange,\n    getSelectedCellsAsArray\n  };\n  useGridApiMethod(apiRef, cellSelectionApi, 'public');\n  const hasClickedValidCellForRangeSelection = React.useCallback(params => {\n    if (params.field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      return false;\n    }\n    if (params.field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      return false;\n    }\n    const column = apiRef.current.getColumn(params.field);\n    if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n      return false;\n    }\n    return params.rowNode.type !== 'pinnedRow';\n  }, [apiRef]);\n  const handleMouseUp = useEventCallback(() => {\n    lastMouseDownCell.current = null;\n    apiRef.current.rootElementRef?.current?.classList.remove(gridClasses['root--disableUserSelection']);\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopAutoScroll();\n  });\n  const handleCellMouseDown = React.useCallback((params, event) => {\n    // Skip if the click comes from the right-button or, only on macOS, Ctrl is pressed\n    // Fix for https://github.com/mui/mui-x/pull/6567#issuecomment-1329155578\n    const isMacOs = window.navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n    if (event.button !== 0 || event.ctrlKey && isMacOs) {\n      return;\n    }\n    if (params.field === GRID_REORDER_COL_DEF.field) {\n      return;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (hasClickedValidCellForRangeSelection(params) && event.shiftKey && focusedCell) {\n      event.preventDefault();\n    }\n    lastMouseDownCell.current = {\n      id: params.id,\n      field: params.field\n    };\n    apiRef.current.rootElementRef?.current?.classList.add(gridClasses['root--disableUserSelection']);\n    const document = ownerDocument(apiRef.current.rootElementRef?.current);\n    document.addEventListener('mouseup', handleMouseUp, {\n      once: true\n    });\n  }, [apiRef, handleMouseUp, hasClickedValidCellForRangeSelection]);\n  const stopAutoScroll = React.useCallback(() => {\n    if (autoScrollRAF.current) {\n      cancelAnimationFrame(autoScrollRAF.current);\n      autoScrollRAF.current = null;\n    }\n  }, []);\n  const handleCellFocusIn = React.useCallback(params => {\n    cellWithVirtualFocus.current = {\n      id: params.id,\n      field: params.field\n    };\n  }, []);\n  const startAutoScroll = React.useCallback(() => {\n    if (autoScrollRAF.current) {\n      return;\n    }\n    if (!apiRef.current.virtualScrollerRef?.current) {\n      return;\n    }\n    function autoScroll() {\n      if (!mousePosition.current || !apiRef.current.virtualScrollerRef?.current) {\n        return;\n      }\n      const dimensions = gridDimensionsSelector(apiRef.current.state);\n      const {\n        x: mouseX,\n        y: mouseY\n      } = mousePosition.current;\n      const {\n        width,\n        height: viewportOuterHeight\n      } = dimensions.viewportOuterSize;\n      const height = viewportOuterHeight - totalHeaderHeight;\n      let deltaX = 0;\n      let deltaY = 0;\n      let factor = 0;\n      if (mouseY <= AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollY) {\n        // When scrolling up, the multiplier increases going closer to the top edge\n        factor = (AUTO_SCROLL_SENSITIVITY - mouseY) / -AUTO_SCROLL_SENSITIVITY;\n        deltaY = AUTO_SCROLL_SPEED;\n      } else if (mouseY >= height - AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollY) {\n        // When scrolling down, the multiplier increases going closer to the bottom edge\n        factor = (mouseY - (height - AUTO_SCROLL_SENSITIVITY)) / AUTO_SCROLL_SENSITIVITY;\n        deltaY = AUTO_SCROLL_SPEED;\n      } else if (mouseX <= AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollX) {\n        // When scrolling left, the multiplier increases going closer to the left edge\n        factor = (AUTO_SCROLL_SENSITIVITY - mouseX) / -AUTO_SCROLL_SENSITIVITY;\n        deltaX = AUTO_SCROLL_SPEED;\n      } else if (mouseX >= width - AUTO_SCROLL_SENSITIVITY && dimensions.hasScrollX) {\n        // When scrolling right, the multiplier increases going closer to the right edge\n        factor = (mouseX - (width - AUTO_SCROLL_SENSITIVITY)) / AUTO_SCROLL_SENSITIVITY;\n        deltaX = AUTO_SCROLL_SPEED;\n      }\n      if (deltaX !== 0 || deltaY !== 0) {\n        const {\n          scrollLeft,\n          scrollTop\n        } = apiRef.current.virtualScrollerRef.current;\n        apiRef.current.scroll({\n          top: scrollTop + deltaY * factor,\n          left: scrollLeft + deltaX * factor\n        });\n      }\n      autoScrollRAF.current = requestAnimationFrame(autoScroll);\n    }\n    autoScroll();\n  }, [apiRef, totalHeaderHeight]);\n  const handleCellMouseOver = React.useCallback((params, event) => {\n    if (!lastMouseDownCell.current) {\n      return;\n    }\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.selectCellRange(lastMouseDownCell.current, {\n      id,\n      field\n    }, event.ctrlKey || event.metaKey);\n    const virtualScrollerRect = apiRef.current.virtualScrollerRef?.current?.getBoundingClientRect();\n    if (!virtualScrollerRect) {\n      return;\n    }\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const {\n      x,\n      y\n    } = virtualScrollerRect;\n    const {\n      width,\n      height: viewportOuterHeight\n    } = dimensions.viewportOuterSize;\n    const height = viewportOuterHeight - totalHeaderHeight;\n    const mouseX = event.clientX - x;\n    const mouseY = event.clientY - y - totalHeaderHeight;\n    mousePosition.current = {\n      x: mouseX,\n      y: mouseY\n    };\n    const hasEnteredVerticalSensitivityArea = mouseY <= AUTO_SCROLL_SENSITIVITY || mouseY >= height - AUTO_SCROLL_SENSITIVITY;\n    const hasEnteredHorizontalSensitivityArea = mouseX <= AUTO_SCROLL_SENSITIVITY || mouseX >= width - AUTO_SCROLL_SENSITIVITY;\n    const hasEnteredSensitivityArea = hasEnteredVerticalSensitivityArea || hasEnteredHorizontalSensitivityArea;\n    if (hasEnteredSensitivityArea) {\n      // Mouse has entered the sensitity area for the first time\n      startAutoScroll();\n    } else {\n      // Mouse has left the sensitivity area while auto scroll is on\n      stopAutoScroll();\n    }\n  }, [apiRef, startAutoScroll, stopAutoScroll, totalHeaderHeight]);\n  const handleCellClick = useEventCallback((params, event) => {\n    const {\n      id,\n      field\n    } = params;\n    if (!hasClickedValidCellForRangeSelection(params)) {\n      return;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (event.shiftKey && focusedCell) {\n      apiRef.current.selectCellRange(focusedCell, {\n        id,\n        field\n      });\n      cellWithVirtualFocus.current = {\n        id,\n        field\n      };\n      return;\n    }\n    if (event.ctrlKey || event.metaKey) {\n      // Add the clicked cell to the selection\n      const prevModel = apiRef.current.getCellSelectionModel();\n      apiRef.current.setCellSelectionModel(_extends({}, prevModel, {\n        [id]: _extends({}, prevModel[id], {\n          [field]: !apiRef.current.isCellSelected(id, field)\n        })\n      }));\n    } else {\n      // Clear the selection and keep only the clicked cell selected\n      apiRef.current.setCellSelectionModel({\n        [id]: {\n          [field]: true\n        }\n      });\n    }\n  });\n  const handleCellKeyDown = useEventCallback((params, event) => {\n    if (!isNavigationKey(event.key) || !cellWithVirtualFocus.current) {\n      return;\n    }\n    if (!event.shiftKey) {\n      apiRef.current.setCellSelectionModel({});\n      return;\n    }\n    const {\n      current: otherCell\n    } = cellWithVirtualFocus;\n    let endRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(otherCell.id);\n    let endColumnIndex = apiRef.current.getColumnIndex(otherCell.field);\n    if (event.key === 'ArrowDown') {\n      endRowIndex += 1;\n    } else if (event.key === 'ArrowUp') {\n      endRowIndex -= 1;\n    } else if (event.key === 'ArrowRight') {\n      endColumnIndex += 1;\n    } else if (event.key === 'ArrowLeft') {\n      endColumnIndex -= 1;\n    }\n    const visibleRows = getVisibleRows(apiRef);\n    if (endRowIndex < 0 || endRowIndex >= visibleRows.rows.length) {\n      return;\n    }\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    if (endColumnIndex < 0 || endColumnIndex >= visibleColumns.length) {\n      return;\n    }\n    cellWithVirtualFocus.current = {\n      id: visibleRows.rows[endRowIndex].id,\n      field: visibleColumns[endColumnIndex].field\n    };\n    apiRef.current.scrollToIndexes({\n      rowIndex: endRowIndex,\n      colIndex: endColumnIndex\n    });\n    const {\n      id,\n      field\n    } = params;\n    apiRef.current.selectCellRange({\n      id,\n      field\n    }, cellWithVirtualFocus.current);\n  });\n  useGridApiEventHandler(apiRef, 'cellClick', runIfCellSelectionIsEnabled(handleCellClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfCellSelectionIsEnabled(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfCellSelectionIsEnabled(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfCellSelectionIsEnabled(handleCellMouseDown));\n  useGridApiEventHandler(apiRef, 'cellMouseOver', runIfCellSelectionIsEnabled(handleCellMouseOver));\n  React.useEffect(() => {\n    if (props.cellSelectionModel) {\n      apiRef.current.setCellSelectionModel(props.cellSelectionModel);\n    }\n  }, [apiRef, props.cellSelectionModel]);\n  React.useEffect(() => {\n    const rootRef = apiRef.current.rootElementRef?.current;\n    return () => {\n      stopAutoScroll();\n      const document = ownerDocument(rootRef);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [apiRef, hasRootReference, handleMouseUp, stopAutoScroll]);\n  const checkIfCellIsSelected = React.useCallback((isSelected, {\n    id,\n    field\n  }) => {\n    return apiRef.current.isCellSelected(id, field);\n  }, [apiRef]);\n  const addClassesToCells = React.useCallback((classes, {\n    id,\n    field\n  }) => {\n    const visibleRows = getVisibleRows(apiRef);\n    if (!visibleRows.range || !apiRef.current.isCellSelected(id, field)) {\n      return classes;\n    }\n    const newClasses = [...classes];\n    const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(id);\n    const columnIndex = apiRef.current.getColumnIndex(field);\n    const visibleColumns = apiRef.current.getVisibleColumns();\n    if (rowIndex > 0) {\n      const {\n        id: previousRowId\n      } = visibleRows.rows[rowIndex - 1];\n      if (!apiRef.current.isCellSelected(previousRowId, field)) {\n        newClasses.push(gridClasses['cell--rangeTop']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeTop']);\n    }\n    if (rowIndex + visibleRows.range.firstRowIndex < visibleRows.range.lastRowIndex) {\n      const {\n        id: nextRowId\n      } = visibleRows.rows[rowIndex + 1];\n      if (!apiRef.current.isCellSelected(nextRowId, field)) {\n        newClasses.push(gridClasses['cell--rangeBottom']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeBottom']);\n    }\n    if (columnIndex > 0) {\n      const {\n        field: previousColumnField\n      } = visibleColumns[columnIndex - 1];\n      if (!apiRef.current.isCellSelected(id, previousColumnField)) {\n        newClasses.push(gridClasses['cell--rangeLeft']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeLeft']);\n    }\n    if (columnIndex < visibleColumns.length - 1) {\n      const {\n        field: nextColumnField\n      } = visibleColumns[columnIndex + 1];\n      if (!apiRef.current.isCellSelected(id, nextColumnField)) {\n        newClasses.push(gridClasses['cell--rangeRight']);\n      }\n    } else {\n      newClasses.push(gridClasses['cell--rangeRight']);\n    }\n    return newClasses;\n  }, [apiRef]);\n  const canUpdateFocus = React.useCallback((initialValue, {\n    event,\n    cell\n  }) => {\n    if (!cell || !props.cellSelection || !event.shiftKey) {\n      return initialValue;\n    }\n    if (isKeyboardEvent(event)) {\n      return isNavigationKey(event.key) ? false : initialValue;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (hasClickedValidCellForRangeSelection(cell) && focusedCell) {\n      return false;\n    }\n    return initialValue;\n  }, [apiRef, props.cellSelection, hasClickedValidCellForRangeSelection]);\n  const handleClipboardCopy = React.useCallback(value => {\n    if (apiRef.current.getSelectedCellsAsArray().length <= 1) {\n      return value;\n    }\n    const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n    const cellSelectionModel = apiRef.current.getCellSelectionModel();\n    const unsortedSelectedRowIds = Object.keys(cellSelectionModel);\n    const sortedSelectedRowIds = sortedRowIds.filter(id => unsortedSelectedRowIds.includes(`${id}`));\n    const copyData = sortedSelectedRowIds.reduce((acc, rowId) => {\n      const fieldsMap = cellSelectionModel[rowId];\n      const rowString = Object.keys(fieldsMap).reduce((acc2, field) => {\n        let cellData;\n        if (fieldsMap[field]) {\n          const cellParams = apiRef.current.getCellParams(rowId, field);\n          cellData = serializeCellValue(cellParams, {\n            csvOptions: {\n              delimiter: clipboardCopyCellDelimiter,\n              shouldAppendQuotes: false,\n              escapeFormulas: false\n            },\n            ignoreValueFormatter\n          });\n        } else {\n          cellData = '';\n        }\n        return acc2 === '' ? cellData : [acc2, cellData].join(clipboardCopyCellDelimiter);\n      }, '');\n      return acc === '' ? rowString : [acc, rowString].join('\\r\\n');\n    }, '');\n    return copyData;\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridRegisterPipeProcessor(apiRef, 'isCellSelected', checkIfCellIsSelected);\n  useGridRegisterPipeProcessor(apiRef, 'cellClassName', addClassesToCells);\n  useGridRegisterPipeProcessor(apiRef, 'canUpdateFocus', canUpdateFocus);\n  useGridRegisterPipeProcessor(apiRef, 'clipboardCopy', handleClipboardCopy);\n};", "export const gridCellSelectionStateSelector = state => state.cellSelection;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GRID_CHECKBOX_SELECTION_FIELD, gridFocusCellSelector, gridVisibleColumnFieldsSelector, useGridApiOptionHandler, useGridApiEventHandler, gridPaginatedVisibleSortedGridRowIdsSelector, gridExpandedSortedRowIdsSelector } from '@mui/x-data-grid';\nimport { getRowIdFromRowModel, getActiveElement, useGridRegisterPipeProcessor, getPublicApiRef, isPasteShortcut, useGridLogger } from '@mui/x-data-grid/internals';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, GRID_REORDER_COL_DEF } from '@mui/x-data-grid-pro';\nimport { unstable_debounce as debounce } from '@mui/utils';\nconst columnFieldsToExcludeFromPaste = [GRID_CHECKBOX_SELECTION_FIELD, GRID_REORDER_COL_DEF.field, GRID_DETAIL_PANEL_TOGGLE_FIELD];\n\n// Batches rows that are updated during clipboard paste to reduce `updateRows` calls\nfunction batchRowUpdates(func, wait) {\n  let rows = [];\n  const debounced = debounce(() => {\n    func(rows);\n    rows = [];\n  }, wait);\n  return row => {\n    rows.push(row);\n    debounced();\n  };\n}\nasync function getTextFromClipboard(rootEl) {\n  return new Promise(resolve => {\n    const focusedCell = getActiveElement(document);\n    const el = document.createElement('input');\n    el.style.width = '0px';\n    el.style.height = '0px';\n    el.style.border = 'none';\n    el.style.margin = '0';\n    el.style.padding = '0';\n    el.style.outline = 'none';\n    el.style.position = 'absolute';\n    el.style.top = '0';\n    el.style.left = '0';\n    const handlePasteEvent = event => {\n      el.removeEventListener('paste', handlePasteEvent);\n      const text = event.clipboardData?.getData('text/plain');\n      if (focusedCell instanceof HTMLElement) {\n        focusedCell.focus({\n          preventScroll: true\n        });\n      }\n      el.remove();\n      resolve(text || '');\n    };\n    el.addEventListener('paste', handlePasteEvent);\n    rootEl.appendChild(el);\n    el.focus({\n      preventScroll: true\n    });\n  });\n}\n\n// Keeps track of updated rows during clipboard paste\nclass CellValueUpdater {\n  constructor(options) {\n    this.rowsToUpdate = {};\n    this.updateRow = void 0;\n    this.options = void 0;\n    this.options = options;\n    this.updateRow = batchRowUpdates(options.apiRef.current.updateRows, 50);\n  }\n  updateCell({\n    rowId,\n    field,\n    pastedCellValue\n  }) {\n    if (pastedCellValue === undefined) {\n      return;\n    }\n    const {\n      apiRef,\n      getRowId\n    } = this.options;\n    const colDef = apiRef.current.getColumn(field);\n    if (!colDef || !colDef.editable) {\n      return;\n    }\n    const row = this.rowsToUpdate[rowId] || _extends({}, apiRef.current.getRow(rowId));\n    if (!row) {\n      return;\n    }\n    let parsedValue = pastedCellValue;\n    if (colDef.pastedValueParser) {\n      parsedValue = colDef.pastedValueParser(pastedCellValue, row, colDef, apiRef);\n    } else if (colDef.valueParser) {\n      parsedValue = colDef.valueParser(parsedValue, row, colDef, apiRef);\n    }\n    if (parsedValue === undefined) {\n      return;\n    }\n    let rowCopy = _extends({}, row);\n    if (typeof colDef.valueSetter === 'function') {\n      rowCopy = colDef.valueSetter(parsedValue, rowCopy, colDef, apiRef);\n    } else {\n      rowCopy[field] = parsedValue;\n    }\n    const newRowId = getRowIdFromRowModel(rowCopy, getRowId);\n    if (String(newRowId) !== String(rowId)) {\n      // We cannot update row id, so this cell value update should be ignored\n      return;\n    }\n    this.rowsToUpdate[rowId] = rowCopy;\n  }\n  applyUpdates() {\n    const {\n      apiRef,\n      processRowUpdate,\n      onProcessRowUpdateError\n    } = this.options;\n    const rowsToUpdate = this.rowsToUpdate;\n    const rowIdsToUpdate = Object.keys(rowsToUpdate);\n    if (rowIdsToUpdate.length === 0) {\n      apiRef.current.publishEvent('clipboardPasteEnd');\n      return;\n    }\n    const handleRowUpdate = async rowId => {\n      const newRow = rowsToUpdate[rowId];\n      if (typeof processRowUpdate === 'function') {\n        const handleError = errorThrown => {\n          if (onProcessRowUpdateError) {\n            onProcessRowUpdateError(errorThrown);\n          } else if (process.env.NODE_ENV !== 'production') {\n            warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n          }\n        };\n        try {\n          const oldRow = apiRef.current.getRow(rowId);\n          const finalRowUpdate = await processRowUpdate(newRow, oldRow, {\n            rowId\n          });\n          this.updateRow(finalRowUpdate);\n        } catch (error) {\n          handleError(error);\n        }\n      } else {\n        this.updateRow(newRow);\n      }\n    };\n    const promises = rowIdsToUpdate.map(rowId => {\n      // Wrap in promise that always resolves to avoid Promise.all from stopping on first error.\n      // This is to avoid using `Promise.allSettled` that has worse browser support.\n      return new Promise(resolve => {\n        handleRowUpdate(rowId).then(resolve).catch(resolve);\n      });\n    });\n    Promise.all(promises).then(() => {\n      this.rowsToUpdate = {};\n      apiRef.current.publishEvent('clipboardPasteEnd');\n    });\n  }\n}\nfunction defaultPasteResolver({\n  pastedData,\n  apiRef,\n  updateCell,\n  pagination,\n  paginationMode\n}) {\n  const isSingleValuePasted = pastedData.length === 1 && pastedData[0].length === 1;\n  const cellSelectionModel = apiRef.current.getCellSelectionModel();\n  const selectedCellsArray = apiRef.current.getSelectedCellsAsArray();\n  if (cellSelectionModel && selectedCellsArray.length > 1) {\n    let lastRowId = selectedCellsArray[0].id;\n    let rowIndex = 0;\n    let colIndex = 0;\n    selectedCellsArray.forEach(({\n      id: rowId,\n      field\n    }) => {\n      if (rowId !== lastRowId) {\n        lastRowId = rowId;\n        rowIndex += 1;\n        colIndex = 0;\n      }\n      const rowDataArr = pastedData[isSingleValuePasted ? 0 : rowIndex];\n      const hasRowData = isSingleValuePasted ? true : rowDataArr !== undefined;\n      if (hasRowData) {\n        const cellValue = isSingleValuePasted ? rowDataArr[0] : rowDataArr[colIndex];\n        updateCell({\n          rowId,\n          field,\n          pastedCellValue: cellValue\n        });\n      }\n      colIndex += 1;\n    });\n    return;\n  }\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n    if (columnFieldsToExcludeFromPaste.includes(field)) {\n      return false;\n    }\n    return true;\n  });\n  const selectedRows = apiRef.current.getSelectedRows();\n  if (selectedRows.size > 0 && !isSingleValuePasted) {\n    // Multiple values are pasted starting from the first and top-most cell\n    const pastedRowsDataCount = pastedData.length;\n\n    // There's no guarantee that the selected rows are in the same order as the pasted rows\n    selectedRows.forEach((row, rowId) => {\n      let rowData;\n      if (pastedRowsDataCount === 1) {\n        // If only one row is pasted - paste it to all selected rows\n        rowData = pastedData[0];\n      } else {\n        rowData = pastedData.shift();\n      }\n      if (rowData === undefined) {\n        return;\n      }\n      rowData.forEach((newCellValue, cellIndex) => {\n        updateCell({\n          rowId,\n          field: visibleColumnFields[cellIndex],\n          pastedCellValue: newCellValue\n        });\n      });\n    });\n    return;\n  }\n  let selectedCell = gridFocusCellSelector(apiRef);\n  if (!selectedCell && selectedCellsArray.length === 1) {\n    selectedCell = selectedCellsArray[0];\n  }\n  if (!selectedCell) {\n    return;\n  }\n  if (columnFieldsToExcludeFromPaste.includes(selectedCell.field)) {\n    return;\n  }\n  const selectedRowId = selectedCell.id;\n  const selectedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(selectedRowId);\n  const visibleRowIds = pagination && paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n  const selectedFieldIndex = visibleColumnFields.indexOf(selectedCell.field);\n  pastedData.forEach((rowData, index) => {\n    const rowId = visibleRowIds[selectedRowIndex + index];\n    if (typeof rowId === 'undefined') {\n      return;\n    }\n    for (let i = selectedFieldIndex; i < visibleColumnFields.length; i += 1) {\n      const field = visibleColumnFields[i];\n      const stringValue = rowData[i - selectedFieldIndex];\n      updateCell({\n        rowId,\n        field,\n        pastedCellValue: stringValue\n      });\n    }\n  });\n}\nexport const useGridClipboardImport = (apiRef, props) => {\n  const processRowUpdate = props.processRowUpdate;\n  const onProcessRowUpdateError = props.onProcessRowUpdateError;\n  const getRowId = props.getRowId;\n  const enableClipboardPaste = !props.disableClipboardPaste;\n  const logger = useGridLogger(apiRef, 'useGridClipboardImport');\n  const splitClipboardPastedText = props.splitClipboardPastedText;\n  const {\n    pagination,\n    paginationMode,\n    onBeforeClipboardPasteStart\n  } = props;\n  const handlePaste = React.useCallback(async (params, event) => {\n    if (!enableClipboardPaste) {\n      return;\n    }\n    if (!isPasteShortcut(event)) {\n      return;\n    }\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell !== null) {\n      const cellMode = apiRef.current.getCellMode(focusedCell.id, focusedCell.field);\n      if (cellMode === 'edit') {\n        // Do not paste data when the cell is in edit mode\n        return;\n      }\n    }\n    const rootEl = apiRef.current.rootElementRef?.current;\n    if (!rootEl) {\n      return;\n    }\n    const text = await getTextFromClipboard(rootEl);\n    if (!text) {\n      return;\n    }\n    const pastedData = splitClipboardPastedText(text);\n    if (!pastedData) {\n      return;\n    }\n    if (onBeforeClipboardPasteStart) {\n      try {\n        await onBeforeClipboardPasteStart({\n          data: pastedData\n        });\n      } catch (error) {\n        logger.debug('Clipboard paste operation cancelled');\n        return;\n      }\n    }\n    const cellUpdater = new CellValueUpdater({\n      apiRef,\n      processRowUpdate,\n      onProcessRowUpdateError,\n      getRowId\n    });\n    apiRef.current.publishEvent('clipboardPasteStart', {\n      data: pastedData\n    });\n    defaultPasteResolver({\n      pastedData,\n      apiRef: getPublicApiRef(apiRef),\n      updateCell: (...args) => {\n        cellUpdater.updateCell(...args);\n      },\n      pagination,\n      paginationMode\n    });\n    cellUpdater.applyUpdates();\n  }, [apiRef, processRowUpdate, onProcessRowUpdateError, getRowId, enableClipboardPaste, splitClipboardPastedText, pagination, paginationMode, onBeforeClipboardPasteStart, logger]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (isPasteShortcut(event) && enableClipboardPaste) {\n      // Do not enter cell edit mode on paste\n      return false;\n    }\n    return initialValue;\n  }, [enableClipboardPaste]);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handlePaste);\n  useGridApiOptionHandler(apiRef, 'clipboardPasteStart', props.onClipboardPasteStart);\n  useGridApiOptionHandler(apiRef, 'clipboardPasteEnd', props.onClipboardPasteEnd);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n};", "import { useGridInitialization, useGridInitializeState, useGridClipboard, useGridColumnMenu, useGridColumns, columnsStateInitializer, useGridDensity, useGridCsvExport, useGridPrintExport, useGridFilter, filterStateInitializer, useGridFocus, useGridKeyboardNavigation, useGridPagination, paginationStateInitializer, useGridPreferencesPanel, useGridEditing, editingStateInitializer, useGridRows, useGridRowsPreProcessors, rowsStateInitializer, useGridRowsMeta, useGridParamsApi, useGridRowSelection, useGridSorting, sortingStateInitializer, useGridScroll, useGridEvents, dimensionsStateInitializer, useGridDimensions, useGridStatePersistence, useGridRowSelectionPreProcessors, columnMenuStateInitializer, densityStateInitializer, focusStateInitializer, preferencePanelStateInitializer, rowsMetaStateInitializer, rowSelectionStateInitializer, useGridColumnReorder, columnReorderStateInitializer, useGridColumnResize, columnResizeStateInitializer, useGridTreeData, useGridTreeDataPreProcessors, useGridColumnPinning, columnPinningStateInitializer, useGridColumnPinningPreProcessors, useGridDetailPanel, detailPanelStateInitializer, useGridDetailPanelPreProcessors, useGridInfiniteLoader, useGridColumnSpanning, useGridRowReorder, useGridRowReorderPreProcessors, useGridRowPinning, useGridRowPinningPreProcessors, rowPinningStateInitializer, useGridColumnGrouping, columnGroupsStateInitializer, useGridLazyLoader, useGridLazyLoaderPreProcessors, headerFilteringStateInitializer, useGridHeaderFiltering, virtualizationStateInitializer, useGridVirtualization, useGridDataSourceTreeDataPreProcessors, useGridDataSource, dataSourceStateInitializer, useGridRowSpanning, rowSpanningStateInitializer, useGridListView, listViewStateInitializer } from '@mui/x-data-grid-pro/internals';\n// Premium-only features\nimport { useGridAggregation, aggregationStateInitializer } from \"../hooks/features/aggregation/useGridAggregation.js\";\nimport { useGridAggregationPreProcessors } from \"../hooks/features/aggregation/useGridAggregationPreProcessors.js\";\nimport { useGridRowGrouping, rowGroupingStateInitializer } from \"../hooks/features/rowGrouping/useGridRowGrouping.js\";\nimport { useGridRowGroupingPreProcessors } from \"../hooks/features/rowGrouping/useGridRowGroupingPreProcessors.js\";\nimport { useGridDataSourceRowGroupingPreProcessors } from \"../hooks/features/rowGrouping/useGridDataSourceRowGroupingPreProcessors.js\";\nimport { useGridExcelExport } from \"../hooks/features/export/useGridExcelExport.js\";\nimport { cellSelectionStateInitializer, useGridCellSelection } from \"../hooks/features/cellSelection/useGridCellSelection.js\";\nimport { useGridClipboardImport } from \"../hooks/features/clipboard/useGridClipboardImport.js\";\nexport const useDataGridPremiumComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowReorderPreProcessors(apiRef, props);\n  useGridRowGroupingPreProcessors(apiRef, props);\n  useGridDataSourceRowGroupingPreProcessors(apiRef, props);\n  useGridTreeDataPreProcessors(apiRef, props);\n  useGridDataSourceTreeDataPreProcessors(apiRef, props);\n  useGridLazyLoaderPreProcessors(apiRef, props);\n  useGridRowPinningPreProcessors(apiRef);\n  useGridAggregationPreProcessors(apiRef, props);\n  useGridDetailPanelPreProcessors(apiRef, props);\n  // The column pinning `hydrateColumns` pre-processor must be after every other `hydrateColumns` pre-processors\n  // Because it changes the order of the columns.\n  useGridColumnPinningPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(headerFilteringStateInitializer, apiRef, props);\n  useGridInitializeState(rowGroupingStateInitializer, apiRef, props);\n  useGridInitializeState(aggregationStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(cellSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(detailPanelStateInitializer, apiRef, props);\n  useGridInitializeState(columnPinningStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowPinningStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnReorderStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(dataSourceStateInitializer, apiRef, props);\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridRowGrouping(apiRef, props);\n  useGridHeaderFiltering(apiRef, props);\n  useGridTreeData(apiRef, props);\n  useGridAggregation(apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridCellSelection(apiRef, props);\n  useGridColumnPinning(apiRef, props);\n  useGridRowPinning(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridDetailPanel(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridClipboardImport(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnReorder(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridRowReorder(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridInfiniteLoader(apiRef, props);\n  useGridLazyLoader(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridExcelExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridDataSource(apiRef, props);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { DATA_GRID_PRO_PROPS_DEFAULT_VALUES, GRID_DEFAULT_LOCALE_TEXT, GridSignature } from '@mui/x-data-grid-pro';\nimport { computeSlots, useProps } from '@mui/x-data-grid-pro/internals';\nimport { GRID_AGGREGATION_FUNCTIONS } from \"../hooks/features/aggregation/index.js\";\nimport { DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS } from \"../constants/dataGridPremiumDefaultSlotsComponents.js\";\nconst getDataGridPremiumForcedProps = themedProps => _extends({\n  signature: GridSignature.DataGridPremium\n}, themedProps.unstable_dataSource ? {\n  filterMode: 'server',\n  sortingMode: 'server',\n  paginationMode: 'server'\n} : {});\n\n/**\n * The default values of `DataGridPremiumPropsWithDefaultValue` to inject in the props of DataGridPremium.\n */\nexport const DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES = _extends({}, DATA_GRID_PRO_PROPS_DEFAULT_VALUES, {\n  cellSelection: false,\n  disableAggregation: false,\n  disableRowGrouping: false,\n  rowGroupingColumnMode: 'single',\n  aggregationFunctions: GRID_AGGREGATION_FUNCTIONS,\n  aggregationRowsScope: 'filtered',\n  getAggregationPosition: groupNode => groupNode.depth === -1 ? 'footer' : 'inline',\n  disableClipboardPaste: false,\n  splitClipboardPastedText: pastedText => {\n    // Excel on Windows adds an empty line break at the end of the copied text.\n    // See https://github.com/mui/mui-x/issues/9103\n    const text = pastedText.replace(/\\r?\\n$/, '');\n    return text.split(/\\r\\n|\\n|\\r/).map(row => row.split('\\t'));\n  }\n});\nconst defaultSlots = DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridPremiumProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PREMIUM_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots\n  }, getDataGridPremiumForcedProps(themedProps)), [themedProps, localeText, slots]);\n};", "import { isNumber } from '@mui/x-data-grid-pro/internals';\nconst sumAgg = {\n  apply: ({\n    values\n  }) => {\n    let sum = 0;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (isNumber(value)) {\n        sum += value;\n      }\n    }\n    return sum;\n  },\n  columnTypes: ['number']\n};\nconst avgAgg = {\n  apply: ({\n    values\n  }) => {\n    if (values.length === 0) {\n      return null;\n    }\n    let sum = 0;\n    let valuesCount = 0;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (isNumber(value)) {\n        valuesCount += 1;\n        sum += value;\n      }\n    }\n    return sum / valuesCount;\n  },\n  columnTypes: ['number']\n};\nconst minAgg = {\n  apply: ({\n    values\n  }) => {\n    if (values.length === 0) {\n      return null;\n    }\n    let min = +Infinity;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (value != null && value < min) {\n        min = value;\n      }\n    }\n    return min;\n  },\n  columnTypes: ['number', 'date', 'dateTime']\n};\nconst maxAgg = {\n  apply: ({\n    values\n  }) => {\n    if (values.length === 0) {\n      return null;\n    }\n    let max = -Infinity;\n    for (let i = 0; i < values.length; i += 1) {\n      const value = values[i];\n      if (value != null && value > max) {\n        max = value;\n      }\n    }\n    return max;\n  },\n  columnTypes: ['number', 'date', 'dateTime']\n};\nconst sizeAgg = {\n  apply: ({\n    values\n  }) => {\n    return values.filter(value => typeof value !== 'undefined').length;\n  },\n  valueFormatter: value => {\n    if (value == null || !isNumber(value)) {\n      return value;\n    }\n    return value.toLocaleString();\n  },\n  hasCellUnit: false\n};\nexport const GRID_AGGREGATION_FUNCTIONS = {\n  sum: sumAgg,\n  avg: avgAgg,\n  min: minAgg,\n  max: maxAgg,\n  size: sizeAgg\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridWorkspacesIcon, GridGroupWorkIcon, GridFunctionsIcon } from \"./icons.js\";\nconst iconsSlots = {\n  columnMenuUngroupIcon: GridWorkspacesIcon,\n  columnMenuGroupIcon: GridGroupWorkIcon,\n  columnMenuAggregationIcon: GridFunctionsIcon\n};\nconst materialSlots = _extends({}, iconsSlots);\nexport default materialSlots;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS } from '@mui/x-data-grid-pro/internals';\nimport { GridPremiumColumnMenu } from \"../components/GridPremiumColumnMenu.js\";\nimport materialSlots from \"../material/index.js\";\nexport const DATA_GRID_PREMIUM_DEFAULT_SLOTS_COMPONENTS = _extends({}, DATA_GRID_PRO_DEFAULT_SLOTS_COMPONENTS, materialSlots, {\n  columnMenu: GridPremiumColumnMenu\n});", "import { ponyfillGlobal } from '@mui/utils';\nexport const getReleaseInfo = () => {\n  const releaseInfo = \"MTczOTc0NjgwMDAwMA==\";\n  if (process.env.NODE_ENV !== 'production') {\n    // A simple hack to set the value in the test environment (has no build step).\n    // eslint-disable-next-line no-useless-concat\n    if (releaseInfo === '__RELEASE' + '_INFO__') {\n      // eslint-disable-next-line no-underscore-dangle\n      return ponyfillGlobal.__MUI_RELEASE_INFO__;\n    }\n  }\n  return releaseInfo;\n};", "import { useGridPrivateApiContext as useCommunityGridPrivateApiContext } from '@mui/x-data-grid/internals';\nexport const useGridPrivateApiContext = useCommunityGridPrivateApiContext;", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridAriaAttributes as useGridAriaAttributesPro, useGridSelector } from '@mui/x-data-grid-pro/internals';\nimport { gridRowGroupingSanitizedModelSelector } from \"../features/rowGrouping/gridRowGroupingSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nexport const useGridAriaAttributes = () => {\n  const rootProps = useGridRootProps();\n  const ariaAttributesPro = useGridAriaAttributesPro();\n  const apiRef = useGridPrivateApiContext();\n  const gridRowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  const ariaAttributesPremium = rootProps.experimentalFeatures?.ariaV8 && gridRowGroupingModel.length > 0 ? {\n    role: 'treegrid'\n  } : {};\n  return _extends({}, ariaAttributesPro, ariaAttributesPremium);\n};", "import { useGridRowAriaAttributes as useGridRowAriaAttributesPro, useGridSelector } from '@mui/x-data-grid-pro/internals';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { gridRowGroupingSanitizedModelSelector } from \"../rowGrouping/gridRowGroupingSelector.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const gridRowGroupingModel = useGridSelector(apiRef, gridRowGroupingSanitizedModelSelector);\n  return useGridRowAriaAttributesPro(gridRowGroupingModel.length > 0);\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnVisibilityModelSelector } from '@mui/x-data-grid-pro';\nconst updateColumnVisibilityModel = (columnVisibilityModel, rowGroupingModel, prevRowGroupingModel) => {\n  const newColumnVisibilityModel = _extends({}, columnVisibilityModel);\n  rowGroupingModel?.forEach(field => {\n    if (!prevRowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = false;\n    }\n  });\n  prevRowGroupingModel?.forEach(field => {\n    if (!rowGroupingModel?.includes(field)) {\n      newColumnVisibilityModel[field] = true;\n    }\n  });\n  return newColumnVisibilityModel;\n};\n\n/**\n * Automatically hide columns when added to the row grouping model and stop hiding them when they are removed.\n * Handles both the `props.initialState.rowGrouping.model` and `props.rowGroupingModel`\n * Does not work when used with the `hide` property of `GridColDef`\n */\nexport const useKeepGroupedColumnsHidden = props => {\n  const initialProps = React.useRef(props);\n  const rowGroupingModel = React.useRef(props.rowGroupingModel ?? props.initialState?.rowGrouping?.model);\n  React.useEffect(() => {\n    props.apiRef.current.subscribeEvent('rowGroupingModelChange', newModel => {\n      const columnVisibilityModel = updateColumnVisibilityModel(gridColumnVisibilityModelSelector(props.apiRef), newModel, rowGroupingModel.current);\n      props.apiRef.current.setColumnVisibilityModel(columnVisibilityModel);\n      rowGroupingModel.current = newModel;\n    });\n  }, [props.apiRef]);\n  return React.useMemo(() => {\n    const invariantInitialState = initialProps.current.initialState;\n    const columnVisibilityModel = updateColumnVisibilityModel(invariantInitialState?.columns?.columnVisibilityModel, rowGroupingModel.current, undefined);\n    return _extends({}, invariantInitialState, {\n      columns: _extends({}, invariantInitialState?.columns, {\n        columnVisibilityModel\n      })\n    });\n  }, []);\n};", "import { blue, green, lightBlue, orange, pink, purple, red } from '@mui/material/colors';\nexport const COLORS = [pink[500], blue[500], orange[500], red[500], green[500], lightBlue[500], purple[500]];\nexport const STATUS_OPTIONS = ['Open', 'PartiallyFilled', 'Filled', 'Rejected'];\nexport const TAXCODE_OPTIONS = ['BR', '1250L', '20G', 'BC45', 'IGN179'];\nexport const RATE_TYPE_OPTIONS = ['Fixed', 'Floating'];\nexport const CONTRACT_TYPE_OPTIONS = ['FP', 'TM', 'CR'];\nexport const INCOTERM_OPTIONS = ['EXW (Ex Works)', 'FAS (Free Alongside Ship)', 'FCA (Free Carrier)', 'CPT (Carriage Paid To)', 'DAP (Delivered at Place)', 'DPU (Delivered at Place Unloaded)', 'DDP (Delivered Duty Paid)'];\nexport const COMMODITY_OPTIONS = ['Corn', 'Oats', 'Rough Rice', 'Soybeans', 'Rapeseed', 'Soybeans', 'Soybean Meal', 'Soybean Oil', 'Wheat', 'Milk', 'Cocoa', 'Coffee C', 'Cotton No.2', 'Sugar No.11', 'Sugar No.14', 'Frozen Concentrated Orange Juice', 'Adzuki bean', 'Robusta coffee'];\nexport const CURRENCY_OPTIONS = ['USD', 'GBP', 'JPY', 'EUR', 'BRL', 'MXN', 'AUD', 'CAD', 'NZD', 'ARS', 'CHF', 'THB', 'HKD', 'TRY'];\nexport const COUNTRY_OPTIONS = ['United States', 'United Kingdom', 'Japan', 'France', 'Brazil', 'Mexico', 'Australia', 'Canada', 'New Zealand', 'Argentina', 'Switzerland', 'Thailand', 'Hong Kong', 'Turkey'];\nexport const COUNTRY_ISO_OPTIONS = [{\n  value: 'AD',\n  code: 'AD',\n  label: 'Andorra',\n  phone: '376'\n}, {\n  value: 'AE',\n  code: 'AE',\n  label: 'United Arab Emirates',\n  phone: '971'\n}, {\n  value: 'AF',\n  code: 'AF',\n  label: 'Afghanistan',\n  phone: '93'\n}, {\n  value: 'AG',\n  code: 'AG',\n  label: 'Antigua and Barbuda',\n  phone: '1-268'\n}, {\n  value: 'AI',\n  code: 'AI',\n  label: 'Anguilla',\n  phone: '1-264'\n}, {\n  value: 'AL',\n  code: 'AL',\n  label: 'Albania',\n  phone: '355'\n}, {\n  value: 'AM',\n  code: 'AM',\n  label: 'Armenia',\n  phone: '374'\n}, {\n  value: 'AO',\n  code: 'AO',\n  label: 'Angola',\n  phone: '244'\n}, {\n  value: 'AQ',\n  code: 'AQ',\n  label: 'Antarctica',\n  phone: '672'\n}, {\n  value: 'AR',\n  code: 'AR',\n  label: 'Argentina',\n  phone: '54'\n}, {\n  value: 'AS',\n  code: 'AS',\n  label: 'American Samoa',\n  phone: '1-684'\n}, {\n  value: 'AT',\n  code: 'AT',\n  label: 'Austria',\n  phone: '43'\n}, {\n  value: 'AU',\n  code: 'AU',\n  label: 'Australia',\n  phone: '61',\n  suggested: true\n}, {\n  value: 'AW',\n  code: 'AW',\n  label: 'Aruba',\n  phone: '297'\n}, {\n  value: 'AX',\n  code: 'AX',\n  label: 'Alland Islands',\n  phone: '358'\n}, {\n  value: 'AZ',\n  code: 'AZ',\n  label: 'Azerbaijan',\n  phone: '994'\n}, {\n  value: 'BA',\n  code: 'BA',\n  label: 'Bosnia and Herzegovina',\n  phone: '387'\n}, {\n  value: 'BB',\n  code: 'BB',\n  label: 'Barbados',\n  phone: '1-246'\n}, {\n  value: 'BD',\n  code: 'BD',\n  label: 'Bangladesh',\n  phone: '880'\n}, {\n  value: 'BE',\n  code: 'BE',\n  label: 'Belgium',\n  phone: '32'\n}, {\n  value: 'BF',\n  code: 'BF',\n  label: 'Burkina Faso',\n  phone: '226'\n}, {\n  value: 'BG',\n  code: 'BG',\n  label: 'Bulgaria',\n  phone: '359'\n}, {\n  value: 'BH',\n  code: 'BH',\n  label: 'Bahrain',\n  phone: '973'\n}, {\n  value: 'BI',\n  code: 'BI',\n  label: 'Burundi',\n  phone: '257'\n}, {\n  value: 'BJ',\n  code: 'BJ',\n  label: 'Benin',\n  phone: '229'\n}, {\n  value: 'BL',\n  code: 'BL',\n  label: 'Saint Barthelemy',\n  phone: '590'\n}, {\n  value: 'BM',\n  code: 'BM',\n  label: 'Bermuda',\n  phone: '1-441'\n}, {\n  value: 'BN',\n  code: 'BN',\n  label: 'Brunei Darussalam',\n  phone: '673'\n}, {\n  value: 'BO',\n  code: 'BO',\n  label: 'Bolivia',\n  phone: '591'\n}, {\n  value: 'BR',\n  code: 'BR',\n  label: 'Brazil',\n  phone: '55'\n}, {\n  value: 'BS',\n  code: 'BS',\n  label: 'Bahamas',\n  phone: '1-242'\n}, {\n  value: 'BT',\n  code: 'BT',\n  label: 'Bhutan',\n  phone: '975'\n}, {\n  value: 'BV',\n  code: 'BV',\n  label: 'Bouvet Island',\n  phone: '47'\n}, {\n  value: 'BW',\n  code: 'BW',\n  label: 'Botswana',\n  phone: '267'\n}, {\n  value: 'BY',\n  code: 'BY',\n  label: 'Belarus',\n  phone: '375'\n}, {\n  value: 'BZ',\n  code: 'BZ',\n  label: 'Belize',\n  phone: '501'\n}, {\n  value: 'CA',\n  code: 'CA',\n  label: 'Canada',\n  phone: '1',\n  suggested: true\n}, {\n  value: 'CC',\n  code: 'CC',\n  label: 'Cocos (Keeling) Islands',\n  phone: '61'\n}, {\n  value: 'CD',\n  code: 'CD',\n  label: 'Congo, Democratic Republic of the',\n  phone: '243'\n}, {\n  value: 'CF',\n  code: 'CF',\n  label: 'Central African Republic',\n  phone: '236'\n}, {\n  value: 'CG',\n  code: 'CG',\n  label: 'Congo, Republic of the',\n  phone: '242'\n}, {\n  value: 'CH',\n  code: 'CH',\n  label: 'Switzerland',\n  phone: '41'\n}, {\n  value: 'CI',\n  code: 'CI',\n  label: \"Cote d'Ivoire\",\n  phone: '225'\n}, {\n  value: 'CK',\n  code: 'CK',\n  label: 'Cook Islands',\n  phone: '682'\n}, {\n  value: 'CL',\n  code: 'CL',\n  label: 'Chile',\n  phone: '56'\n}, {\n  value: 'CM',\n  code: 'CM',\n  label: 'Cameroon',\n  phone: '237'\n}, {\n  value: 'CN',\n  code: 'CN',\n  label: 'China',\n  phone: '86'\n}, {\n  value: 'CO',\n  code: 'CO',\n  label: 'Colombia',\n  phone: '57'\n}, {\n  value: 'CR',\n  code: 'CR',\n  label: 'Costa Rica',\n  phone: '506'\n}, {\n  value: 'CU',\n  code: 'CU',\n  label: 'Cuba',\n  phone: '53'\n}, {\n  value: 'CV',\n  code: 'CV',\n  label: 'Cape Verde',\n  phone: '238'\n}, {\n  value: 'CW',\n  code: 'CW',\n  label: 'Curacao',\n  phone: '599'\n}, {\n  value: 'CX',\n  code: 'CX',\n  label: 'Christmas Island',\n  phone: '61'\n}, {\n  value: 'CY',\n  code: 'CY',\n  label: 'Cyprus',\n  phone: '357'\n}, {\n  value: 'CZ',\n  code: 'CZ',\n  label: 'Czech Republic',\n  phone: '420'\n}, {\n  value: 'DE',\n  code: 'DE',\n  label: 'Germany',\n  phone: '49',\n  suggested: true\n}, {\n  value: 'DJ',\n  code: 'DJ',\n  label: 'Djibouti',\n  phone: '253'\n}, {\n  value: 'DK',\n  code: 'DK',\n  label: 'Denmark',\n  phone: '45'\n}, {\n  value: 'DM',\n  code: 'DM',\n  label: 'Dominica',\n  phone: '1-767'\n}, {\n  value: 'DO',\n  code: 'DO',\n  label: 'Dominican Republic',\n  phone: '1-809'\n}, {\n  value: 'DZ',\n  code: 'DZ',\n  label: 'Algeria',\n  phone: '213'\n}, {\n  value: 'EC',\n  code: 'EC',\n  label: 'Ecuador',\n  phone: '593'\n}, {\n  value: 'EE',\n  code: 'EE',\n  label: 'Estonia',\n  phone: '372'\n}, {\n  value: 'EG',\n  code: 'EG',\n  label: 'Egypt',\n  phone: '20'\n}, {\n  value: 'EH',\n  code: 'EH',\n  label: 'Western Sahara',\n  phone: '212'\n}, {\n  value: 'ER',\n  code: 'ER',\n  label: 'Eritrea',\n  phone: '291'\n}, {\n  value: 'ES',\n  code: 'ES',\n  label: 'Spain',\n  phone: '34'\n}, {\n  value: 'ET',\n  code: 'ET',\n  label: 'Ethiopia',\n  phone: '251'\n}, {\n  value: 'FI',\n  code: 'FI',\n  label: 'Finland',\n  phone: '358'\n}, {\n  value: 'FJ',\n  code: 'FJ',\n  label: 'Fiji',\n  phone: '679'\n}, {\n  value: 'FK',\n  code: 'FK',\n  label: 'Falkland Islands (Malvinas)',\n  phone: '500'\n}, {\n  value: 'FM',\n  code: 'FM',\n  label: 'Micronesia, Federated States of',\n  phone: '691'\n}, {\n  value: 'FO',\n  code: 'FO',\n  label: 'Faroe Islands',\n  phone: '298'\n}, {\n  value: 'FR',\n  code: 'FR',\n  label: 'France',\n  phone: '33',\n  suggested: true\n}, {\n  value: 'GA',\n  code: 'GA',\n  label: 'Gabon',\n  phone: '241'\n}, {\n  value: 'GB',\n  code: 'GB',\n  label: 'United Kingdom',\n  phone: '44'\n}, {\n  value: 'GD',\n  code: 'GD',\n  label: 'Grenada',\n  phone: '1-473'\n}, {\n  value: 'GE',\n  code: 'GE',\n  label: 'Georgia',\n  phone: '995'\n}, {\n  value: 'GF',\n  code: 'GF',\n  label: 'French Guiana',\n  phone: '594'\n}, {\n  value: 'GG',\n  code: 'GG',\n  label: 'Guernsey',\n  phone: '44'\n}, {\n  value: 'GH',\n  code: 'GH',\n  label: 'Ghana',\n  phone: '233'\n}, {\n  value: 'GI',\n  code: 'GI',\n  label: 'Gibraltar',\n  phone: '350'\n}, {\n  value: 'GL',\n  code: 'GL',\n  label: 'Greenland',\n  phone: '299'\n}, {\n  value: 'GM',\n  code: 'GM',\n  label: 'Gambia',\n  phone: '220'\n}, {\n  value: 'GN',\n  code: 'GN',\n  label: 'Guinea',\n  phone: '224'\n}, {\n  value: 'GP',\n  code: 'GP',\n  label: 'Guadeloupe',\n  phone: '590'\n}, {\n  value: 'GQ',\n  code: 'GQ',\n  label: 'Equatorial Guinea',\n  phone: '240'\n}, {\n  value: 'GR',\n  code: 'GR',\n  label: 'Greece',\n  phone: '30'\n}, {\n  value: 'GS',\n  code: 'GS',\n  label: 'South Georgia and the South Sandwich Islands',\n  phone: '500'\n}, {\n  value: 'GT',\n  code: 'GT',\n  label: 'Guatemala',\n  phone: '502'\n}, {\n  value: 'GU',\n  code: 'GU',\n  label: 'Guam',\n  phone: '1-671'\n}, {\n  value: 'GW',\n  code: 'GW',\n  label: 'Guinea-Bissau',\n  phone: '245'\n}, {\n  value: 'GY',\n  code: 'GY',\n  label: 'Guyana',\n  phone: '592'\n}, {\n  value: 'HK',\n  code: 'HK',\n  label: 'Hong Kong',\n  phone: '852'\n}, {\n  value: 'HM',\n  code: 'HM',\n  label: 'Heard Island and McDonald Islands',\n  phone: '672'\n}, {\n  value: 'HN',\n  code: 'HN',\n  label: 'Honduras',\n  phone: '504'\n}, {\n  value: 'HR',\n  code: 'HR',\n  label: 'Croatia',\n  phone: '385'\n}, {\n  value: 'HT',\n  code: 'HT',\n  label: 'Haiti',\n  phone: '509'\n}, {\n  value: 'HU',\n  code: 'HU',\n  label: 'Hungary',\n  phone: '36'\n}, {\n  value: 'ID',\n  code: 'ID',\n  label: 'Indonesia',\n  phone: '62'\n}, {\n  value: 'IE',\n  code: 'IE',\n  label: 'Ireland',\n  phone: '353'\n}, {\n  value: 'IL',\n  code: 'IL',\n  label: 'Israel',\n  phone: '972'\n}, {\n  value: 'IM',\n  code: 'IM',\n  label: 'Isle of Man',\n  phone: '44'\n}, {\n  value: 'IN',\n  code: 'IN',\n  label: 'India',\n  phone: '91'\n}, {\n  value: 'IO',\n  code: 'IO',\n  label: 'British Indian Ocean Territory',\n  phone: '246'\n}, {\n  value: 'IQ',\n  code: 'IQ',\n  label: 'Iraq',\n  phone: '964'\n}, {\n  value: 'IR',\n  code: 'IR',\n  label: 'Iran, Islamic Republic of',\n  phone: '98'\n}, {\n  value: 'IS',\n  code: 'IS',\n  label: 'Iceland',\n  phone: '354'\n}, {\n  value: 'IT',\n  code: 'IT',\n  label: 'Italy',\n  phone: '39'\n}, {\n  value: 'JE',\n  code: 'JE',\n  label: 'Jersey',\n  phone: '44'\n}, {\n  value: 'JM',\n  code: 'JM',\n  label: 'Jamaica',\n  phone: '1-876'\n}, {\n  value: 'JO',\n  code: 'JO',\n  label: 'Jordan',\n  phone: '962'\n}, {\n  value: 'JP',\n  code: 'JP',\n  label: 'Japan',\n  phone: '81',\n  suggested: true\n}, {\n  value: 'KE',\n  code: 'KE',\n  label: 'Kenya',\n  phone: '254'\n}, {\n  value: 'KG',\n  code: 'KG',\n  label: 'Kyrgyzstan',\n  phone: '996'\n}, {\n  value: 'KH',\n  code: 'KH',\n  label: 'Cambodia',\n  phone: '855'\n}, {\n  value: 'KI',\n  code: 'KI',\n  label: 'Kiribati',\n  phone: '686'\n}, {\n  value: 'KM',\n  code: 'KM',\n  label: 'Comoros',\n  phone: '269'\n}, {\n  value: 'KN',\n  code: 'KN',\n  label: 'Saint Kitts and Nevis',\n  phone: '1-869'\n}, {\n  value: 'KP',\n  code: 'KP',\n  label: \"Korea, Democratic People's Republic of\",\n  phone: '850'\n}, {\n  value: 'KR',\n  code: 'KR',\n  label: 'Korea, Republic of',\n  phone: '82'\n}, {\n  value: 'KW',\n  code: 'KW',\n  label: 'Kuwait',\n  phone: '965'\n}, {\n  value: 'KY',\n  code: 'KY',\n  label: 'Cayman Islands',\n  phone: '1-345'\n}, {\n  value: 'KZ',\n  code: 'KZ',\n  label: 'Kazakhstan',\n  phone: '7'\n}, {\n  value: 'LA',\n  code: 'LA',\n  label: \"Lao People's Democratic Republic\",\n  phone: '856'\n}, {\n  value: 'LB',\n  code: 'LB',\n  label: 'Lebanon',\n  phone: '961'\n}, {\n  value: 'LC',\n  code: 'LC',\n  label: 'Saint Lucia',\n  phone: '1-758'\n}, {\n  value: 'LI',\n  code: 'LI',\n  label: 'Liechtenstein',\n  phone: '423'\n}, {\n  value: 'LK',\n  code: 'LK',\n  label: 'Sri Lanka',\n  phone: '94'\n}, {\n  value: 'LR',\n  code: 'LR',\n  label: 'Liberia',\n  phone: '231'\n}, {\n  value: 'LS',\n  code: 'LS',\n  label: 'Lesotho',\n  phone: '266'\n}, {\n  value: 'LT',\n  code: 'LT',\n  label: 'Lithuania',\n  phone: '370'\n}, {\n  value: 'LU',\n  code: 'LU',\n  label: 'Luxembourg',\n  phone: '352'\n}, {\n  value: 'LV',\n  code: 'LV',\n  label: 'Latvia',\n  phone: '371'\n}, {\n  value: 'LY',\n  code: 'LY',\n  label: 'Libya',\n  phone: '218'\n}, {\n  value: 'MA',\n  code: 'MA',\n  label: 'Morocco',\n  phone: '212'\n}, {\n  value: 'MC',\n  code: 'MC',\n  label: 'Monaco',\n  phone: '377'\n}, {\n  value: 'MD',\n  code: 'MD',\n  label: 'Moldova, Republic of',\n  phone: '373'\n}, {\n  value: 'ME',\n  code: 'ME',\n  label: 'Montenegro',\n  phone: '382'\n}, {\n  value: 'MF',\n  code: 'MF',\n  label: 'Saint Martin (French part)',\n  phone: '590'\n}, {\n  value: 'MG',\n  code: 'MG',\n  label: 'Madagascar',\n  phone: '261'\n}, {\n  value: 'MH',\n  code: 'MH',\n  label: 'Marshall Islands',\n  phone: '692'\n}, {\n  value: 'MK',\n  code: 'MK',\n  label: 'North Macedonia',\n  phone: '389'\n}, {\n  value: 'ML',\n  code: 'ML',\n  label: 'Mali',\n  phone: '223'\n}, {\n  value: 'MM',\n  code: 'MM',\n  label: 'Myanmar',\n  phone: '95'\n}, {\n  value: 'MN',\n  code: 'MN',\n  label: 'Mongolia',\n  phone: '976'\n}, {\n  value: 'MO',\n  code: 'MO',\n  label: 'Macao',\n  phone: '853'\n}, {\n  value: 'MP',\n  code: 'MP',\n  label: 'Northern Mariana Islands',\n  phone: '1-670'\n}, {\n  value: 'MQ',\n  code: 'MQ',\n  label: 'Martinique',\n  phone: '596'\n}, {\n  value: 'MR',\n  code: 'MR',\n  label: 'Mauritania',\n  phone: '222'\n}, {\n  value: 'MS',\n  code: 'MS',\n  label: 'Montserrat',\n  phone: '1-664'\n}, {\n  value: 'MT',\n  code: 'MT',\n  label: 'Malta',\n  phone: '356'\n}, {\n  value: 'MU',\n  code: 'MU',\n  label: 'Mauritius',\n  phone: '230'\n}, {\n  value: 'MV',\n  code: 'MV',\n  label: 'Maldives',\n  phone: '960'\n}, {\n  value: 'MW',\n  code: 'MW',\n  label: 'Malawi',\n  phone: '265'\n}, {\n  value: 'MX',\n  code: 'MX',\n  label: 'Mexico',\n  phone: '52'\n}, {\n  value: 'MY',\n  code: 'MY',\n  label: 'Malaysia',\n  phone: '60'\n}, {\n  value: 'MZ',\n  code: 'MZ',\n  label: 'Mozambique',\n  phone: '258'\n}, {\n  value: 'NA',\n  code: 'NA',\n  label: 'Namibia',\n  phone: '264'\n}, {\n  value: 'NC',\n  code: 'NC',\n  label: 'New Caledonia',\n  phone: '687'\n}, {\n  value: 'NE',\n  code: 'NE',\n  label: 'Niger',\n  phone: '227'\n}, {\n  value: 'NF',\n  code: 'NF',\n  label: 'Norfolk Island',\n  phone: '672'\n}, {\n  value: 'NG',\n  code: 'NG',\n  label: 'Nigeria',\n  phone: '234'\n}, {\n  value: 'NI',\n  code: 'NI',\n  label: 'Nicaragua',\n  phone: '505'\n}, {\n  value: 'NL',\n  code: 'NL',\n  label: 'Netherlands',\n  phone: '31'\n}, {\n  value: 'NO',\n  code: 'NO',\n  label: 'Norway',\n  phone: '47'\n}, {\n  value: 'NP',\n  code: 'NP',\n  label: 'Nepal',\n  phone: '977'\n}, {\n  value: 'NR',\n  code: 'NR',\n  label: 'Nauru',\n  phone: '674'\n}, {\n  value: 'NU',\n  code: 'NU',\n  label: 'Niue',\n  phone: '683'\n}, {\n  value: 'NZ',\n  code: 'NZ',\n  label: 'New Zealand',\n  phone: '64'\n}, {\n  value: 'OM',\n  code: 'OM',\n  label: 'Oman',\n  phone: '968'\n}, {\n  value: 'PA',\n  code: 'PA',\n  label: 'Panama',\n  phone: '507'\n}, {\n  value: 'PE',\n  code: 'PE',\n  label: 'Peru',\n  phone: '51'\n}, {\n  value: 'PF',\n  code: 'PF',\n  label: 'French Polynesia',\n  phone: '689'\n}, {\n  value: 'PG',\n  code: 'PG',\n  label: 'Papua New Guinea',\n  phone: '675'\n}, {\n  value: 'PH',\n  code: 'PH',\n  label: 'Philippines',\n  phone: '63'\n}, {\n  value: 'PK',\n  code: 'PK',\n  label: 'Pakistan',\n  phone: '92'\n}, {\n  value: 'PL',\n  code: 'PL',\n  label: 'Poland',\n  phone: '48'\n}, {\n  value: 'PM',\n  code: 'PM',\n  label: 'Saint Pierre and Miquelon',\n  phone: '508'\n}, {\n  value: 'PN',\n  code: 'PN',\n  label: 'Pitcairn',\n  phone: '870'\n}, {\n  value: 'PR',\n  code: 'PR',\n  label: 'Puerto Rico',\n  phone: '1'\n}, {\n  value: 'PS',\n  code: 'PS',\n  label: 'Palestine, State of',\n  phone: '970'\n}, {\n  value: 'PT',\n  code: 'PT',\n  label: 'Portugal',\n  phone: '351'\n}, {\n  value: 'PW',\n  code: 'PW',\n  label: 'Palau',\n  phone: '680'\n}, {\n  value: 'PY',\n  code: 'PY',\n  label: 'Paraguay',\n  phone: '595'\n}, {\n  value: 'QA',\n  code: 'QA',\n  label: 'Qatar',\n  phone: '974'\n}, {\n  value: 'RE',\n  code: 'RE',\n  label: 'Reunion',\n  phone: '262'\n}, {\n  value: 'RO',\n  code: 'RO',\n  label: 'Romania',\n  phone: '40'\n}, {\n  value: 'RS',\n  code: 'RS',\n  label: 'Serbia',\n  phone: '381'\n}, {\n  value: 'RU',\n  code: 'RU',\n  label: 'Russian Federation',\n  phone: '7'\n}, {\n  value: 'RW',\n  code: 'RW',\n  label: 'Rwanda',\n  phone: '250'\n}, {\n  value: 'SA',\n  code: 'SA',\n  label: 'Saudi Arabia',\n  phone: '966'\n}, {\n  value: 'SB',\n  code: 'SB',\n  label: 'Solomon Islands',\n  phone: '677'\n}, {\n  value: 'SC',\n  code: 'SC',\n  label: 'Seychelles',\n  phone: '248'\n}, {\n  value: 'SD',\n  code: 'SD',\n  label: 'Sudan',\n  phone: '249'\n}, {\n  value: 'SE',\n  code: 'SE',\n  label: 'Sweden',\n  phone: '46'\n}, {\n  value: 'SG',\n  code: 'SG',\n  label: 'Singapore',\n  phone: '65'\n}, {\n  value: 'SH',\n  code: 'SH',\n  label: 'Saint Helena',\n  phone: '290'\n}, {\n  value: 'SI',\n  code: 'SI',\n  label: 'Slovenia',\n  phone: '386'\n}, {\n  value: 'SJ',\n  code: 'SJ',\n  label: 'Svalbard and Jan Mayen',\n  phone: '47'\n}, {\n  value: 'SK',\n  code: 'SK',\n  label: 'Slovakia',\n  phone: '421'\n}, {\n  value: 'SL',\n  code: 'SL',\n  label: 'Sierra Leone',\n  phone: '232'\n}, {\n  value: 'SM',\n  code: 'SM',\n  label: 'San Marino',\n  phone: '378'\n}, {\n  value: 'SN',\n  code: 'SN',\n  label: 'Senegal',\n  phone: '221'\n}, {\n  value: 'SO',\n  code: 'SO',\n  label: 'Somalia',\n  phone: '252'\n}, {\n  value: 'SR',\n  code: 'SR',\n  label: 'Suriname',\n  phone: '597'\n}, {\n  value: 'SS',\n  code: 'SS',\n  label: 'South Sudan',\n  phone: '211'\n}, {\n  value: 'ST',\n  code: 'ST',\n  label: 'Sao Tome and Principe',\n  phone: '239'\n}, {\n  value: 'SV',\n  code: 'SV',\n  label: 'El Salvador',\n  phone: '503'\n}, {\n  value: 'SX',\n  code: 'SX',\n  label: 'Sint Maarten (Dutch part)',\n  phone: '1-721'\n}, {\n  value: 'SY',\n  code: 'SY',\n  label: 'Syrian Arab Republic',\n  phone: '963'\n}, {\n  value: 'SZ',\n  code: 'SZ',\n  label: 'Swaziland',\n  phone: '268'\n}, {\n  value: 'TC',\n  code: 'TC',\n  label: 'Turks and Caicos Islands',\n  phone: '1-649'\n}, {\n  value: 'TD',\n  code: 'TD',\n  label: 'Chad',\n  phone: '235'\n}, {\n  value: 'TF',\n  code: 'TF',\n  label: 'French Southern Territories',\n  phone: '262'\n}, {\n  value: 'TG',\n  code: 'TG',\n  label: 'Togo',\n  phone: '228'\n}, {\n  value: 'TH',\n  code: 'TH',\n  label: 'Thailand',\n  phone: '66'\n}, {\n  value: 'TJ',\n  code: 'TJ',\n  label: 'Tajikistan',\n  phone: '992'\n}, {\n  value: 'TK',\n  code: 'TK',\n  label: 'Tokelau',\n  phone: '690'\n}, {\n  value: 'TL',\n  code: 'TL',\n  label: 'Timor-Leste',\n  phone: '670'\n}, {\n  value: 'TM',\n  code: 'TM',\n  label: 'Turkmenistan',\n  phone: '993'\n}, {\n  value: 'TN',\n  code: 'TN',\n  label: 'Tunisia',\n  phone: '216'\n}, {\n  value: 'TO',\n  code: 'TO',\n  label: 'Tonga',\n  phone: '676'\n}, {\n  value: 'TR',\n  code: 'TR',\n  label: 'Turkey',\n  phone: '90'\n}, {\n  value: 'TT',\n  code: 'TT',\n  label: 'Trinidad and Tobago',\n  phone: '1-868'\n}, {\n  value: 'TV',\n  code: 'TV',\n  label: 'Tuvalu',\n  phone: '688'\n}, {\n  value: 'TW',\n  code: 'TW',\n  label: 'Taiwan, Province of China',\n  phone: '886'\n}, {\n  value: 'TZ',\n  code: 'TZ',\n  label: 'United Republic of Tanzania',\n  phone: '255'\n}, {\n  value: 'UA',\n  code: 'UA',\n  label: 'Ukraine',\n  phone: '380'\n}, {\n  value: 'UG',\n  code: 'UG',\n  label: 'Uganda',\n  phone: '256'\n}, {\n  value: 'US',\n  code: 'US',\n  label: 'United States',\n  phone: '1',\n  suggested: true\n}, {\n  value: 'UY',\n  code: 'UY',\n  label: 'Uruguay',\n  phone: '598'\n}, {\n  value: 'UZ',\n  code: 'UZ',\n  label: 'Uzbekistan',\n  phone: '998'\n}, {\n  value: 'VA',\n  code: 'VA',\n  label: 'Holy See (Vatican City State)',\n  phone: '379'\n}, {\n  value: 'VC',\n  code: 'VC',\n  label: 'Saint Vincent and the Grenadines',\n  phone: '1-784'\n}, {\n  value: 'VE',\n  code: 'VE',\n  label: 'Venezuela',\n  phone: '58'\n}, {\n  value: 'VG',\n  code: 'VG',\n  label: 'British Virgin Islands',\n  phone: '1-284'\n}, {\n  value: 'VI',\n  code: 'VI',\n  label: 'US Virgin Islands',\n  phone: '1-340'\n}, {\n  value: 'VN',\n  code: 'VN',\n  label: 'Vietnam',\n  phone: '84'\n}, {\n  value: 'VU',\n  code: 'VU',\n  label: 'Vanuatu',\n  phone: '678'\n}, {\n  value: 'WF',\n  code: 'WF',\n  label: 'Wallis and Futuna',\n  phone: '681'\n}, {\n  value: 'WS',\n  code: 'WS',\n  label: 'Samoa',\n  phone: '685'\n}, {\n  value: 'XK',\n  code: 'XK',\n  label: 'Kosovo',\n  phone: '383'\n}, {\n  value: 'YE',\n  code: 'YE',\n  label: 'Yemen',\n  phone: '967'\n}, {\n  value: 'YT',\n  code: 'YT',\n  label: 'Mayotte',\n  phone: '262'\n}, {\n  value: 'ZA',\n  code: 'ZA',\n  label: 'South Africa',\n  phone: '27'\n}, {\n  value: 'ZM',\n  code: 'ZM',\n  label: 'Zambia',\n  phone: '260'\n}, {\n  value: 'ZW',\n  code: 'ZW',\n  label: 'Zimbabwe',\n  phone: '263'\n}];\nexport const COUNTRY_ISO_OPTIONS_SORTED = [...COUNTRY_ISO_OPTIONS].sort((v1, v2) => v1.label.localeCompare(v2.label));", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Slider, { sliderClasses } from '@mui/material/Slider';\nimport Tooltip from '@mui/material/Tooltip';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { alpha, styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledSlider = styled(Slider)(({\n  theme\n}) => ({\n  display: 'flex',\n  height: '100%',\n  width: '100%',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: 0,\n  borderRadius: 0,\n  [`& .${sliderClasses.rail}`]: {\n    height: '100%',\n    backgroundColor: 'transparent'\n  },\n  [`& .${sliderClasses.track}`]: {\n    height: '100%',\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shorter\n    }),\n    '&.low': {\n      backgroundColor: '#f44336'\n    },\n    '&.medium': {\n      backgroundColor: '#efbb5aa3'\n    },\n    '&.high': {\n      backgroundColor: '#088208a3'\n    }\n  },\n  [`& .${sliderClasses.thumb}`]: {\n    height: '100%',\n    width: 5,\n    borderRadius: 0,\n    marginTop: 0,\n    backgroundColor: alpha('#000000', 0.2)\n  }\n}));\nfunction ValueLabelComponent(props) {\n  const {\n    children,\n    open,\n    value\n  } = props;\n  return /*#__PURE__*/_jsx(Tooltip, {\n    open: open,\n    enterTouchDelay: 0,\n    placement: \"top\",\n    title: value,\n    children: children\n  });\n}\nfunction EditProgress(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const [valueState, setValueState] = React.useState(Number(value));\n  const apiRef = useGridApiContext();\n  const updateCellEditProps = React.useCallback(newValue => {\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue\n    });\n  }, [apiRef, field, id]);\n  const debouncedUpdateCellEditProps = React.useMemo(() => debounce(updateCellEditProps, 60), [updateCellEditProps]);\n  const handleChange = (event, newValue) => {\n    setValueState(newValue);\n    debouncedUpdateCellEditProps(newValue);\n  };\n  React.useEffect(() => {\n    setValueState(Number(value));\n  }, [value]);\n  const handleRef = element => {\n    if (element) {\n      element.querySelector('[type=\"range\"]').focus();\n    }\n  };\n  return /*#__PURE__*/_jsx(StyledSlider, {\n    ref: handleRef,\n    classes: {\n      track: clsx(valueState < 0.3 && \"low\", valueState >= 0.3 && valueState <= 0.7 && \"medium\", valueState > 0.7 && \"high\")\n    },\n    value: valueState,\n    max: 1,\n    step: 0.00001,\n    onChange: handleChange,\n    components: {\n      ValueLabel: ValueLabelComponent\n    },\n    valueLabelDisplay: \"auto\",\n    valueLabelFormat: newValue => `${(newValue * 100).toLocaleString()} %`\n  });\n}\nexport function renderEditProgress(params) {\n  return /*#__PURE__*/_jsx(EditProgress, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext, useGridRootProps, GridEditModes } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport ReportProblemIcon from '@mui/icons-material/ReportProblem';\nimport InfoIcon from '@mui/icons-material/Info';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { STATUS_OPTIONS } from \"../services/static-data.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditStatus(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const handleChange = async event => {\n    const isValid = await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    });\n    if (isValid && rootProps.editMode === GridEditModes.Cell) {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        cellToFocusAfter: 'below'\n      });\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.stopCellEditMode({\n        id,\n        field,\n        ignoreModifications: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: STATUS_OPTIONS.map(option => {\n      let IconComponent = null;\n      if (option === 'Rejected') {\n        IconComponent = ReportProblemIcon;\n      } else if (option === 'Open') {\n        IconComponent = InfoIcon;\n      } else if (option === 'PartiallyFilled') {\n        IconComponent = AutorenewIcon;\n      } else if (option === 'Filled') {\n        IconComponent = DoneIcon;\n      }\n      let label = option;\n      if (option === 'PartiallyFilled') {\n        label = 'Partially Filled';\n      }\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: /*#__PURE__*/_jsx(IconComponent, {\n            fontSize: \"small\"\n          })\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: label,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\nexport function renderEditStatus(params) {\n  return /*#__PURE__*/_jsx(EditStatus, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { INCOTERM_OPTIONS } from \"../services/static-data.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditIncoterm(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = async event => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: event.target.value\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === 'backdropClick') {\n      apiRef.current.stopCellEditMode({\n        id,\n        field\n      });\n    }\n  };\n  return /*#__PURE__*/_jsx(Select, {\n    value: value,\n    onChange: handleChange,\n    MenuProps: {\n      onClose: handleClose\n    },\n    sx: {\n      height: '100%',\n      '& .MuiSelect-select': {\n        display: 'flex',\n        alignItems: 'center',\n        pl: 1\n      }\n    },\n    autoFocus: true,\n    fullWidth: true,\n    open: true,\n    children: INCOTERM_OPTIONS.map(option => {\n      const tooltip = option.slice(option.indexOf('(') + 1, option.indexOf(')'));\n      const code = option.slice(0, option.indexOf('(')).trim();\n      return /*#__PURE__*/_jsxs(MenuItem, {\n        value: option,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          sx: {\n            minWidth: 36\n          },\n          children: code\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: tooltip,\n          sx: {\n            overflow: 'hidden'\n          }\n        })]\n      }, option);\n    })\n  });\n}\nexport function renderEditIncoterm(params) {\n  return /*#__PURE__*/_jsx(EditIncoterm, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Rating from '@mui/material/Rating';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EditRating(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const changedThroughKeyboard = React.useRef(false);\n  const handleChange = async event => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: Number(event.target.value)\n    }, event);\n    if (!changedThroughKeyboard.current) {\n      apiRef.current.stopCellEditMode({\n        id,\n        field\n      });\n    }\n    changedThroughKeyboard.current = false;\n  };\n  const handleRef = element => {\n    if (element) {\n      if (value !== 0) {\n        element.querySelector(`input[value=\"${value}\"]`).focus();\n      } else {\n        element.querySelector('input[value=\"\"]').focus();\n      }\n    }\n  };\n  const handleKeyDown = event => {\n    if (event.key.startsWith('Arrow')) {\n      changedThroughKeyboard.current = true;\n    } else {\n      changedThroughKeyboard.current = false;\n    }\n  };\n  return /*#__PURE__*/_jsxs(Box, {\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: '24px',\n      color: 'text.secondary',\n      mr: 1\n    },\n    children: [/*#__PURE__*/_jsx(Rating, {\n      ref: handleRef,\n      name: \"rating\",\n      value: Number(value),\n      precision: 1,\n      onChange: handleChange,\n      sx: {\n        mr: 1\n      },\n      onKeyDown: handleKeyDown\n    }), Number(value)]\n  });\n}\nexport function renderEditRating(params) {\n  return /*#__PURE__*/_jsx(EditRating, _extends({}, params));\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '@mui/x-data-grid-premium';\nimport Autocomplete, { autocompleteClasses } from '@mui/material/Autocomplete';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport { styled } from '@mui/material/styles';\nimport { COUNTRY_ISO_OPTIONS } from \"../services/static-data.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst StyledAutocomplete = styled(Autocomplete)(({\n  theme\n}) => ({\n  height: '100%',\n  [`& .${autocompleteClasses.inputRoot}`]: _extends({}, theme.typography.body2, {\n    padding: '1px 0',\n    height: '100%',\n    '& input': {\n      padding: '0 16px',\n      height: '100%'\n    }\n  })\n}));\nfunction EditCountry(props) {\n  const {\n    id,\n    value,\n    field\n  } = props;\n  const apiRef = useGridApiContext();\n  const handleChange = React.useCallback(async (event, newValue) => {\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newValue\n    }, event);\n    apiRef.current.stopCellEditMode({\n      id,\n      field\n    });\n  }, [apiRef, field, id]);\n  return /*#__PURE__*/_jsx(StyledAutocomplete, {\n    value: value,\n    onChange: handleChange,\n    options: COUNTRY_ISO_OPTIONS,\n    getOptionLabel: option => option.label,\n    autoHighlight: true,\n    fullWidth: true,\n    open: true,\n    disableClearable: true,\n    renderOption: (optionProps, option) => /*#__PURE__*/_createElement(Box, _extends({\n      component: \"li\",\n      sx: {\n        '& > img': {\n          mr: 1.5,\n          flexShrink: 0\n        }\n      }\n    }, optionProps, {\n      key: option.code\n    }), /*#__PURE__*/_jsx(\"img\", {\n      loading: \"lazy\",\n      width: \"20\",\n      src: `https://flagcdn.com/w20/${option.code.toLowerCase()}.png`,\n      srcSet: `https://flagcdn.com/w40/${option.code.toLowerCase()}.png 2x`,\n      alt: \"\"\n    }), option.label),\n    renderInput: params => /*#__PURE__*/_jsx(InputBase, _extends({\n      autoFocus: true,\n      fullWidth: true,\n      id: params.id,\n      inputProps: _extends({}, params.inputProps, {\n        autoComplete: 'new-password' // disable autocomplete and autofill\n      })\n    }, params.InputProps))\n  });\n}\nexport function renderEditCountry(params) {\n  return /*#__PURE__*/_jsx(EditCountry, _extends({}, params));\n}", "import { Chance } from 'chance';\nimport { COLORS, COMMODITY_OPTIONS, CONTRACT_TYPE_OPTIONS, COUNTRY_ISO_OPTIONS, CURRENCY_OPTIONS, INCOTERM_OPTIONS, RATE_TYPE_OPTIONS, STATUS_OPTIONS, TAXCODE_OPTIONS } from \"./static-data.js\";\nlet chance;\nlet chanceGuid;\nif (typeof DISABLE_CHANCE_RANDOM !== 'undefined' && DISABLE_CHANCE_RANDOM) {\n  chance = new Chance(() => 0.5);\n  chanceGuid = new Chance(42);\n} else {\n  chance = new Chance();\n  chanceGuid = chance;\n}\n/**\n * Wrap a data generator that returns a string and add a prefix if the value generated has already been given\n */\nconst uniquenessHandler = generator => (data, context) => {\n  const rawValue = generator(data, context);\n  if (!context.values) {\n    return rawValue;\n  }\n  const valueCount = (context.values[rawValue] ?? 0) + 1;\n  context.values[rawValue] = valueCount + 1;\n  if (valueCount > 1) {\n    return `${rawValue} ${valueCount}`;\n  }\n  return rawValue;\n};\nfunction dateFuture(years, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  };\n\n  // some time from now to N years later, in milliseconds\n  const past = date.getTime() + chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nfunction dateRecent(days, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (days || 1) * 24 * 3600 * 1000\n  };\n\n  // some time from now to N days ago, in milliseconds\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nfunction datePast(years, refDate) {\n  let date = new Date();\n  if (typeof refDate !== 'undefined') {\n    date = new Date(Date.parse(refDate));\n  }\n  const range = {\n    min: 1000,\n    max: (years || 1) * 365 * 24 * 3600 * 1000\n  };\n\n  // some time from now to N years ago, in milliseconds\n  const past = date.getTime() - chance.integer(range);\n  date.setTime(past);\n  return date;\n}\nexport const random = (min, max) => chance.floating({\n  min,\n  max\n});\nexport const randomInt = (min, max) => chance.integer({\n  min,\n  max\n});\nexport const randomPrice = (min = 0, max = 100000) => Number(random(min, max).toFixed(2));\nexport const randomRate = () => random(0, 1);\nexport const randomDate = (start, end) => new Date(start.getTime() + chance.floating({\n  min: 0,\n  max: 1\n}) * (end.getTime() - start.getTime()));\nexport const randomArrayItem = arr => arr[randomInt(0, arr.length - 1)];\nexport const randomBoolean = () => randomArrayItem([true, false]);\nexport const randomColor = () => randomArrayItem(COLORS);\nexport const randomId = () => chanceGuid.guid();\nexport const randomDesk = () => `D-${chance.integer({\n  min: 0,\n  max: 10000\n})}`;\nexport const randomCommodity = () => randomArrayItem(COMMODITY_OPTIONS);\nexport const randomTraderName = () => chance.name();\nexport const randomUserName = () => chance.twitter();\nexport const randomEmail = () => chance.email();\nexport const randomUrl = () => chance.url();\nexport const randomPhoneNumber = () => chance.phone();\nexport const randomUnitPrice = () => randomPrice(1, 100);\nexport const randomUnitPriceCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomQuantity = () => randomInt(1000, 100000);\nexport const randomFeeRate = () => Number(random(0.1, 0.4).toFixed(3));\nexport const randomIncoterm = () => randomArrayItem(INCOTERM_OPTIONS);\nexport const randomStatusOptions = () => randomArrayItem(STATUS_OPTIONS);\nexport const randomPnL = () => random(-100000000, 100000000);\nexport const randomMaturityDate = () => dateFuture();\nexport const randomTradeDate = () => dateRecent();\nexport const randomBrokerId = () => chance.guid();\nexport const randomCompanyName = () => chance.company();\nexport const randomCountry = () => randomArrayItem(COUNTRY_ISO_OPTIONS);\nexport const randomCurrency = () => randomArrayItem(CURRENCY_OPTIONS);\nexport const randomAddress = () => chance.address();\nexport const randomCity = () => chance.city();\nexport const randomTaxCode = () => randomArrayItem(TAXCODE_OPTIONS);\nexport const randomContractType = () => randomArrayItem(CONTRACT_TYPE_OPTIONS);\nexport const randomRateType = () => randomArrayItem(RATE_TYPE_OPTIONS);\nexport const randomCreatedDate = () => datePast();\nexport const randomUpdatedDate = () => dateRecent();\nexport const randomJobTitle = () => chance.profession();\nexport const randomRating = () => randomInt(1, 5);\nexport const randomName = uniquenessHandler(() => chance.name());\nexport const generateFilledQuantity = data => Number((data.quantity * randomRate()).toFixed()) / data.quantity;\nexport const generateIsFilled = data => data.quantity === data.filledQuantity;", "export default function asyncWorker({\n  work,\n  tasks,\n  done\n}) {\n  const myNonEssentialWork = deadline => {\n    // If there is a surplus time in the frame, or timeout\n    while ((deadline.timeRemaining() > 0 || deadline.didTimeout) && tasks.current > 0) {\n      work();\n    }\n    if (tasks.current > 0) {\n      requestIdleCallback(myNonEssentialWork);\n    } else {\n      done();\n    }\n  };\n\n  // Don't use requestIdleCallback if the time is mock, better to run synchronously in such case.\n  if (typeof requestIdleCallback === 'function' && !requestIdleCallback.clock) {\n    requestIdleCallback(myNonEssentialWork);\n  } else {\n    while (tasks.current > 0) {\n      work();\n    }\n    done();\n  }\n}", "import asyncWorker from \"./asyncWorker.js\";\nexport function getRealGridData(rowLength, columns) {\n  return new Promise(resolve => {\n    const tasks = {\n      current: rowLength\n    };\n    const rows = [];\n    const indexedValues = {};\n    function work() {\n      const row = {};\n      for (let j = 0; j < columns.length; j += 1) {\n        const column = columns[j];\n        if (column.generateData) {\n          const context = {};\n          if (column.dataGeneratorUniquenessEnabled) {\n            let fieldValues = indexedValues[column.field];\n            if (!fieldValues) {\n              fieldValues = {};\n              indexedValues[column.field] = fieldValues;\n            }\n            context.values = fieldValues;\n          }\n          row[column.field] = column.generateData(row, context);\n        }\n      }\n      rows.push(row);\n      tasks.current -= 1;\n    }\n    const columnVisibilityModel = {};\n    columns.forEach(col => {\n      if (col.hide) {\n        columnVisibilityModel[col.field] = false;\n      }\n    });\n    asyncWorker({\n      work,\n      done: () => resolve({\n        columns,\n        rows,\n        initialState: {\n          columns: {\n            columnVisibilityModel\n          }\n        }\n      }),\n      tasks\n    });\n  });\n}", "export const currencyPairs = ['USDGBP', 'USDEUR', 'GBPEUR', 'JPYUSD', 'MXNUSD', 'BTCUSD', 'USDCAD', 'EURJPY', 'EURUSD', 'EURCHF', 'USDCHF', 'EURGBP', 'GBPUSD', 'AUDCAD', 'NZDUSD', 'GBPCHF', 'AUDUSD', 'GBPJPY', 'USDJPY', 'CHFJPY', 'EURCAD', 'AUDJPY', 'EURAUD', 'AUDNZD', 'CADEUR', 'CHFMXN', 'ETHUSD', 'BCHUSD', 'ETHBTC', 'XRPUSD', 'XRPBTC', 'USDLTC', 'USDXRP', 'USDDSH', 'USDBCH', 'JPYEUR', 'JPYUSD', 'JPYGBP', 'JPYCAD', 'JPYCHF', 'JPYAUD', 'JPYNZD', 'JPYSGD', 'JPYNOK', 'JPYRUB', 'JPYSEK', 'JPYTRY', 'JPYZAR', 'JPYHKD', 'JPYCNH', 'JPYDKK', 'JPYMXN', 'JPYPLN', 'JPYXAG', 'JPYXAU', 'JPYBTC', 'JPYETH', 'JPYLTC', 'JPYXRP', 'JPYDSH', 'JPYBCH', 'GBPEUR', 'GBPRUB', 'GBPTRY'];\nexport const getBasicGridData = (rowLength, colLength) => {\n  const data = [];\n  const pricesColLength = colLength - 2;\n  for (let i = 0; i < rowLength; i += 1) {\n    const idx = i >= currencyPairs.length ? i % currencyPairs.length : i;\n    const model = {\n      id: i,\n      currencyPair: currencyPairs[idx]\n    };\n    for (let j = 1; j <= pricesColLength; j += 1) {\n      model[`price${j}M`] = Number(`${i.toString()}${j}`); // randomPrice(0.7, 2);\n    }\n    data.push(model);\n  }\n  const columns = [{\n    field: 'id',\n    headerName: 'id',\n    type: 'number'\n  }, {\n    field: 'currencyPair',\n    headerName: 'Currency Pair'\n  }];\n  for (let j = 1; j <= pricesColLength; j += 1) {\n    // const y = Math.floor(j / 12);\n    columns.push({\n      field: `price${j}M`,\n      headerName: `${j}M`,\n      type: 'number'\n    }); // (y > 0 ? `${y}Y` : '') + `${j - y * 12}M`\n  }\n  columns.length = colLength; // we cut the array in case < 2;\n  return {\n    columns,\n    rows: data\n  };\n};", "import { gridStringOrNumberComparator } from '@mui/x-data-grid-premium';\nimport { randomCommodity, randomDesk, randomEmail, randomFeeRate, generateFilledQuantity, randomId, randomIncoterm, generateIsFilled, randomQuantity, randomTraderName, randomUnitPrice, randomUnitPriceCurrency, randomStatusOptions, randomPnL, randomTradeDate, randomMaturityDate, randomBrokerId, randomCompanyName, randomCountry, randomCurrency, randomAddress, randomCity, randomUpdatedDate, randomCreatedDate, randomRateType, randomContractType, randomTaxCode } from \"../services/index.js\";\nimport { renderCountry, renderEmail, renderIncoterm, renderPnl, renderProgress, renderStatus, renderTotalPrice, renderEditCurrency, renderEditProgress, renderEditStatus, renderEditIncoterm } from \"../renderer/index.js\";\nimport { CONTRACT_TYPE_OPTIONS, COUNTRY_ISO_OPTIONS_SORTED, CURRENCY_OPTIONS, INCOTERM_OPTIONS, RATE_TYPE_OPTIONS, STATUS_OPTIONS, TAXCODE_OPTIONS } from \"../services/static-data.js\";\nexport const getCommodityColumns = (editable = false) => [{\n  field: 'id',\n  generateData: randomId,\n  hide: true\n}, {\n  field: 'desk',\n  headerName: 'Desk',\n  generateData: randomDesk,\n  width: 110\n}, {\n  field: 'commodity',\n  headerName: 'Commodity',\n  generateData: randomCommodity,\n  width: 180,\n  editable\n}, {\n  field: 'traderName',\n  headerName: 'Trader Name',\n  generateData: randomTraderName,\n  width: 120,\n  editable\n}, {\n  field: 'traderEmail',\n  headerName: 'Trader Email',\n  generateData: randomEmail,\n  renderCell: renderEmail,\n  width: 150,\n  editable\n}, {\n  field: 'quantity',\n  headerName: 'Quantity',\n  type: 'number',\n  width: 140,\n  generateData: randomQuantity,\n  editable,\n  valueParser: value => Number(value)\n}, {\n  field: 'filledQuantity',\n  headerName: 'Filled Quantity',\n  generateData: generateFilledQuantity,\n  renderCell: renderProgress,\n  renderEditCell: renderEditProgress,\n  availableAggregationFunctions: ['min', 'max', 'avg', 'size'],\n  type: 'number',\n  width: 120,\n  editable\n}, {\n  field: 'isFilled',\n  headerName: 'Is Filled',\n  align: 'center',\n  generateData: generateIsFilled,\n  type: 'boolean',\n  width: 80,\n  editable\n}, {\n  field: 'status',\n  headerName: 'Status',\n  generateData: randomStatusOptions,\n  renderCell: renderStatus,\n  renderEditCell: renderEditStatus,\n  type: 'singleSelect',\n  valueOptions: STATUS_OPTIONS,\n  width: 150,\n  editable\n}, {\n  field: 'unitPrice',\n  headerName: 'Unit Price',\n  generateData: randomUnitPrice,\n  type: 'number',\n  editable,\n  valueParser: value => Number(value)\n}, {\n  field: 'unitPriceCurrency',\n  headerName: 'Unit Price Currency',\n  generateData: randomUnitPriceCurrency,\n  renderEditCell: renderEditCurrency,\n  type: 'singleSelect',\n  valueOptions: CURRENCY_OPTIONS,\n  width: 120,\n  editable\n}, {\n  field: 'subTotal',\n  headerName: 'Sub Total',\n  valueGetter: (value, row) => row.quantity == null || row.unitPrice == null ? null : row.quantity * row.unitPrice,\n  type: 'number',\n  width: 120\n}, {\n  field: 'feeRate',\n  headerName: 'Fee Rate',\n  generateData: randomFeeRate,\n  type: 'number',\n  width: 80,\n  editable,\n  valueParser: value => Number(value)\n}, {\n  field: 'feeAmount',\n  headerName: 'Fee Amount',\n  valueGetter: (value, row) => row.feeRate == null || row.quantity == null || row.unitPrice == null ? null : row.feeRate * row.quantity * row.unitPrice,\n  type: 'number',\n  width: 120\n}, {\n  field: 'incoTerm',\n  headerName: 'Incoterm',\n  generateData: randomIncoterm,\n  renderCell: renderIncoterm,\n  renderEditCell: renderEditIncoterm,\n  type: 'singleSelect',\n  valueOptions: INCOTERM_OPTIONS,\n  editable\n}, {\n  field: 'totalPrice',\n  headerName: 'Total in USD',\n  valueGetter: (value, row) => row.feeRate == null || row.quantity == null || row.unitPrice == null ? null : row.feeRate + row.quantity * row.unitPrice,\n  renderCell: renderTotalPrice,\n  type: 'number',\n  width: 160\n}, {\n  field: 'pnl',\n  headerName: 'PnL',\n  generateData: randomPnL,\n  renderCell: renderPnl,\n  type: 'number',\n  width: 140\n}, {\n  field: 'maturityDate',\n  headerName: 'Maturity Date',\n  generateData: randomMaturityDate,\n  type: 'date',\n  editable\n}, {\n  field: 'tradeDate',\n  headerName: 'Trade Date',\n  generateData: randomTradeDate,\n  type: 'date',\n  editable\n}, {\n  field: 'brokerId',\n  headerName: 'Broker Id',\n  generateData: randomBrokerId,\n  hide: true,\n  editable\n}, {\n  field: 'brokerName',\n  headerName: 'Broker Name',\n  generateData: randomCompanyName,\n  width: 140,\n  editable\n}, {\n  field: 'counterPartyName',\n  headerName: 'Counterparty',\n  generateData: randomCompanyName,\n  width: 180,\n  editable\n}, {\n  field: 'counterPartyCountry',\n  headerName: 'Counterparty Country',\n  type: 'singleSelect',\n  generateData: randomCountry,\n  renderCell: renderCountry,\n  valueOptions: COUNTRY_ISO_OPTIONS_SORTED,\n  valueParser: value => {\n    if (typeof value === 'string') {\n      return COUNTRY_ISO_OPTIONS_SORTED.find(country => country.value === value);\n    }\n    return value;\n  },\n  valueFormatter: value => value?.label,\n  groupingValueGetter: value => value.code,\n  sortComparator: (v1, v2, param1, param2) => gridStringOrNumberComparator(v1.label, v2.label, param1, param2),\n  editable,\n  width: 120\n}, {\n  field: 'counterPartyCurrency',\n  headerName: 'Counterparty Currency',\n  generateData: randomCurrency,\n  renderEditCell: renderEditCurrency,\n  type: 'singleSelect',\n  valueOptions: CURRENCY_OPTIONS,\n  editable\n}, {\n  field: 'counterPartyAddress',\n  headerName: 'Counterparty Address',\n  generateData: randomAddress,\n  width: 200,\n  editable\n}, {\n  field: 'counterPartyCity',\n  headerName: 'Counterparty City',\n  generateData: randomCity,\n  width: 120,\n  editable\n}, {\n  field: 'taxCode',\n  headerName: 'Tax Code',\n  generateData: randomTaxCode,\n  type: 'singleSelect',\n  valueOptions: TAXCODE_OPTIONS,\n  editable\n}, {\n  field: 'contractType',\n  headerName: 'Contract Type',\n  generateData: randomContractType,\n  type: 'singleSelect',\n  valueOptions: CONTRACT_TYPE_OPTIONS,\n  editable\n}, {\n  field: 'rateType',\n  headerName: 'Rate Type',\n  generateData: randomRateType,\n  type: 'singleSelect',\n  valueOptions: RATE_TYPE_OPTIONS,\n  editable\n}, {\n  field: 'lastUpdated',\n  headerName: 'Updated on',\n  generateData: randomUpdatedDate,\n  type: 'dateTime',\n  width: 180,\n  editable\n}, {\n  field: 'dateCreated',\n  headerName: 'Created on',\n  generateData: randomCreatedDate,\n  type: 'date',\n  width: 150,\n  editable\n}];", "import { gridStringOrNumberComparator } from '@mui/x-data-grid-premium';\nimport { randomCity, randomCompanyName, randomCountry, randomCreatedDate, randomEmail, randomId, randomJobTitle, randomPhoneNumber, randomRating, randomUpdatedDate, randomUrl, randomUserName, randomBoolean, randomName, randomColor, randomInt } from \"../services/index.js\";\nimport { renderAvatar, renderCountry, renderEmail, renderLink, renderRating, renderEditRating, renderEditCountry } from \"../renderer/index.js\";\nimport { COUNTRY_ISO_OPTIONS_SORTED } from \"../services/static-data.js\";\nexport const getEmployeeColumns = () => [{\n  field: 'id',\n  generateData: randomId,\n  hide: true\n}, {\n  field: 'avatar',\n  headerName: 'Avatar',\n  generateData: randomColor,\n  display: 'flex',\n  renderCell: renderAvatar,\n  valueGetter: (value, row) => row.name == null || row.avatar == null ? null : {\n    name: row.name,\n    color: row.avatar\n  },\n  sortable: false,\n  filterable: false,\n  groupable: false,\n  aggregable: false,\n  disableExport: true\n}, {\n  field: 'name',\n  headerName: 'Name',\n  generateData: randomName,\n  dataGeneratorUniquenessEnabled: true,\n  width: 120,\n  editable: true,\n  groupable: false,\n  aggregable: false\n}, {\n  field: 'website',\n  headerName: 'Website',\n  generateData: randomUrl,\n  renderCell: renderLink,\n  width: 160,\n  editable: true,\n  groupable: false,\n  aggregable: false\n}, {\n  field: 'rating',\n  headerName: 'Rating',\n  generateData: randomRating,\n  display: 'flex',\n  renderCell: renderRating,\n  renderEditCell: renderEditRating,\n  width: 180,\n  type: 'number',\n  editable: true,\n  availableAggregationFunctions: ['avg', 'min', 'max', 'size']\n}, {\n  field: 'email',\n  headerName: 'Email',\n  generateData: randomEmail,\n  renderCell: renderEmail,\n  width: 150,\n  editable: true\n}, {\n  field: 'phone',\n  headerName: 'Phone',\n  generateData: randomPhoneNumber,\n  width: 150,\n  editable: true\n}, {\n  field: 'username',\n  headerName: 'Username',\n  generateData: randomUserName,\n  width: 150,\n  editable: true\n}, {\n  field: 'city',\n  headerName: 'City',\n  generateData: randomCity,\n  editable: true\n}, {\n  field: 'country',\n  headerName: 'Country',\n  type: 'singleSelect',\n  valueOptions: COUNTRY_ISO_OPTIONS_SORTED,\n  valueFormatter: value => value?.label,\n  generateData: randomCountry,\n  renderCell: renderCountry,\n  renderEditCell: renderEditCountry,\n  sortComparator: (v1, v2, param1, param2) => gridStringOrNumberComparator(v1.label, v2.label, param1, param2),\n  width: 150,\n  editable: true\n}, {\n  field: 'company',\n  headerName: 'Company',\n  generateData: randomCompanyName,\n  width: 180,\n  editable: true\n}, {\n  field: 'position',\n  headerName: 'Position',\n  generateData: randomJobTitle,\n  width: 180,\n  editable: true\n}, {\n  field: 'lastUpdated',\n  headerName: 'Updated on',\n  generateData: randomUpdatedDate,\n  type: 'dateTime',\n  width: 180,\n  editable: true\n}, {\n  field: 'dateCreated',\n  headerName: 'Created on',\n  generateData: randomCreatedDate,\n  type: 'date',\n  width: 120,\n  editable: true\n}, {\n  field: 'isAdmin',\n  headerName: 'Is admin?',\n  generateData: randomBoolean,\n  type: 'boolean',\n  width: 150,\n  editable: true\n}, {\n  field: 'salary',\n  headerName: 'Salary',\n  generateData: () => randomInt(30000, 80000),\n  type: 'number',\n  valueFormatter: value => {\n    if (!value || typeof value !== 'number') {\n      return value;\n    }\n    return `$${value.toLocaleString()}`;\n  }\n}];", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { LRUCache } from 'lru-cache';\nimport { getRealGridData } from \"../services/real-data-service.js\";\nimport { getCommodityColumns } from \"../columns/commodities.columns.js\";\nimport { getEmployeeColumns } from \"../columns/employees.columns.js\";\nimport asyncWorker from \"../services/asyncWorker.js\";\nimport { addTreeDataOptionsToDemoData } from \"../services/tree-data-generator.js\";\nconst dataCache = new LRUCache({\n  max: 10,\n  ttl: 60 * 5 * 1e3 // 5 minutes\n});\n// Generate fake data from a seed.\n// It's about x20 faster than getRealData.\nexport async function extrapolateSeed(rowLength, data) {\n  return new Promise(resolve => {\n    const seed = data.rows;\n    const rows = data.rows.slice();\n    const tasks = {\n      current: rowLength - seed.length\n    };\n    function work() {\n      const row = {};\n      for (let j = 0; j < data.columns.length; j += 1) {\n        const column = data.columns[j];\n        const index = Math.round(Math.random() * (seed.length - 1));\n        if (column.field === 'id') {\n          row.id = `id-${tasks.current + seed.length}`;\n        } else {\n          row[column.field] = seed[index][column.field];\n        }\n      }\n      rows.push(row);\n      tasks.current -= 1;\n    }\n    asyncWorker({\n      work,\n      done: () => resolve(_extends({}, data, {\n        rows\n      })),\n      tasks\n    });\n  });\n}\nexport const deepFreeze = object => {\n  // Retrieve the property names defined on object\n  const propNames = Object.getOwnPropertyNames(object);\n\n  // Freeze properties before freezing self\n\n  for (const name of propNames) {\n    const value = object[name];\n    if (value && typeof value === 'object') {\n      deepFreeze(value);\n    }\n  }\n  return Object.freeze(object);\n};\nexport const getColumnsFromOptions = options => {\n  let columns = options.dataSet === 'Commodity' ? getCommodityColumns(options.editable) : getEmployeeColumns();\n  if (options.visibleFields) {\n    columns = columns.map(col => options.visibleFields?.includes(col.field) ? col : _extends({}, col, {\n      hide: true\n    }));\n  }\n  if (options.maxColumns) {\n    columns = columns.slice(0, options.maxColumns);\n  }\n  return columns;\n};\nexport const getInitialState = (options, columns) => {\n  const columnVisibilityModel = {};\n  columns.forEach(col => {\n    if (col.hide) {\n      columnVisibilityModel[col.field] = false;\n    }\n  });\n  const groupingField = options.treeData?.groupingField;\n  if (groupingField) {\n    columnVisibilityModel[groupingField] = false;\n  }\n  return {\n    columns: {\n      columnVisibilityModel\n    }\n  };\n};\nexport const useDemoData = options => {\n  const [rowLength, setRowLength] = React.useState(options.rowLength);\n  const [index, setIndex] = React.useState(0);\n  const [loading, setLoading] = React.useState(true);\n  const columns = React.useMemo(() => {\n    return getColumnsFromOptions({\n      dataSet: options.dataSet,\n      editable: options.editable,\n      maxColumns: options.maxColumns,\n      visibleFields: options.visibleFields\n    });\n  }, [options.dataSet, options.editable, options.maxColumns, options.visibleFields]);\n  const [data, setData] = React.useState(() => {\n    return addTreeDataOptionsToDemoData({\n      columns,\n      rows: [],\n      initialState: getInitialState(options, columns)\n    }, options.treeData);\n  });\n  React.useEffect(() => {\n    const cacheKey = `${options.dataSet}-${rowLength}-${index}-${options.maxColumns}`;\n\n    // Cache to allow fast switch between the JavaScript and TypeScript version\n    // of the demos.\n    if (dataCache.has(cacheKey)) {\n      const newData = dataCache.get(cacheKey);\n      setData(newData);\n      setLoading(false);\n      return undefined;\n    }\n    let active = true;\n    (async () => {\n      setLoading(true);\n      let newData;\n      if (rowLength > 1000) {\n        newData = await getRealGridData(1000, columns);\n        newData = await extrapolateSeed(rowLength, newData);\n      } else {\n        newData = await getRealGridData(rowLength, columns);\n      }\n      if (!active) {\n        return;\n      }\n      newData = addTreeDataOptionsToDemoData(newData, {\n        maxDepth: options.treeData?.maxDepth,\n        groupingField: options.treeData?.groupingField,\n        averageChildren: options.treeData?.averageChildren\n      });\n\n      // It's quite slow. No need for it in production.\n      if (process.env.NODE_ENV !== 'production') {\n        deepFreeze(newData);\n      }\n      dataCache.set(cacheKey, newData);\n      setData(newData);\n      setLoading(false);\n    })();\n    return () => {\n      active = false;\n    };\n  }, [rowLength, options.dataSet, options.maxColumns, options.treeData?.maxDepth, options.treeData?.groupingField, options.treeData?.averageChildren, index, columns]);\n  return {\n    data,\n    loading,\n    setRowLength,\n    loadNewData: () => {\n      setIndex(oldIndex => oldIndex + 1);\n    }\n  };\n};", "/**\n * @module LRUCache\n */\n\n// module-private names and types\ntype Perf = { now: () => number }\nconst perf: Perf =\n  typeof performance === 'object' &&\n  performance &&\n  typeof performance.now === 'function'\n    ? performance\n    : Date\n\nconst warned = new Set<string>()\n\n// either a function or a class\ntype ForC = ((...a: any[]) => any) | { new (...a: any[]): any }\n\n/* c8 ignore start */\nconst PROCESS = (\n  typeof process === 'object' && !!process ? process : {}\n) as { [k: string]: any }\n/* c8 ignore start */\n\nconst emitWarning = (\n  msg: string,\n  type: string,\n  code: string,\n  fn: ForC\n) => {\n  typeof PROCESS.emitWarning === 'function'\n    ? PROCESS.emitWarning(msg, type, code, fn)\n    : console.error(`[${code}] ${type}: ${msg}`)\n}\n\nlet AC = globalThis.AbortController\nlet AS = globalThis.AbortSignal\n\n/* c8 ignore start */\nif (typeof AC === 'undefined') {\n  //@ts-ignore\n  AS = class AbortSignal {\n    onabort?: (...a: any[]) => any\n    _onabort: ((...a: any[]) => any)[] = []\n    reason?: any\n    aborted: boolean = false\n    addEventListener(_: string, fn: (...a: any[]) => any) {\n      this._onabort.push(fn)\n    }\n  }\n  //@ts-ignore\n  AC = class AbortController {\n    constructor() {\n      warnACPolyfill()\n    }\n    signal = new AS()\n    abort(reason: any) {\n      if (this.signal.aborted) return\n      //@ts-ignore\n      this.signal.reason = reason\n      //@ts-ignore\n      this.signal.aborted = true\n      //@ts-ignore\n      for (const fn of this.signal._onabort) {\n        fn(reason)\n      }\n      this.signal.onabort?.(reason)\n    }\n  }\n  let printACPolyfillWarning =\n    PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== '1'\n  const warnACPolyfill = () => {\n    if (!printACPolyfillWarning) return\n    printACPolyfillWarning = false\n    emitWarning(\n      'AbortController is not defined. If using lru-cache in ' +\n        'node 14, load an AbortController polyfill from the ' +\n        '`node-abort-controller` package. A minimal polyfill is ' +\n        'provided for use by LRUCache.fetch(), but it should not be ' +\n        'relied upon in other contexts (eg, passing it to other APIs that ' +\n        'use AbortController/AbortSignal might have undesirable effects). ' +\n        'You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.',\n      'NO_ABORT_CONTROLLER',\n      'ENOTSUP',\n      warnACPolyfill\n    )\n  }\n}\n/* c8 ignore stop */\n\nconst shouldWarn = (code: string) => !warned.has(code)\n\nconst TYPE = Symbol('type')\nexport type PosInt = number & { [TYPE]: 'Positive Integer' }\nexport type Index = number & { [TYPE]: 'LRUCache Index' }\n\nconst isPosInt = (n: any): n is PosInt =>\n  n && n === Math.floor(n) && n > 0 && isFinite(n)\n\nexport type UintArray = Uint8Array | Uint16Array | Uint32Array\nexport type NumberArray = UintArray | number[]\n\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max: number) =>\n  !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n    ? Uint8Array\n    : max <= Math.pow(2, 16)\n    ? Uint16Array\n    : max <= Math.pow(2, 32)\n    ? Uint32Array\n    : max <= Number.MAX_SAFE_INTEGER\n    ? ZeroArray\n    : null\n/* c8 ignore stop */\n\nclass ZeroArray extends Array<number> {\n  constructor(size: number) {\n    super(size)\n    this.fill(0)\n  }\n}\nexport type { ZeroArray }\nexport type { Stack }\n\nexport type StackLike = Stack | Index[]\nclass Stack {\n  heap: NumberArray\n  length: number\n  // private constructor\n  static #constructing: boolean = false\n  static create(max: number): StackLike {\n    const HeapCls = getUintArray(max)\n    if (!HeapCls) return []\n    Stack.#constructing = true\n    const s = new Stack(max, HeapCls)\n    Stack.#constructing = false\n    return s\n  }\n  constructor(\n    max: number,\n    HeapCls: { new (n: number): NumberArray }\n  ) {\n    /* c8 ignore start */\n    if (!Stack.#constructing) {\n      throw new TypeError('instantiate Stack using Stack.create(n)')\n    }\n    /* c8 ignore stop */\n    this.heap = new HeapCls(max)\n    this.length = 0\n  }\n  push(n: Index) {\n    this.heap[this.length++] = n\n  }\n  pop(): Index {\n    return this.heap[--this.length] as Index\n  }\n}\n\n/**\n * Promise representing an in-progress {@link LRUCache#fetch} call\n */\nexport type BackgroundFetch<V> = Promise<V | undefined> & {\n  __returned: BackgroundFetch<V> | undefined\n  __abortController: AbortController\n  __staleWhileFetching: V | undefined\n}\n\nexport type DisposeTask<K, V> = [\n  value: V,\n  key: K,\n  reason: LRUCache.DisposeReason\n]\n\nexport namespace LRUCache {\n  /**\n   * An integer greater than 0, reflecting the calculated size of items\n   */\n  export type Size = number\n\n  /**\n   * Integer greater than 0, representing some number of milliseconds, or the\n   * time at which a TTL started counting from.\n   */\n  export type Milliseconds = number\n\n  /**\n   * An integer greater than 0, reflecting a number of items\n   */\n  export type Count = number\n\n  /**\n   * The reason why an item was removed from the cache, passed\n   * to the {@link Disposer} methods.\n   *\n   * - `evict`: The item was evicted because it is the least recently used,\n   *   and the cache is full.\n   * - `set`: A new value was set, overwriting the old value being disposed.\n   * - `delete`: The item was explicitly deleted, either by calling\n   *   {@link LRUCache#delete}, {@link LRUCache#clear}, or\n   *   {@link LRUCache#set} with an undefined value.\n   * - `expire`: The item was removed due to exceeding its TTL.\n   * - `fetch`: A {@link OptionsBase#fetchMethod} operation returned\n   *   `undefined` or was aborted, causing the item to be deleted.\n   */\n  export type DisposeReason =\n    | 'evict'\n    | 'set'\n    | 'delete'\n    | 'expire'\n    | 'fetch'\n  /**\n   * A method called upon item removal, passed as the\n   * {@link OptionsBase.dispose} and/or\n   * {@link OptionsBase.disposeAfter} options.\n   */\n  export type Disposer<K, V> = (\n    value: V,\n    key: K,\n    reason: DisposeReason\n  ) => void\n\n  /**\n   * A function that returns the effective calculated size\n   * of an entry in the cache.\n   */\n  export type SizeCalculator<K, V> = (value: V, key: K) => Size\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.fetchMethod} function.\n   */\n  export interface FetcherOptions<K, V, FC = unknown> {\n    signal: AbortSignal\n    options: FetcherFetchOptions<K, V, FC>\n    /**\n     * Object provided in the {@link FetchOptions.context} option to\n     * {@link LRUCache#fetch}\n     */\n    context: FC\n  }\n\n  /**\n   * Occasionally, it may be useful to track the internal behavior of the\n   * cache, particularly for logging, debugging, or for behavior within the\n   * `fetchMethod`. To do this, you can pass a `status` object to the\n   * {@link LRUCache#fetch}, {@link LRUCache#get}, {@link LRUCache#set},\n   * {@link LRUCache#memo}, and {@link LRUCache#has} methods.\n   *\n   * The `status` option should be a plain JavaScript object. The following\n   * fields will be set on it appropriately, depending on the situation.\n   */\n  export interface Status<V> {\n    /**\n     * The status of a set() operation.\n     *\n     * - add: the item was not found in the cache, and was added\n     * - update: the item was in the cache, with the same value provided\n     * - replace: the item was in the cache, and replaced\n     * - miss: the item was not added to the cache for some reason\n     */\n    set?: 'add' | 'update' | 'replace' | 'miss'\n\n    /**\n     * the ttl stored for the item, or undefined if ttls are not used.\n     */\n    ttl?: Milliseconds\n\n    /**\n     * the start time for the item, or undefined if ttls are not used.\n     */\n    start?: Milliseconds\n\n    /**\n     * The timestamp used for TTL calculation\n     */\n    now?: Milliseconds\n\n    /**\n     * the remaining ttl for the item, or undefined if ttls are not used.\n     */\n    remainingTTL?: Milliseconds\n\n    /**\n     * The calculated size for the item, if sizes are used.\n     */\n    entrySize?: Size\n\n    /**\n     * The total calculated size of the cache, if sizes are used.\n     */\n    totalCalculatedSize?: Size\n\n    /**\n     * A flag indicating that the item was not stored, due to exceeding the\n     * {@link OptionsBase.maxEntrySize}\n     */\n    maxEntrySizeExceeded?: true\n\n    /**\n     * The old value, specified in the case of `set:'update'` or\n     * `set:'replace'`\n     */\n    oldValue?: V\n\n    /**\n     * The results of a {@link LRUCache#has} operation\n     *\n     * - hit: the item was found in the cache\n     * - stale: the item was found in the cache, but is stale\n     * - miss: the item was not found in the cache\n     */\n    has?: 'hit' | 'stale' | 'miss'\n\n    /**\n     * The status of a {@link LRUCache#fetch} operation.\n     * Note that this can change as the underlying fetch() moves through\n     * various states.\n     *\n     * - inflight: there is another fetch() for this key which is in process\n     * - get: there is no {@link OptionsBase.fetchMethod}, so\n     *   {@link LRUCache#get} was called.\n     * - miss: the item is not in cache, and will be fetched.\n     * - hit: the item is in the cache, and was resolved immediately.\n     * - stale: the item is in the cache, but stale.\n     * - refresh: the item is in the cache, and not stale, but\n     *   {@link FetchOptions.forceRefresh} was specified.\n     */\n    fetch?: 'get' | 'inflight' | 'miss' | 'hit' | 'stale' | 'refresh'\n\n    /**\n     * The {@link OptionsBase.fetchMethod} was called\n     */\n    fetchDispatched?: true\n\n    /**\n     * The cached value was updated after a successful call to\n     * {@link OptionsBase.fetchMethod}\n     */\n    fetchUpdated?: true\n\n    /**\n     * The reason for a fetch() rejection.  Either the error raised by the\n     * {@link OptionsBase.fetchMethod}, or the reason for an\n     * AbortSignal.\n     */\n    fetchError?: Error\n\n    /**\n     * The fetch received an abort signal\n     */\n    fetchAborted?: true\n\n    /**\n     * The abort signal received was ignored, and the fetch was allowed to\n     * continue.\n     */\n    fetchAbortIgnored?: true\n\n    /**\n     * The fetchMethod promise resolved successfully\n     */\n    fetchResolved?: true\n\n    /**\n     * The fetchMethod promise was rejected\n     */\n    fetchRejected?: true\n\n    /**\n     * The status of a {@link LRUCache#get} operation.\n     *\n     * - fetching: The item is currently being fetched.  If a previous value\n     *   is present and allowed, that will be returned.\n     * - stale: The item is in the cache, and is stale.\n     * - hit: the item is in the cache\n     * - miss: the item is not in the cache\n     */\n    get?: 'stale' | 'hit' | 'miss'\n\n    /**\n     * A fetch or get operation returned a stale value.\n     */\n    returnedStale?: true\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#fetch}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link OptionsBase.noDeleteOnFetchRejection},\n   * {@link OptionsBase.allowStaleOnFetchRejection},\n   * {@link FetchOptions.forceRefresh}, and\n   * {@link FetcherOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.fetchMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the fetchMethod is called.\n   */\n  export interface FetcherFetchOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    status?: Status<V>\n    size?: Size\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#fetch} method.\n   */\n  export interface FetchOptions<K, V, FC>\n    extends FetcherFetchOptions<K, V, FC> {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.fetchMethod} as\n     * the {@link FetcherOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    signal?: AbortSignal\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface FetchOptionsWithContext<K, V, FC>\n    extends FetchOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#fetch} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface FetchOptionsNoContext<K, V>\n    extends FetchOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  export interface MemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n      | 'noDeleteOnFetchRejection'\n      | 'allowStaleOnFetchRejection'\n      | 'ignoreFetchAbort'\n      | 'allowStaleOnFetchAbort'\n    > {\n    /**\n     * Set to true to force a re-load of the existing data, even if it\n     * is not yet stale.\n     */\n    forceRefresh?: boolean\n    /**\n     * Context provided to the {@link OptionsBase.memoMethod} as\n     * the {@link MemoizerOptions.context} param.\n     *\n     * If the FC type is specified as unknown (the default),\n     * undefined or void, then this is optional.  Otherwise, it will\n     * be required.\n     */\n    context?: FC\n    status?: Status<V>\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is something\n   * other than `unknown`, `undefined`, or `void`\n   */\n  export interface MemoOptionsWithContext<K, V, FC>\n    extends MemoOptions<K, V, FC> {\n    context: FC\n  }\n  /**\n   * Options provided to {@link LRUCache#memo} when the FC type is\n   * `undefined` or `void`\n   */\n  export interface MemoOptionsNoContext<K, V>\n    extends MemoOptions<K, V, undefined> {\n    context?: undefined\n  }\n\n  /**\n   * Options provided to the\n   * {@link OptionsBase.memoMethod} function.\n   */\n  export interface MemoizerOptions<K, V, FC = unknown> {\n    options: MemoizerMemoOptions<K, V, FC>\n    /**\n     * Object provided in the {@link MemoOptions.context} option to\n     * {@link LRUCache#memo}\n     */\n    context: FC\n  }\n\n  /**\n   * options which override the options set in the LRUCache constructor\n   * when calling {@link LRUCache#memo}.\n   *\n   * This is the union of {@link GetOptions} and {@link SetOptions}, plus\n   * {@link MemoOptions.forceRefresh}, and\n   * {@link MemoOptions.context}\n   *\n   * Any of these may be modified in the {@link OptionsBase.memoMethod}\n   * function, but the {@link GetOptions} fields will of course have no\n   * effect, as the {@link LRUCache#get} call already happened by the time\n   * the memoMethod is called.\n   */\n  export interface MemoizerMemoOptions<K, V, FC = unknown>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      | 'allowStale'\n      | 'updateAgeOnGet'\n      | 'noDeleteOnStaleGet'\n      | 'sizeCalculation'\n      | 'ttl'\n      | 'noDisposeOnSet'\n      | 'noUpdateTTL'\n    > {\n    status?: Status<V>\n    size?: Size\n    start?: Milliseconds\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#has} method.\n   */\n  export interface HasOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'updateAgeOnHas'> {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#get} method.\n   */\n  export interface GetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'allowStale' | 'updateAgeOnGet' | 'noDeleteOnStaleGet'\n    > {\n    status?: Status<V>\n  }\n\n  /**\n   * Options that may be passed to the {@link LRUCache#peek} method.\n   */\n  export interface PeekOptions<K, V, FC>\n    extends Pick<OptionsBase<K, V, FC>, 'allowStale'> {}\n\n  /**\n   * Options that may be passed to the {@link LRUCache#set} method.\n   */\n  export interface SetOptions<K, V, FC>\n    extends Pick<\n      OptionsBase<K, V, FC>,\n      'sizeCalculation' | 'ttl' | 'noDisposeOnSet' | 'noUpdateTTL'\n    > {\n    /**\n     * If size tracking is enabled, then setting an explicit size\n     * in the {@link LRUCache#set} call will prevent calling the\n     * {@link OptionsBase.sizeCalculation} function.\n     */\n    size?: Size\n    /**\n     * If TTL tracking is enabled, then setting an explicit start\n     * time in the {@link LRUCache#set} call will override the\n     * default time from `performance.now()` or `Date.now()`.\n     *\n     * Note that it must be a valid value for whichever time-tracking\n     * method is in use.\n     */\n    start?: Milliseconds\n    status?: Status<V>\n  }\n\n  /**\n   * The type signature for the {@link OptionsBase.fetchMethod} option.\n   */\n  export type Fetcher<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: FetcherOptions<K, V, FC>\n  ) => Promise<V | undefined | void> | V | undefined | void\n\n  /**\n   * the type signature for the {@link OptionsBase.memoMethod} option.\n   */\n  export type Memoizer<K, V, FC = unknown> = (\n    key: K,\n    staleValue: V | undefined,\n    options: MemoizerOptions<K, V, FC>\n  ) => V\n\n  /**\n   * Options which may be passed to the {@link LRUCache} constructor.\n   *\n   * Most of these may be overridden in the various options that use\n   * them.\n   *\n   * Despite all being technically optional, the constructor requires that\n   * a cache is at minimum limited by one or more of {@link OptionsBase.max},\n   * {@link OptionsBase.ttl}, or {@link OptionsBase.maxSize}.\n   *\n   * If {@link OptionsBase.ttl} is used alone, then it is strongly advised\n   * (and in fact required by the type definitions here) that the cache\n   * also set {@link OptionsBase.ttlAutopurge}, to prevent potentially\n   * unbounded storage.\n   *\n   * All options are also available on the {@link LRUCache} instance, making\n   * it safe to pass an LRUCache instance as the options argumemnt to\n   * make another empty cache of the same type.\n   *\n   * Some options are marked as read-only, because changing them after\n   * instantiation is not safe. Changing any of the other options will of\n   * course only have an effect on subsequent method calls.\n   */\n  export interface OptionsBase<K, V, FC> {\n    /**\n     * The maximum number of items to store in the cache before evicting\n     * old entries. This is read-only on the {@link LRUCache} instance,\n     * and may not be overridden.\n     *\n     * If set, then storage space will be pre-allocated at construction\n     * time, and the cache will perform significantly faster.\n     *\n     * Note that significantly fewer items may be stored, if\n     * {@link OptionsBase.maxSize} and/or {@link OptionsBase.ttl} are also\n     * set.\n     *\n     * **It is strongly recommended to set a `max` to prevent unbounded growth\n     * of the cache.**\n     */\n    max?: Count\n\n    /**\n     * Max time in milliseconds for items to live in cache before they are\n     * considered stale.  Note that stale items are NOT preemptively removed by\n     * default, and MAY live in the cache, contributing to its LRU max, long\n     * after they have expired, unless {@link OptionsBase.ttlAutopurge} is\n     * set.\n     *\n     * If set to `0` (the default value), then that means \"do not track\n     * TTL\", not \"expire immediately\".\n     *\n     * Also, as this cache is optimized for LRU/MRU operations, some of\n     * the staleness/TTL checks will reduce performance, as they will incur\n     * overhead by deleting items.\n     *\n     * This is not primarily a TTL cache, and does not make strong TTL\n     * guarantees. There is no pre-emptive pruning of expired items, but you\n     * _may_ set a TTL on the cache, and it will treat expired items as missing\n     * when they are fetched, and delete them.\n     *\n     * Optional, but must be a non-negative integer in ms if specified.\n     *\n     * This may be overridden by passing an options object to `cache.set()`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if ttl tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * If ttl tracking is enabled, and `max` and `maxSize` are not set,\n     * and `ttlAutopurge` is not set, then a warning will be emitted\n     * cautioning about the potential for unbounded memory consumption.\n     * (The TypeScript definitions will also discourage this.)\n     */\n    ttl?: Milliseconds\n\n    /**\n     * Minimum amount of time in ms in which to check for staleness.\n     * Defaults to 1, which means that the current time is checked\n     * at most once per millisecond.\n     *\n     * Set to 0 to check the current time every time staleness is tested.\n     * (This reduces performance, and is theoretically unnecessary.)\n     *\n     * Setting this to a higher value will improve performance somewhat\n     * while using ttl tracking, albeit at the expense of keeping stale\n     * items around a bit longer than their TTLs would indicate.\n     *\n     * @default 1\n     */\n    ttlResolution?: Milliseconds\n\n    /**\n     * Preemptively remove stale items from the cache.\n     *\n     * Note that this may *significantly* degrade performance, especially if\n     * the cache is storing a large number of items. It is almost always best\n     * to just leave the stale items in the cache, and let them fall out as new\n     * items are added.\n     *\n     * Note that this means that {@link OptionsBase.allowStale} is a bit\n     * pointless, as stale items will be deleted almost as soon as they\n     * expire.\n     *\n     * Use with caution!\n     */\n    ttlAutopurge?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever it is retrieved from cache with\n     * {@link LRUCache#get}, causing it to not expire. (It can still fall out\n     * of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     */\n    updateAgeOnGet?: boolean\n\n    /**\n     * When using time-expiring entries with `ttl`, setting this to `true` will\n     * make each item's age reset to 0 whenever its presence in the cache is\n     * checked with {@link LRUCache#has}, causing it to not expire. (It can\n     * still fall out of cache based on recency of use, of course.)\n     *\n     * Has no effect if {@link OptionsBase.ttl} is not set.\n     */\n    updateAgeOnHas?: boolean\n\n    /**\n     * Allow {@link LRUCache#get} and {@link LRUCache#fetch} calls to return\n     * stale data, if available.\n     *\n     * By default, if you set `ttl`, stale items will only be deleted from the\n     * cache when you `get(key)`. That is, it's not preemptively pruning items,\n     * unless {@link OptionsBase.ttlAutopurge} is set.\n     *\n     * If you set `allowStale:true`, it'll return the stale value *as well as*\n     * deleting it. If you don't set this, then it'll return `undefined` when\n     * you try to get a stale entry.\n     *\n     * Note that when a stale entry is fetched, _even if it is returned due to\n     * `allowStale` being set_, it is removed from the cache immediately. You\n     * can suppress this behavior by setting\n     * {@link OptionsBase.noDeleteOnStaleGet}, either in the constructor, or in\n     * the options provided to {@link LRUCache#get}.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     * The `cache.has()` method will always return `false` for stale items.\n     *\n     * Only relevant if a ttl is set.\n     */\n    allowStale?: boolean\n\n    /**\n     * Function that is called on items when they are dropped from the\n     * cache, as `dispose(value, key, reason)`.\n     *\n     * This can be handy if you want to close file descriptors or do\n     * other cleanup tasks when items are no longer stored in the cache.\n     *\n     * **NOTE**: It is called _before_ the item has been fully removed\n     * from the cache, so if you want to put it right back in, you need\n     * to wait until the next tick. If you try to add it back in during\n     * the `dispose()` function call, it will break things in subtle and\n     * weird ways.\n     *\n     * Unlike several other options, this may _not_ be overridden by\n     * passing an option to `set()`, for performance reasons.\n     *\n     * The `reason` will be one of the following strings, corresponding\n     * to the reason for the item's deletion:\n     *\n     * - `evict` Item was evicted to make space for a new addition\n     * - `set` Item was overwritten by a new value\n     * - `expire` Item expired its TTL\n     * - `fetch` Item was deleted due to a failed or aborted fetch, or a\n     *   fetchMethod returning `undefined.\n     * - `delete` Item was removed by explicit `cache.delete(key)`,\n     *   `cache.clear()`, or `cache.set(key, undefined)`.\n     */\n    dispose?: Disposer<K, V>\n\n    /**\n     * The same as {@link OptionsBase.dispose}, but called *after* the entry\n     * is completely removed and the cache is once again in a clean state.\n     *\n     * It is safe to add an item right back into the cache at this point.\n     * However, note that it is *very* easy to inadvertently create infinite\n     * recursion this way.\n     */\n    disposeAfter?: Disposer<K, V>\n\n    /**\n     * Set to true to suppress calling the\n     * {@link OptionsBase.dispose} function if the entry key is\n     * still accessible within the cache.\n     *\n     * This may be overridden by passing an options object to\n     * {@link LRUCache#set}.\n     *\n     * Only relevant if `dispose` or `disposeAfter` are set.\n     */\n    noDisposeOnSet?: boolean\n\n    /**\n     * Boolean flag to tell the cache to not update the TTL when setting a new\n     * value for an existing key (ie, when updating a value rather than\n     * inserting a new value).  Note that the TTL value is _always_ set (if\n     * provided) when adding a new entry into the cache.\n     *\n     * Has no effect if a {@link OptionsBase.ttl} is not set.\n     *\n     * May be passed as an option to {@link LRUCache#set}.\n     */\n    noUpdateTTL?: boolean\n\n    /**\n     * Set to a positive integer to track the sizes of items added to the\n     * cache, and automatically evict items in order to stay below this size.\n     * Note that this may result in fewer than `max` items being stored.\n     *\n     * Attempting to add an item to the cache whose calculated size is greater\n     * that this amount will be a no-op. The item will not be cached, and no\n     * other items will be evicted.\n     *\n     * Optional, must be a positive integer if provided.\n     *\n     * Sets `maxEntrySize` to the same value, unless a different value is\n     * provided for `maxEntrySize`.\n     *\n     * At least one of `max`, `maxSize`, or `TTL` is required. This must be a\n     * positive integer if set.\n     *\n     * Even if size tracking is enabled, **it is strongly recommended to set a\n     * `max` to prevent unbounded growth of the cache.**\n     *\n     * Note also that size tracking can negatively impact performance,\n     * though for most cases, only minimally.\n     */\n    maxSize?: Size\n\n    /**\n     * The maximum allowed size for any single item in the cache.\n     *\n     * If a larger item is passed to {@link LRUCache#set} or returned by a\n     * {@link OptionsBase.fetchMethod} or {@link OptionsBase.memoMethod}, then\n     * it will not be stored in the cache.\n     *\n     * Attempting to add an item whose calculated size is greater than\n     * this amount will not cache the item or evict any old items, but\n     * WILL delete an existing value if one is already present.\n     *\n     * Optional, must be a positive integer if provided. Defaults to\n     * the value of `maxSize` if provided.\n     */\n    maxEntrySize?: Size\n\n    /**\n     * A function that returns a number indicating the item's size.\n     *\n     * Requires {@link OptionsBase.maxSize} to be set.\n     *\n     * If not provided, and {@link OptionsBase.maxSize} or\n     * {@link OptionsBase.maxEntrySize} are set, then all\n     * {@link LRUCache#set} calls **must** provide an explicit\n     * {@link SetOptions.size} or sizeCalculation param.\n     */\n    sizeCalculation?: SizeCalculator<K, V>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#fetch}\n     *\n     * ```ts\n     * fetchMethod(key, staleValue, { signal, options, context })\n     * ```\n     *\n     * If `fetchMethod` is not provided, then `cache.fetch(key)` is equivalent\n     * to `Promise.resolve(cache.get(key))`.\n     *\n     * If at any time, `signal.aborted` is set to `true`, or if the\n     * `signal.onabort` method is called, or if it emits an `'abort'` event\n     * which you can listen to with `addEventListener`, then that means that\n     * the fetch should be abandoned. This may be passed along to async\n     * functions aware of AbortController/AbortSignal behavior.\n     *\n     * The `fetchMethod` should **only** return `undefined` or a Promise\n     * resolving to `undefined` if the AbortController signaled an `abort`\n     * event. In all other cases, it should return or resolve to a value\n     * suitable for adding to the cache.\n     *\n     * The `options` object is a union of the options that may be provided to\n     * `set()` and `get()`. If they are modified, then that will result in\n     * modifying the settings to `cache.set()` when the value is resolved, and\n     * in the case of\n     * {@link OptionsBase.noDeleteOnFetchRejection} and\n     * {@link OptionsBase.allowStaleOnFetchRejection}, the handling of\n     * `fetchMethod` failures.\n     *\n     * For example, a DNS cache may update the TTL based on the value returned\n     * from a remote DNS server by changing `options.ttl` in the `fetchMethod`.\n     */\n    fetchMethod?: Fetcher<K, V, FC>\n\n    /**\n     * Method that provides the implementation for {@link LRUCache#memo}\n     */\n    memoMethod?: Memoizer<K, V, FC>\n\n    /**\n     * Set to true to suppress the deletion of stale data when a\n     * {@link OptionsBase.fetchMethod} returns a rejected promise.\n     */\n    noDeleteOnFetchRejection?: boolean\n\n    /**\n     * Do not delete stale items when they are retrieved with\n     * {@link LRUCache#get}.\n     *\n     * Note that the `get` return value will still be `undefined`\n     * unless {@link OptionsBase.allowStale} is true.\n     *\n     * When using time-expiring entries with `ttl`, by default stale\n     * items will be removed from the cache when the key is accessed\n     * with `cache.get()`.\n     *\n     * Setting this option will cause stale items to remain in the cache, until\n     * they are explicitly deleted with `cache.delete(key)`, or retrieved with\n     * `noDeleteOnStaleGet` set to `false`.\n     *\n     * This may be overridden by passing an options object to `cache.get()`.\n     *\n     * Only relevant if a ttl is used.\n     */\n    noDeleteOnStaleGet?: boolean\n\n    /**\n     * Set to true to allow returning stale data when a\n     * {@link OptionsBase.fetchMethod} throws an error or returns a rejected\n     * promise.\n     *\n     * This differs from using {@link OptionsBase.allowStale} in that stale\n     * data will ONLY be returned in the case that the {@link LRUCache#fetch}\n     * fails, not any other times.\n     *\n     * If a `fetchMethod` fails, and there is no stale value available, the\n     * `fetch()` will resolve to `undefined`. Ie, all `fetchMethod` errors are\n     * suppressed.\n     *\n     * Implies `noDeleteOnFetchRejection`.\n     *\n     * This may be set in calls to `fetch()`, or defaulted on the constructor,\n     * or overridden by modifying the options object in the `fetchMethod`.\n     */\n    allowStaleOnFetchRejection?: boolean\n\n    /**\n     * Set to true to return a stale value from the cache when the\n     * `AbortSignal` passed to the {@link OptionsBase.fetchMethod} dispatches\n     * an `'abort'` event, whether user-triggered, or due to internal cache\n     * behavior.\n     *\n     * Unless {@link OptionsBase.ignoreFetchAbort} is also set, the underlying\n     * {@link OptionsBase.fetchMethod} will still be considered canceled, and\n     * any value it returns will be ignored and not cached.\n     *\n     * Caveat: since fetches are aborted when a new value is explicitly\n     * set in the cache, this can lead to fetch returning a stale value,\n     * since that was the fallback value _at the moment the `fetch()` was\n     * initiated_, even though the new updated value is now present in\n     * the cache.\n     *\n     * For example:\n     *\n     * ```ts\n     * const cache = new LRUCache<string, any>({\n     *   ttl: 100,\n     *   fetchMethod: async (url, oldValue, { signal }) =>  {\n     *     const res = await fetch(url, { signal })\n     *     return await res.json()\n     *   }\n     * })\n     * cache.set('https://example.com/', { some: 'data' })\n     * // 100ms go by...\n     * const result = cache.fetch('https://example.com/')\n     * cache.set('https://example.com/', { other: 'thing' })\n     * console.log(await result) // { some: 'data' }\n     * console.log(cache.get('https://example.com/')) // { other: 'thing' }\n     * ```\n     */\n    allowStaleOnFetchAbort?: boolean\n\n    /**\n     * Set to true to ignore the `abort` event emitted by the `AbortSignal`\n     * object passed to {@link OptionsBase.fetchMethod}, and still cache the\n     * resulting resolution value, as long as it is not `undefined`.\n     *\n     * When used on its own, this means aborted {@link LRUCache#fetch} calls\n     * are not immediately resolved or rejected when they are aborted, and\n     * instead take the full time to await.\n     *\n     * When used with {@link OptionsBase.allowStaleOnFetchAbort}, aborted\n     * {@link LRUCache#fetch} calls will resolve immediately to their stale\n     * cached value or `undefined`, and will continue to process and eventually\n     * update the cache when they resolve, as long as the resulting value is\n     * not `undefined`, thus supporting a \"return stale on timeout while\n     * refreshing\" mechanism by passing `AbortSignal.timeout(n)` as the signal.\n     *\n     * For example:\n     *\n     * ```ts\n     * const c = new LRUCache({\n     *   ttl: 100,\n     *   ignoreFetchAbort: true,\n     *   allowStaleOnFetchAbort: true,\n     *   fetchMethod: async (key, oldValue, { signal }) => {\n     *     // note: do NOT pass the signal to fetch()!\n     *     // let's say this fetch can take a long time.\n     *     const res = await fetch(`https://slow-backend-server/${key}`)\n     *     return await res.json()\n     *   },\n     * })\n     *\n     * // this will return the stale value after 100ms, while still\n     * // updating in the background for next time.\n     * const val = await c.fetch('key', { signal: AbortSignal.timeout(100) })\n     * ```\n     *\n     * **Note**: regardless of this setting, an `abort` event _is still\n     * emitted on the `AbortSignal` object_, so may result in invalid results\n     * when passed to other underlying APIs that use AbortSignals.\n     *\n     * This may be overridden in the {@link OptionsBase.fetchMethod} or the\n     * call to {@link LRUCache#fetch}.\n     */\n    ignoreFetchAbort?: boolean\n  }\n\n  export interface OptionsMaxLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    max: Count\n  }\n  export interface OptionsTTLLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    ttl: Milliseconds\n    ttlAutopurge: boolean\n  }\n  export interface OptionsSizeLimit<K, V, FC>\n    extends OptionsBase<K, V, FC> {\n    maxSize: Size\n  }\n\n  /**\n   * The valid safe options for the {@link LRUCache} constructor\n   */\n  export type Options<K, V, FC> =\n    | OptionsMaxLimit<K, V, FC>\n    | OptionsSizeLimit<K, V, FC>\n    | OptionsTTLLimit<K, V, FC>\n\n  /**\n   * Entry objects used by {@link LRUCache#load} and {@link LRUCache#dump},\n   * and returned by {@link LRUCache#info}.\n   */\n  export interface Entry<V> {\n    value: V\n    ttl?: Milliseconds\n    size?: Size\n    start?: Milliseconds\n  }\n}\n\n/**\n * Default export, the thing you're using this module to get.\n *\n * The `K` and `V` types define the key and value types, respectively. The\n * optional `FC` type defines the type of the `context` object passed to\n * `cache.fetch()` and `cache.memo()`.\n *\n * Keys and values **must not** be `null` or `undefined`.\n *\n * All properties from the options object (with the exception of `max`,\n * `maxSize`, `fetchMethod`, `memoMethod`, `dispose` and `disposeAfter`) are\n * added as normal public members. (The listed options are read-only getters.)\n *\n * Changing any of these will alter the defaults for subsequent method calls.\n */\nexport class LRUCache<K extends {}, V extends {}, FC = unknown> {\n  // options that cannot be changed without disaster\n  readonly #max: LRUCache.Count\n  readonly #maxSize: LRUCache.Size\n  readonly #dispose?: LRUCache.Disposer<K, V>\n  readonly #disposeAfter?: LRUCache.Disposer<K, V>\n  readonly #fetchMethod?: LRUCache.Fetcher<K, V, FC>\n  readonly #memoMethod?: LRUCache.Memoizer<K, V, FC>\n\n  /**\n   * {@link LRUCache.OptionsBase.ttl}\n   */\n  ttl: LRUCache.Milliseconds\n\n  /**\n   * {@link LRUCache.OptionsBase.ttlResolution}\n   */\n  ttlResolution: LRUCache.Milliseconds\n  /**\n   * {@link LRUCache.OptionsBase.ttlAutopurge}\n   */\n  ttlAutopurge: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnGet}\n   */\n  updateAgeOnGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.updateAgeOnHas}\n   */\n  updateAgeOnHas: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStale}\n   */\n  allowStale: boolean\n\n  /**\n   * {@link LRUCache.OptionsBase.noDisposeOnSet}\n   */\n  noDisposeOnSet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noUpdateTTL}\n   */\n  noUpdateTTL: boolean\n  /**\n   * {@link LRUCache.OptionsBase.maxEntrySize}\n   */\n  maxEntrySize: LRUCache.Size\n  /**\n   * {@link LRUCache.OptionsBase.sizeCalculation}\n   */\n  sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n   */\n  noDeleteOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n   */\n  noDeleteOnStaleGet: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n   */\n  allowStaleOnFetchAbort: boolean\n  /**\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n   */\n  allowStaleOnFetchRejection: boolean\n  /**\n   * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n   */\n  ignoreFetchAbort: boolean\n\n  // computed properties\n  #size: LRUCache.Count\n  #calculatedSize: LRUCache.Size\n  #keyMap: Map<K, Index>\n  #keyList: (K | undefined)[]\n  #valList: (V | BackgroundFetch<V> | undefined)[]\n  #next: NumberArray\n  #prev: NumberArray\n  #head: Index\n  #tail: Index\n  #free: StackLike\n  #disposed?: DisposeTask<K, V>[]\n  #sizes?: ZeroArray\n  #starts?: ZeroArray\n  #ttls?: ZeroArray\n\n  #hasDispose: boolean\n  #hasFetchMethod: boolean\n  #hasDisposeAfter: boolean\n\n  /**\n   * Do not call this method unless you need to inspect the\n   * inner workings of the cache.  If anything returned by this\n   * object is modified in any way, strange breakage may occur.\n   *\n   * These fields are private for a reason!\n   *\n   * @internal\n   */\n  static unsafeExposeInternals<\n    K extends {},\n    V extends {},\n    FC extends unknown = unknown\n  >(c: LRUCache<K, V, FC>) {\n    return {\n      // properties\n      starts: c.#starts,\n      ttls: c.#ttls,\n      sizes: c.#sizes,\n      keyMap: c.#keyMap as Map<K, number>,\n      keyList: c.#keyList,\n      valList: c.#valList,\n      next: c.#next,\n      prev: c.#prev,\n      get head() {\n        return c.#head\n      },\n      get tail() {\n        return c.#tail\n      },\n      free: c.#free,\n      // methods\n      isBackgroundFetch: (p: any) => c.#isBackgroundFetch(p),\n      backgroundFetch: (\n        k: K,\n        index: number | undefined,\n        options: LRUCache.FetchOptions<K, V, FC>,\n        context: any\n      ): BackgroundFetch<V> =>\n        c.#backgroundFetch(\n          k,\n          index as Index | undefined,\n          options,\n          context\n        ),\n      moveToTail: (index: number): void =>\n        c.#moveToTail(index as Index),\n      indexes: (options?: { allowStale: boolean }) =>\n        c.#indexes(options),\n      rindexes: (options?: { allowStale: boolean }) =>\n        c.#rindexes(options),\n      isStale: (index: number | undefined) =>\n        c.#isStale(index as Index),\n    }\n  }\n\n  // Protected read-only members\n\n  /**\n   * {@link LRUCache.OptionsBase.max} (read-only)\n   */\n  get max(): LRUCache.Count {\n    return this.#max\n  }\n  /**\n   * {@link LRUCache.OptionsBase.maxSize} (read-only)\n   */\n  get maxSize(): LRUCache.Count {\n    return this.#maxSize\n  }\n  /**\n   * The total computed size of items in the cache (read-only)\n   */\n  get calculatedSize(): LRUCache.Size {\n    return this.#calculatedSize\n  }\n  /**\n   * The number of items stored in the cache (read-only)\n   */\n  get size(): LRUCache.Count {\n    return this.#size\n  }\n  /**\n   * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n   */\n  get fetchMethod(): LRUCache.Fetcher<K, V, FC> | undefined {\n    return this.#fetchMethod\n  }\n  get memoMethod(): LRUCache.Memoizer<K, V, FC> | undefined {\n    return this.#memoMethod\n  }\n  /**\n   * {@link LRUCache.OptionsBase.dispose} (read-only)\n   */\n  get dispose() {\n    return this.#dispose\n  }\n  /**\n   * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n   */\n  get disposeAfter() {\n    return this.#disposeAfter\n  }\n\n  constructor(\n    options: LRUCache.Options<K, V, FC> | LRUCache<K, V, FC>\n  ) {\n    const {\n      max = 0,\n      ttl,\n      ttlResolution = 1,\n      ttlAutopurge,\n      updateAgeOnGet,\n      updateAgeOnHas,\n      allowStale,\n      dispose,\n      disposeAfter,\n      noDisposeOnSet,\n      noUpdateTTL,\n      maxSize = 0,\n      maxEntrySize = 0,\n      sizeCalculation,\n      fetchMethod,\n      memoMethod,\n      noDeleteOnFetchRejection,\n      noDeleteOnStaleGet,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n    } = options\n\n    if (max !== 0 && !isPosInt(max)) {\n      throw new TypeError('max option must be a nonnegative integer')\n    }\n\n    const UintArray = max ? getUintArray(max) : Array\n    if (!UintArray) {\n      throw new Error('invalid max value: ' + max)\n    }\n\n    this.#max = max\n    this.#maxSize = maxSize\n    this.maxEntrySize = maxEntrySize || this.#maxSize\n    this.sizeCalculation = sizeCalculation\n    if (this.sizeCalculation) {\n      if (!this.#maxSize && !this.maxEntrySize) {\n        throw new TypeError(\n          'cannot set sizeCalculation without setting maxSize or maxEntrySize'\n        )\n      }\n      if (typeof this.sizeCalculation !== 'function') {\n        throw new TypeError('sizeCalculation set to non-function')\n      }\n    }\n\n    if (\n      memoMethod !== undefined &&\n      typeof memoMethod !== 'function'\n    ) {\n      throw new TypeError('memoMethod must be a function if defined')\n    }\n    this.#memoMethod = memoMethod\n\n    if (\n      fetchMethod !== undefined &&\n      typeof fetchMethod !== 'function'\n    ) {\n      throw new TypeError(\n        'fetchMethod must be a function if specified'\n      )\n    }\n    this.#fetchMethod = fetchMethod\n    this.#hasFetchMethod = !!fetchMethod\n\n    this.#keyMap = new Map()\n    this.#keyList = new Array(max).fill(undefined)\n    this.#valList = new Array(max).fill(undefined)\n    this.#next = new UintArray(max)\n    this.#prev = new UintArray(max)\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free = Stack.create(max)\n    this.#size = 0\n    this.#calculatedSize = 0\n\n    if (typeof dispose === 'function') {\n      this.#dispose = dispose\n    }\n    if (typeof disposeAfter === 'function') {\n      this.#disposeAfter = disposeAfter\n      this.#disposed = []\n    } else {\n      this.#disposeAfter = undefined\n      this.#disposed = undefined\n    }\n    this.#hasDispose = !!this.#dispose\n    this.#hasDisposeAfter = !!this.#disposeAfter\n\n    this.noDisposeOnSet = !!noDisposeOnSet\n    this.noUpdateTTL = !!noUpdateTTL\n    this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection\n    this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection\n    this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort\n    this.ignoreFetchAbort = !!ignoreFetchAbort\n\n    // NB: maxEntrySize is set to maxSize if it's set\n    if (this.maxEntrySize !== 0) {\n      if (this.#maxSize !== 0) {\n        if (!isPosInt(this.#maxSize)) {\n          throw new TypeError(\n            'maxSize must be a positive integer if specified'\n          )\n        }\n      }\n      if (!isPosInt(this.maxEntrySize)) {\n        throw new TypeError(\n          'maxEntrySize must be a positive integer if specified'\n        )\n      }\n      this.#initializeSizeTracking()\n    }\n\n    this.allowStale = !!allowStale\n    this.noDeleteOnStaleGet = !!noDeleteOnStaleGet\n    this.updateAgeOnGet = !!updateAgeOnGet\n    this.updateAgeOnHas = !!updateAgeOnHas\n    this.ttlResolution =\n      isPosInt(ttlResolution) || ttlResolution === 0\n        ? ttlResolution\n        : 1\n    this.ttlAutopurge = !!ttlAutopurge\n    this.ttl = ttl || 0\n    if (this.ttl) {\n      if (!isPosInt(this.ttl)) {\n        throw new TypeError(\n          'ttl must be a positive integer if specified'\n        )\n      }\n      this.#initializeTTLTracking()\n    }\n\n    // do not allow completely unbounded caches\n    if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n      throw new TypeError(\n        'At least one of max, maxSize, or ttl is required'\n      )\n    }\n    if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n      const code = 'LRU_CACHE_UNBOUNDED'\n      if (shouldWarn(code)) {\n        warned.add(code)\n        const msg =\n          'TTL caching without ttlAutopurge, max, or maxSize can ' +\n          'result in unbounded memory consumption.'\n        emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache)\n      }\n    }\n  }\n\n  /**\n   * Return the number of ms left in the item's TTL. If item is not in cache,\n   * returns `0`. Returns `Infinity` if item is in cache without a defined TTL.\n   */\n  getRemainingTTL(key: K) {\n    return this.#keyMap.has(key) ? Infinity : 0\n  }\n\n  #initializeTTLTracking() {\n    const ttls = new ZeroArray(this.#max)\n    const starts = new ZeroArray(this.#max)\n    this.#ttls = ttls\n    this.#starts = starts\n\n    this.#setItemTTL = (index, ttl, start = perf.now()) => {\n      starts[index] = ttl !== 0 ? start : 0\n      ttls[index] = ttl\n      if (ttl !== 0 && this.ttlAutopurge) {\n        const t = setTimeout(() => {\n          if (this.#isStale(index)) {\n            this.#delete(this.#keyList[index] as K, 'expire')\n          }\n        }, ttl + 1)\n        // unref() not supported on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n    }\n\n    this.#updateItemAge = index => {\n      starts[index] = ttls[index] !== 0 ? perf.now() : 0\n    }\n\n    this.#statusTTL = (status, index) => {\n      if (ttls[index]) {\n        const ttl = ttls[index]\n        const start = starts[index]\n        /* c8 ignore next */\n        if (!ttl || !start) return\n        status.ttl = ttl\n        status.start = start\n        status.now = cachedNow || getNow()\n        const age = status.now - start\n        status.remainingTTL = ttl - age\n      }\n    }\n\n    // debounce calls to perf.now() to 1s so we're not hitting\n    // that costly call repeatedly.\n    let cachedNow = 0\n    const getNow = () => {\n      const n = perf.now()\n      if (this.ttlResolution > 0) {\n        cachedNow = n\n        const t = setTimeout(\n          () => (cachedNow = 0),\n          this.ttlResolution\n        )\n        // not available on all platforms\n        /* c8 ignore start */\n        if (t.unref) {\n          t.unref()\n        }\n        /* c8 ignore stop */\n      }\n      return n\n    }\n\n    this.getRemainingTTL = key => {\n      const index = this.#keyMap.get(key)\n      if (index === undefined) {\n        return 0\n      }\n      const ttl = ttls[index]\n      const start = starts[index]\n      if (!ttl || !start) {\n        return Infinity\n      }\n      const age = (cachedNow || getNow()) - start\n      return ttl - age\n    }\n\n    this.#isStale = index => {\n      const s = starts[index]\n      const t = ttls[index]\n      return !!t && !!s && (cachedNow || getNow()) - s > t\n    }\n  }\n\n  // conditionally set private methods related to TTL\n  #updateItemAge: (index: Index) => void = () => {}\n  #statusTTL: (status: LRUCache.Status<V>, index: Index) => void =\n    () => {}\n  #setItemTTL: (\n    index: Index,\n    ttl: LRUCache.Milliseconds,\n    start?: LRUCache.Milliseconds\n    // ignore because we never call this if we're not already in TTL mode\n    /* c8 ignore start */\n  ) => void = () => {}\n  /* c8 ignore stop */\n\n  #isStale: (index: Index) => boolean = () => false\n\n  #initializeSizeTracking() {\n    const sizes = new ZeroArray(this.#max)\n    this.#calculatedSize = 0\n    this.#sizes = sizes\n    this.#removeItemSize = index => {\n      this.#calculatedSize -= sizes[index] as number\n      sizes[index] = 0\n    }\n    this.#requireSize = (k, v, size, sizeCalculation) => {\n      // provisionally accept background fetches.\n      // actual value size will be checked when they return.\n      if (this.#isBackgroundFetch(v)) {\n        return 0\n      }\n      if (!isPosInt(size)) {\n        if (sizeCalculation) {\n          if (typeof sizeCalculation !== 'function') {\n            throw new TypeError('sizeCalculation must be a function')\n          }\n          size = sizeCalculation(v, k)\n          if (!isPosInt(size)) {\n            throw new TypeError(\n              'sizeCalculation return invalid (expect positive integer)'\n            )\n          }\n        } else {\n          throw new TypeError(\n            'invalid size value (must be positive integer). ' +\n              'When maxSize or maxEntrySize is used, sizeCalculation ' +\n              'or size must be set.'\n          )\n        }\n      }\n      return size\n    }\n    this.#addItemSize = (\n      index: Index,\n      size: LRUCache.Size,\n      status?: LRUCache.Status<V>\n    ) => {\n      sizes[index] = size\n      if (this.#maxSize) {\n        const maxSize = this.#maxSize - (sizes[index] as number)\n        while (this.#calculatedSize > maxSize) {\n          this.#evict(true)\n        }\n      }\n      this.#calculatedSize += sizes[index] as number\n      if (status) {\n        status.entrySize = size\n        status.totalCalculatedSize = this.#calculatedSize\n      }\n    }\n  }\n\n  #removeItemSize: (index: Index) => void = _i => {}\n  #addItemSize: (\n    index: Index,\n    size: LRUCache.Size,\n    status?: LRUCache.Status<V>\n  ) => void = (_i, _s, _st) => {}\n  #requireSize: (\n    k: K,\n    v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => LRUCache.Size = (\n    _k: K,\n    _v: V | BackgroundFetch<V>,\n    size?: LRUCache.Size,\n    sizeCalculation?: LRUCache.SizeCalculator<K, V>\n  ) => {\n    if (size || sizeCalculation) {\n      throw new TypeError(\n        'cannot set size without setting maxSize or maxEntrySize on cache'\n      )\n    }\n    return 0\n  };\n\n  *#indexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#tail; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#head) {\n          break\n        } else {\n          i = this.#prev[i] as Index\n        }\n      }\n    }\n  }\n\n  *#rindexes({ allowStale = this.allowStale } = {}) {\n    if (this.#size) {\n      for (let i = this.#head; true; ) {\n        if (!this.#isValidIndex(i)) {\n          break\n        }\n        if (allowStale || !this.#isStale(i)) {\n          yield i\n        }\n        if (i === this.#tail) {\n          break\n        } else {\n          i = this.#next[i] as Index\n        }\n      }\n    }\n  }\n\n  #isValidIndex(index: Index) {\n    return (\n      index !== undefined &&\n      this.#keyMap.get(this.#keyList[index] as K) === index\n    )\n  }\n\n  /**\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from most recently used to least recently used.\n   */\n  *entries() {\n    for (const i of this.#indexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]] as [K, V]\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.entries}\n   *\n   * Return a generator yielding `[key, value]` pairs,\n   * in order from least recently used to most recently used.\n   */\n  *rentries() {\n    for (const i of this.#rindexes()) {\n      if (\n        this.#valList[i] !== undefined &&\n        this.#keyList[i] !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield [this.#keyList[i], this.#valList[i]]\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the keys in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *keys() {\n    for (const i of this.#indexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.keys}\n   *\n   * Return a generator yielding the keys in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rkeys() {\n    for (const i of this.#rindexes()) {\n      const k = this.#keyList[i]\n      if (\n        k !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield k\n      }\n    }\n  }\n\n  /**\n   * Return a generator yielding the values in the cache,\n   * in order from most recently used to least recently used.\n   */\n  *values() {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i] as V\n      }\n    }\n  }\n\n  /**\n   * Inverse order version of {@link LRUCache.values}\n   *\n   * Return a generator yielding the values in the cache,\n   * in order from least recently used to most recently used.\n   */\n  *rvalues() {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      if (\n        v !== undefined &&\n        !this.#isBackgroundFetch(this.#valList[i])\n      ) {\n        yield this.#valList[i]\n      }\n    }\n  }\n\n  /**\n   * Iterating over the cache itself yields the same results as\n   * {@link LRUCache.entries}\n   */\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n\n  /**\n   * A String value that is used in the creation of the default string\n   * description of an object. Called by the built-in method\n   * `Object.prototype.toString`.\n   */\n  [Symbol.toStringTag] = 'LRUCache'\n\n  /**\n   * Find a value for which the supplied fn method returns a truthy value,\n   * similar to `Array.find()`. fn is called as `fn(value, key, cache)`.\n   */\n  find(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => boolean,\n    getOptions: LRUCache.GetOptions<K, V, FC> = {}\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      if (fn(value, this.#keyList[i] as K, this)) {\n        return this.get(this.#keyList[i] as K, getOptions)\n      }\n    }\n  }\n\n  /**\n   * Call the supplied function on each item in the cache, in order from most\n   * recently used to least recently used.\n   *\n   * `fn` is called as `fn(value, key, cache)`.\n   *\n   * If `thisp` is provided, function will be called in the `this`-context of\n   * the provided object, or the cache if no `thisp` object is provided.\n   *\n   * Does not update age or recenty of use, or iterate over stale values.\n   */\n  forEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#indexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * The same as {@link LRUCache.forEach} but items are iterated over in\n   * reverse order.  (ie, less recently used items are iterated over first.)\n   */\n  rforEach(\n    fn: (v: V, k: K, self: LRUCache<K, V, FC>) => any,\n    thisp: any = this\n  ) {\n    for (const i of this.#rindexes()) {\n      const v = this.#valList[i]\n      const value = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined) continue\n      fn.call(thisp, value, this.#keyList[i] as K, this)\n    }\n  }\n\n  /**\n   * Delete any stale entries. Returns true if anything was removed,\n   * false otherwise.\n   */\n  purgeStale() {\n    let deleted = false\n    for (const i of this.#rindexes({ allowStale: true })) {\n      if (this.#isStale(i)) {\n        this.#delete(this.#keyList[i] as K, 'expire')\n        deleted = true\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Get the extended info about a given entry, to get its value, size, and\n   * TTL info simultaneously. Returns `undefined` if the key is not present.\n   *\n   * Unlike {@link LRUCache#dump}, which is designed to be portable and survive\n   * serialization, the `start` value is always the current timestamp, and the\n   * `ttl` is a calculated remaining time to live (negative if expired).\n   *\n   * Always returns stale values, if their info is found in the cache, so be\n   * sure to check for expirations (ie, a negative {@link LRUCache.Entry#ttl})\n   * if relevant.\n   */\n  info(key: K): LRUCache.Entry<V> | undefined {\n    const i = this.#keyMap.get(key)\n    if (i === undefined) return undefined\n    const v = this.#valList[i]\n    const value: V | undefined = this.#isBackgroundFetch(v)\n      ? v.__staleWhileFetching\n      : v\n    if (value === undefined) return undefined\n    const entry: LRUCache.Entry<V> = { value }\n    if (this.#ttls && this.#starts) {\n      const ttl = this.#ttls[i]\n      const start = this.#starts[i]\n      if (ttl && start) {\n        const remain = ttl - (perf.now() - start)\n        entry.ttl = remain\n        entry.start = Date.now()\n      }\n    }\n    if (this.#sizes) {\n      entry.size = this.#sizes[i]\n    }\n    return entry\n  }\n\n  /**\n   * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n   * passed to {@link LRUCache#load}.\n   *\n   * The `start` fields are calculated relative to a portable `Date.now()`\n   * timestamp, even if `performance.now()` is available.\n   *\n   * Stale entries are always included in the `dump`, even if\n   * {@link LRUCache.OptionsBase.allowStale} is false.\n   *\n   * Note: this returns an actual array, not a generator, so it can be more\n   * easily passed around.\n   */\n  dump() {\n    const arr: [K, LRUCache.Entry<V>][] = []\n    for (const i of this.#indexes({ allowStale: true })) {\n      const key = this.#keyList[i]\n      const v = this.#valList[i]\n      const value: V | undefined = this.#isBackgroundFetch(v)\n        ? v.__staleWhileFetching\n        : v\n      if (value === undefined || key === undefined) continue\n      const entry: LRUCache.Entry<V> = { value }\n      if (this.#ttls && this.#starts) {\n        entry.ttl = this.#ttls[i]\n        // always dump the start relative to a portable timestamp\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = perf.now() - (this.#starts[i] as number)\n        entry.start = Math.floor(Date.now() - age)\n      }\n      if (this.#sizes) {\n        entry.size = this.#sizes[i]\n      }\n      arr.unshift([key, entry])\n    }\n    return arr\n  }\n\n  /**\n   * Reset the cache and load in the items in entries in the order listed.\n   *\n   * The shape of the resulting cache may be different if the same options are\n   * not used in both caches.\n   *\n   * The `start` fields are assumed to be calculated relative to a portable\n   * `Date.now()` timestamp, even if `performance.now()` is available.\n   */\n  load(arr: [K, LRUCache.Entry<V>][]) {\n    this.clear()\n    for (const [key, entry] of arr) {\n      if (entry.start) {\n        // entry.start is a portable timestamp, but we may be using\n        // node's performance.now(), so calculate the offset, so that\n        // we get the intended remaining TTL, no matter how long it's\n        // been on ice.\n        //\n        // it's ok for this to be a bit slow, it's a rare operation.\n        const age = Date.now() - entry.start\n        entry.start = perf.now() - age\n      }\n      this.set(key, entry.value, entry)\n    }\n  }\n\n  /**\n   * Add a value to the cache.\n   *\n   * Note: if `undefined` is specified as a value, this is an alias for\n   * {@link LRUCache#delete}\n   *\n   * Fields on the {@link LRUCache.SetOptions} options param will override\n   * their corresponding values in the constructor options for the scope\n   * of this single `set()` operation.\n   *\n   * If `start` is provided, then that will set the effective start\n   * time for the TTL calculation. Note that this must be a previous\n   * value of `performance.now()` if supported, or a previous value of\n   * `Date.now()` if not.\n   *\n   * Options object may also include `size`, which will prevent\n   * calling the `sizeCalculation` function and just use the specified\n   * number if it is a positive integer, and `noDisposeOnSet` which\n   * will prevent calling a `dispose` function in the case of\n   * overwrites.\n   *\n   * If the `size` (or return value of `sizeCalculation`) for a given\n   * entry is greater than `maxEntrySize`, then the item will not be\n   * added to the cache.\n   *\n   * Will update the recency of the entry.\n   *\n   * If the value is `undefined`, then this is an alias for\n   * `cache.delete(key)`. `undefined` is never stored in the cache.\n   */\n  set(\n    k: K,\n    v: V | BackgroundFetch<V> | undefined,\n    setOptions: LRUCache.SetOptions<K, V, FC> = {}\n  ) {\n    if (v === undefined) {\n      this.delete(k)\n      return this\n    }\n    const {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      sizeCalculation = this.sizeCalculation,\n      status,\n    } = setOptions\n    let { noUpdateTTL = this.noUpdateTTL } = setOptions\n\n    const size = this.#requireSize(\n      k,\n      v,\n      setOptions.size || 0,\n      sizeCalculation\n    )\n    // if the item doesn't fit, don't do anything\n    // NB: maxEntrySize set to maxSize by default\n    if (this.maxEntrySize && size > this.maxEntrySize) {\n      if (status) {\n        status.set = 'miss'\n        status.maxEntrySizeExceeded = true\n      }\n      // have to delete, in case something is there already.\n      this.#delete(k, 'set')\n      return this\n    }\n    let index = this.#size === 0 ? undefined : this.#keyMap.get(k)\n    if (index === undefined) {\n      // addition\n      index = (\n        this.#size === 0\n          ? this.#tail\n          : this.#free.length !== 0\n          ? this.#free.pop()\n          : this.#size === this.#max\n          ? this.#evict(false)\n          : this.#size\n      ) as Index\n      this.#keyList[index] = k\n      this.#valList[index] = v\n      this.#keyMap.set(k, index)\n      this.#next[this.#tail] = index\n      this.#prev[index] = this.#tail\n      this.#tail = index\n      this.#size++\n      this.#addItemSize(index, size, status)\n      if (status) status.set = 'add'\n      noUpdateTTL = false\n    } else {\n      // update\n      this.#moveToTail(index)\n      const oldVal = this.#valList[index] as V | BackgroundFetch<V>\n      if (v !== oldVal) {\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n          oldVal.__abortController.abort(new Error('replaced'))\n          const { __staleWhileFetching: s } = oldVal\n          if (s !== undefined && !noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(s as V, k, 'set')\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([s as V, k, 'set'])\n            }\n          }\n        } else if (!noDisposeOnSet) {\n          if (this.#hasDispose) {\n            this.#dispose?.(oldVal as V, k, 'set')\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([oldVal as V, k, 'set'])\n          }\n        }\n        this.#removeItemSize(index)\n        this.#addItemSize(index, size, status)\n        this.#valList[index] = v\n        if (status) {\n          status.set = 'replace'\n          const oldValue =\n            oldVal && this.#isBackgroundFetch(oldVal)\n              ? oldVal.__staleWhileFetching\n              : oldVal\n          if (oldValue !== undefined) status.oldValue = oldValue\n        }\n      } else if (status) {\n        status.set = 'update'\n      }\n    }\n    if (ttl !== 0 && !this.#ttls) {\n      this.#initializeTTLTracking()\n    }\n    if (this.#ttls) {\n      if (!noUpdateTTL) {\n        this.#setItemTTL(index, ttl, start)\n      }\n      if (status) this.#statusTTL(status, index)\n    }\n    if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return this\n  }\n\n  /**\n   * Evict the least recently used item, returning its value or\n   * `undefined` if cache is empty.\n   */\n  pop(): V | undefined {\n    try {\n      while (this.#size) {\n        const val = this.#valList[this.#head]\n        this.#evict(true)\n        if (this.#isBackgroundFetch(val)) {\n          if (val.__staleWhileFetching) {\n            return val.__staleWhileFetching\n          }\n        } else if (val !== undefined) {\n          return val\n        }\n      }\n    } finally {\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed\n        let task: DisposeTask<K, V> | undefined\n        while ((task = dt?.shift())) {\n          this.#disposeAfter?.(...task)\n        }\n      }\n    }\n  }\n\n  #evict(free: boolean) {\n    const head = this.#head\n    const k = this.#keyList[head] as K\n    const v = this.#valList[head] as V\n    if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n      v.__abortController.abort(new Error('evicted'))\n    } else if (this.#hasDispose || this.#hasDisposeAfter) {\n      if (this.#hasDispose) {\n        this.#dispose?.(v, k, 'evict')\n      }\n      if (this.#hasDisposeAfter) {\n        this.#disposed?.push([v, k, 'evict'])\n      }\n    }\n    this.#removeItemSize(head)\n    // if we aren't about to use the index, then null these out\n    if (free) {\n      this.#keyList[head] = undefined\n      this.#valList[head] = undefined\n      this.#free.push(head)\n    }\n    if (this.#size === 1) {\n      this.#head = this.#tail = 0 as Index\n      this.#free.length = 0\n    } else {\n      this.#head = this.#next[head] as Index\n    }\n    this.#keyMap.delete(k)\n    this.#size--\n    return head\n  }\n\n  /**\n   * Check if a key is in the cache, without updating the recency of use.\n   * Will return false if the item is stale, even though it is technically\n   * in the cache.\n   *\n   * Check if a key is in the cache, without updating the recency of\n   * use. Age is updated if {@link LRUCache.OptionsBase.updateAgeOnHas} is set\n   * to `true` in either the options or the constructor.\n   *\n   * Will return `false` if the item is stale, even though it is technically in\n   * the cache. The difference can be determined (if it matters) by using a\n   * `status` argument, and inspecting the `has` field.\n   *\n   * Will not update item age unless\n   * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n   */\n  has(k: K, hasOptions: LRUCache.HasOptions<K, V, FC> = {}) {\n    const { updateAgeOnHas = this.updateAgeOnHas, status } =\n      hasOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const v = this.#valList[index]\n      if (\n        this.#isBackgroundFetch(v) &&\n        v.__staleWhileFetching === undefined\n      ) {\n        return false\n      }\n      if (!this.#isStale(index)) {\n        if (updateAgeOnHas) {\n          this.#updateItemAge(index)\n        }\n        if (status) {\n          status.has = 'hit'\n          this.#statusTTL(status, index)\n        }\n        return true\n      } else if (status) {\n        status.has = 'stale'\n        this.#statusTTL(status, index)\n      }\n    } else if (status) {\n      status.has = 'miss'\n    }\n    return false\n  }\n\n  /**\n   * Like {@link LRUCache#get} but doesn't update recency or delete stale\n   * items.\n   *\n   * Returns `undefined` if the item is stale, unless\n   * {@link LRUCache.OptionsBase.allowStale} is set.\n   */\n  peek(k: K, peekOptions: LRUCache.PeekOptions<K, V, FC> = {}) {\n    const { allowStale = this.allowStale } = peekOptions\n    const index = this.#keyMap.get(k)\n    if (\n      index === undefined ||\n      (!allowStale && this.#isStale(index))\n    ) {\n      return\n    }\n    const v = this.#valList[index]\n    // either stale and allowed, or forcing a refresh of non-stale value\n    return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v\n  }\n\n  #backgroundFetch(\n    k: K,\n    index: Index | undefined,\n    options: LRUCache.FetchOptions<K, V, FC>,\n    context: any\n  ): BackgroundFetch<V> {\n    const v = index === undefined ? undefined : this.#valList[index]\n    if (this.#isBackgroundFetch(v)) {\n      return v\n    }\n\n    const ac = new AC()\n    const { signal } = options\n    // when/if our AC signals, then stop listening to theirs.\n    signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n      signal: ac.signal,\n    })\n\n    const fetchOpts = {\n      signal: ac.signal,\n      options,\n      context,\n    }\n\n    const cb = (\n      v: V | undefined,\n      updateCache = false\n    ): V | undefined => {\n      const { aborted } = ac.signal\n      const ignoreAbort = options.ignoreFetchAbort && v !== undefined\n      if (options.status) {\n        if (aborted && !updateCache) {\n          options.status.fetchAborted = true\n          options.status.fetchError = ac.signal.reason\n          if (ignoreAbort) options.status.fetchAbortIgnored = true\n        } else {\n          options.status.fetchResolved = true\n        }\n      }\n      if (aborted && !ignoreAbort && !updateCache) {\n        return fetchFail(ac.signal.reason)\n      }\n      // either we didn't abort, and are still here, or we did, and ignored\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        if (v === undefined) {\n          if (bf.__staleWhileFetching) {\n            this.#valList[index as Index] = bf.__staleWhileFetching\n          } else {\n            this.#delete(k, 'fetch')\n          }\n        } else {\n          if (options.status) options.status.fetchUpdated = true\n          this.set(k, v, fetchOpts.options)\n        }\n      }\n      return v\n    }\n\n    const eb = (er: any) => {\n      if (options.status) {\n        options.status.fetchRejected = true\n        options.status.fetchError = er\n      }\n      return fetchFail(er)\n    }\n\n    const fetchFail = (er: any): V | undefined => {\n      const { aborted } = ac.signal\n      const allowStaleAborted =\n        aborted && options.allowStaleOnFetchAbort\n      const allowStale =\n        allowStaleAborted || options.allowStaleOnFetchRejection\n      const noDelete = allowStale || options.noDeleteOnFetchRejection\n      const bf = p as BackgroundFetch<V>\n      if (this.#valList[index as Index] === p) {\n        // if we allow stale on fetch rejections, then we need to ensure that\n        // the stale value is not removed from the cache when the fetch fails.\n        const del = !noDelete || bf.__staleWhileFetching === undefined\n        if (del) {\n          this.#delete(k, 'fetch')\n        } else if (!allowStaleAborted) {\n          // still replace the *promise* with the stale value,\n          // since we are done with the promise at this point.\n          // leave it untouched if we're still waiting for an\n          // aborted background fetch that hasn't yet returned.\n          this.#valList[index as Index] = bf.__staleWhileFetching\n        }\n      }\n      if (allowStale) {\n        if (options.status && bf.__staleWhileFetching !== undefined) {\n          options.status.returnedStale = true\n        }\n        return bf.__staleWhileFetching\n      } else if (bf.__returned === bf) {\n        throw er\n      }\n    }\n\n    const pcall = (\n      res: (v: V | undefined) => void,\n      rej: (e: any) => void\n    ) => {\n      const fmp = this.#fetchMethod?.(k, v, fetchOpts)\n      if (fmp && fmp instanceof Promise) {\n        fmp.then(v => res(v === undefined ? undefined : v), rej)\n      }\n      // ignored, we go until we finish, regardless.\n      // defer check until we are actually aborting,\n      // so fetchMethod can override.\n      ac.signal.addEventListener('abort', () => {\n        if (\n          !options.ignoreFetchAbort ||\n          options.allowStaleOnFetchAbort\n        ) {\n          res(undefined)\n          // when it eventually resolves, update the cache.\n          if (options.allowStaleOnFetchAbort) {\n            res = v => cb(v, true)\n          }\n        }\n      })\n    }\n\n    if (options.status) options.status.fetchDispatched = true\n    const p = new Promise(pcall).then(cb, eb)\n    const bf: BackgroundFetch<V> = Object.assign(p, {\n      __abortController: ac,\n      __staleWhileFetching: v,\n      __returned: undefined,\n    })\n\n    if (index === undefined) {\n      // internal, don't expose status.\n      this.set(k, bf, { ...fetchOpts.options, status: undefined })\n      index = this.#keyMap.get(k)\n    } else {\n      this.#valList[index] = bf\n    }\n    return bf\n  }\n\n  #isBackgroundFetch(p: any): p is BackgroundFetch<V> {\n    if (!this.#hasFetchMethod) return false\n    const b = p as BackgroundFetch<V>\n    return (\n      !!b &&\n      b instanceof Promise &&\n      b.hasOwnProperty('__staleWhileFetching') &&\n      b.__abortController instanceof AC\n    )\n  }\n\n  /**\n   * Make an asynchronous cached fetch using the\n   * {@link LRUCache.OptionsBase.fetchMethod} function.\n   *\n   * If the value is in the cache and not stale, then the returned\n   * Promise resolves to the value.\n   *\n   * If not in the cache, or beyond its TTL staleness, then\n   * `fetchMethod(key, staleValue, { options, signal, context })` is\n   * called, and the value returned will be added to the cache once\n   * resolved.\n   *\n   * If called with `allowStale`, and an asynchronous fetch is\n   * currently in progress to reload a stale value, then the former\n   * stale value will be returned.\n   *\n   * If called with `forceRefresh`, then the cached item will be\n   * re-fetched, even if it is not stale. However, if `allowStale` is also\n   * set, then the old value will still be returned. This is useful\n   * in cases where you want to force a reload of a cached value. If\n   * a background fetch is already in progress, then `forceRefresh`\n   * has no effect.\n   *\n   * If multiple fetches for the same key are issued, then they will all be\n   * coalesced into a single call to fetchMethod.\n   *\n   * Note that this means that handling options such as\n   * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort},\n   * {@link LRUCache.FetchOptions.signal},\n   * and {@link LRUCache.OptionsBase.allowStaleOnFetchRejection} will be\n   * determined by the FIRST fetch() call for a given key.\n   *\n   * This is a known (fixable) shortcoming which will be addresed on when\n   * someone complains about it, as the fix would involve added complexity and\n   * may not be worth the costs for this edge case.\n   *\n   * If {@link LRUCache.OptionsBase.fetchMethod} is not specified, then this is\n   * effectively an alias for `Promise.resolve(cache.get(key))`.\n   *\n   * When the fetch method resolves to a value, if the fetch has not\n   * been aborted due to deletion, eviction, or being overwritten,\n   * then it is added to the cache using the options provided.\n   *\n   * If the key is evicted or deleted before the `fetchMethod`\n   * resolves, then the AbortSignal passed to the `fetchMethod` will\n   * receive an `abort` event, and the promise returned by `fetch()`\n   * will reject with the reason for the abort.\n   *\n   * If a `signal` is passed to the `fetch()` call, then aborting the\n   * signal will abort the fetch and cause the `fetch()` promise to\n   * reject with the reason provided.\n   *\n   * **Setting `context`**\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the {@link LRUCache} constructor, then all\n   * calls to `cache.fetch()` _must_ provide a `context` option. If\n   * set to `undefined` or `void`, then calls to fetch _must not_\n   * provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that\n   * might be relevant in the course of fetching the data. It is only\n   * relevant for the course of a single `fetch()` operation, and\n   * discarded afterwards.\n   *\n   * **Note: `fetch()` calls are inflight-unique**\n   *\n   * If you call `fetch()` multiple times with the same key value,\n   * then every call after the first will resolve on the same\n   * promise<sup>1</sup>,\n   * _even if they have different settings that would otherwise change\n   * the behavior of the fetch_, such as `noDeleteOnFetchRejection`\n   * or `ignoreFetchAbort`.\n   *\n   * In most cases, this is not a problem (in fact, only fetching\n   * something once is what you probably want, if you're caching in\n   * the first place). If you are changing the fetch() options\n   * dramatically between runs, there's a good chance that you might\n   * be trying to fit divergent semantics into a single object, and\n   * would be better off with multiple cache instances.\n   *\n   * **1**: Ie, they're not the \"same Promise\", but they resolve at\n   * the same time, because they're both waiting on the same\n   * underlying fetchMethod response.\n   */\n\n  fetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<undefined | V>\n\n  // this overload not allowed if context is required\n  fetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<undefined | V>\n\n  async fetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<undefined | V> {\n    const {\n      // get options\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      // set options\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      // fetch exclusive options\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      context,\n      forceRefresh = false,\n      status,\n      signal,\n    } = fetchOptions\n\n    if (!this.#hasFetchMethod) {\n      if (status) status.fetch = 'get'\n      return this.get(k, {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        status,\n      })\n    }\n\n    const options = {\n      allowStale,\n      updateAgeOnGet,\n      noDeleteOnStaleGet,\n      ttl,\n      noDisposeOnSet,\n      size,\n      sizeCalculation,\n      noUpdateTTL,\n      noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection,\n      allowStaleOnFetchAbort,\n      ignoreFetchAbort,\n      status,\n      signal,\n    }\n\n    let index = this.#keyMap.get(k)\n    if (index === undefined) {\n      if (status) status.fetch = 'miss'\n      const p = this.#backgroundFetch(k, index, options, context)\n      return (p.__returned = p)\n    } else {\n      // in cache, maybe already fetching\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        const stale =\n          allowStale && v.__staleWhileFetching !== undefined\n        if (status) {\n          status.fetch = 'inflight'\n          if (stale) status.returnedStale = true\n        }\n        return stale ? v.__staleWhileFetching : (v.__returned = v)\n      }\n\n      // if we force a refresh, that means do NOT serve the cached value,\n      // unless we are already in the process of refreshing the cache.\n      const isStale = this.#isStale(index)\n      if (!forceRefresh && !isStale) {\n        if (status) status.fetch = 'hit'\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        if (status) this.#statusTTL(status, index)\n        return v\n      }\n\n      // ok, it is stale or a forced refresh, and not already fetching.\n      // refresh the cache.\n      const p = this.#backgroundFetch(k, index, options, context)\n      const hasStale = p.__staleWhileFetching !== undefined\n      const staleVal = hasStale && allowStale\n      if (status) {\n        status.fetch = isStale ? 'stale' : 'refresh'\n        if (staleVal && isStale) status.returnedStale = true\n      }\n      return staleVal ? p.__staleWhileFetching : (p.__returned = p)\n    }\n  }\n\n  /**\n   * In some cases, `cache.fetch()` may resolve to `undefined`, either because\n   * a {@link LRUCache.OptionsBase#fetchMethod} was not provided (turning\n   * `cache.fetch(k)` into just an async wrapper around `cache.get(k)`) or\n   * because `ignoreFetchAbort` was specified (either to the constructor or\n   * in the {@link LRUCache.FetchOptions}). Also, the\n   * {@link LRUCache.OptionsBase.fetchMethod} may return `undefined` or `void`, making\n   * the test even more complicated.\n   *\n   * Because inferring the cases where `undefined` might be returned are so\n   * cumbersome, but testing for `undefined` can also be annoying, this method\n   * can be used, which will reject if `this.fetch()` resolves to undefined.\n   */\n  forceFetch(\n    k: K,\n    fetchOptions: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : LRUCache.FetchOptionsWithContext<K, V, FC>\n  ): Promise<V>\n  // this overload not allowed if context is required\n  forceFetch(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    fetchOptions?: unknown extends FC\n      ? LRUCache.FetchOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.FetchOptionsNoContext<K, V>\n      : never\n  ): Promise<V>\n  async forceFetch(\n    k: K,\n    fetchOptions: LRUCache.FetchOptions<K, V, FC> = {}\n  ): Promise<V> {\n    const v = await this.fetch(\n      k,\n      fetchOptions as unknown extends FC\n        ? LRUCache.FetchOptions<K, V, FC>\n        : FC extends undefined | void\n        ? LRUCache.FetchOptionsNoContext<K, V>\n        : LRUCache.FetchOptionsWithContext<K, V, FC>\n    )\n    if (v === undefined) throw new Error('fetch() returned undefined')\n    return v\n  }\n\n  /**\n   * If the key is found in the cache, then this is equivalent to\n   * {@link LRUCache#get}. If not, in the cache, then calculate the value using\n   * the {@link LRUCache.OptionsBase.memoMethod}, and add it to the cache.\n   *\n   * If an `FC` type is set to a type other than `unknown`, `void`, or\n   * `undefined` in the LRUCache constructor, then all calls to `cache.memo()`\n   * _must_ provide a `context` option. If set to `undefined` or `void`, then\n   * calls to memo _must not_ provide a `context` option.\n   *\n   * The `context` param allows you to provide arbitrary data that might be\n   * relevant in the course of fetching the data. It is only relevant for the\n   * course of a single `memo()` operation, and discarded afterwards.\n   */\n  memo(\n    k: K,\n    memoOptions: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : LRUCache.MemoOptionsWithContext<K, V, FC>\n  ): V\n  // this overload not allowed if context is required\n  memo(\n    k: unknown extends FC\n      ? K\n      : FC extends undefined | void\n      ? K\n      : never,\n    memoOptions?: unknown extends FC\n      ? LRUCache.MemoOptions<K, V, FC>\n      : FC extends undefined | void\n      ? LRUCache.MemoOptionsNoContext<K, V>\n      : never\n  ): V\n  memo(k: K, memoOptions: LRUCache.MemoOptions<K, V, FC> = {}) {\n    const memoMethod = this.#memoMethod\n    if (!memoMethod) {\n      throw new Error('no memoMethod provided to constructor')\n    }\n    const { context, forceRefresh, ...options } = memoOptions\n    const v = this.get(k, options)\n    if (!forceRefresh && v !== undefined) return v\n    const vv = memoMethod(k, v, {\n      options,\n      context,\n    } as LRUCache.MemoizerOptions<K, V, FC>)\n    this.set(k, vv, options)\n    return vv\n  }\n\n  /**\n   * Return a value from the cache. Will update the recency of the cache\n   * entry found.\n   *\n   * If the key is not found, get() will return `undefined`.\n   */\n  get(k: K, getOptions: LRUCache.GetOptions<K, V, FC> = {}) {\n    const {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status,\n    } = getOptions\n    const index = this.#keyMap.get(k)\n    if (index !== undefined) {\n      const value = this.#valList[index]\n      const fetching = this.#isBackgroundFetch(value)\n      if (status) this.#statusTTL(status, index)\n      if (this.#isStale(index)) {\n        if (status) status.get = 'stale'\n        // delete only if not an in-flight background fetch\n        if (!fetching) {\n          if (!noDeleteOnStaleGet) {\n            this.#delete(k, 'expire')\n          }\n          if (status && allowStale) status.returnedStale = true\n          return allowStale ? value : undefined\n        } else {\n          if (\n            status &&\n            allowStale &&\n            value.__staleWhileFetching !== undefined\n          ) {\n            status.returnedStale = true\n          }\n          return allowStale ? value.__staleWhileFetching : undefined\n        }\n      } else {\n        if (status) status.get = 'hit'\n        // if we're currently fetching it, we don't actually have it yet\n        // it's not stale, which means this isn't a staleWhileRefetching.\n        // If it's not stale, and fetching, AND has a __staleWhileFetching\n        // value, then that means the user fetched with {forceRefresh:true},\n        // so it's safe to return that value.\n        if (fetching) {\n          return value.__staleWhileFetching\n        }\n        this.#moveToTail(index)\n        if (updateAgeOnGet) {\n          this.#updateItemAge(index)\n        }\n        return value\n      }\n    } else if (status) {\n      status.get = 'miss'\n    }\n  }\n\n  #connect(p: Index, n: Index) {\n    this.#prev[n] = p\n    this.#next[p] = n\n  }\n\n  #moveToTail(index: Index): void {\n    // if tail already, nothing to do\n    // if head, move head to next[index]\n    // else\n    //   move next[prev[index]] to next[index] (head has no prev)\n    //   move prev[next[index]] to prev[index]\n    // prev[index] = tail\n    // next[tail] = index\n    // tail = index\n    if (index !== this.#tail) {\n      if (index === this.#head) {\n        this.#head = this.#next[index] as Index\n      } else {\n        this.#connect(\n          this.#prev[index] as Index,\n          this.#next[index] as Index\n        )\n      }\n      this.#connect(this.#tail, index)\n      this.#tail = index\n    }\n  }\n\n  /**\n   * Deletes a key out of the cache.\n   *\n   * Returns true if the key was deleted, false otherwise.\n   */\n  delete(k: K) {\n    return this.#delete(k, 'delete')\n  }\n\n  #delete(k: K, reason: LRUCache.DisposeReason) {\n    let deleted = false\n    if (this.#size !== 0) {\n      const index = this.#keyMap.get(k)\n      if (index !== undefined) {\n        deleted = true\n        if (this.#size === 1) {\n          this.#clear(reason)\n        } else {\n          this.#removeItemSize(index)\n          const v = this.#valList[index]\n          if (this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('deleted'))\n          } else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n              this.#dispose?.(v as V, k, reason)\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([v as V, k, reason])\n            }\n          }\n          this.#keyMap.delete(k)\n          this.#keyList[index] = undefined\n          this.#valList[index] = undefined\n          if (index === this.#tail) {\n            this.#tail = this.#prev[index] as Index\n          } else if (index === this.#head) {\n            this.#head = this.#next[index] as Index\n          } else {\n            const pi = this.#prev[index] as number\n            this.#next[pi] = this.#next[index] as number\n            const ni = this.#next[index] as number\n            this.#prev[ni] = this.#prev[index] as number\n          }\n          this.#size--\n          this.#free.push(index)\n        }\n      }\n    }\n    if (this.#hasDisposeAfter && this.#disposed?.length) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n    return deleted\n  }\n\n  /**\n   * Clear the cache entirely, throwing away all values.\n   */\n  clear() {\n    return this.#clear('delete')\n  }\n  #clear(reason: LRUCache.DisposeReason) {\n    for (const index of this.#rindexes({ allowStale: true })) {\n      const v = this.#valList[index]\n      if (this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error('deleted'))\n      } else {\n        const k = this.#keyList[index]\n        if (this.#hasDispose) {\n          this.#dispose?.(v as V, k as K, reason)\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v as V, k as K, reason])\n        }\n      }\n    }\n\n    this.#keyMap.clear()\n    this.#valList.fill(undefined)\n    this.#keyList.fill(undefined)\n    if (this.#ttls && this.#starts) {\n      this.#ttls.fill(0)\n      this.#starts.fill(0)\n    }\n    if (this.#sizes) {\n      this.#sizes.fill(0)\n    }\n    this.#head = 0 as Index\n    this.#tail = 0 as Index\n    this.#free.length = 0\n    this.#calculatedSize = 0\n    this.#size = 0\n    if (this.#hasDisposeAfter && this.#disposed) {\n      const dt = this.#disposed\n      let task: DisposeTask<K, V> | undefined\n      while ((task = dt?.shift())) {\n        this.#disposeAfter?.(...task)\n      }\n    }\n  }\n}\n", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { randomArrayItem } from \"./random-generator.js\";\nexport const addTreeDataOptionsToDemoData = (data, options = {}) => {\n  const {\n    averageChildren = 2,\n    maxDepth = 1,\n    groupingField\n  } = options;\n  const hasTreeData = maxDepth > 1 && groupingField != null;\n  if (!hasTreeData) {\n    return data;\n  }\n  if (data.rows.length > 1000) {\n    throw new Error('MUI X: useDemoData tree data mode only works up to 1000 rows.');\n  }\n  const rowsByTreeDepth = {};\n  const rowsCount = data.rows.length;\n  const groupingCol = data.columns.find(col => col.field === options.groupingField);\n  if (!groupingCol) {\n    throw new Error('MUI X: The tree data grouping field does not exist.');\n  }\n  data.initialState.columns.columnVisibilityModel[groupingField] = false;\n  for (let i = 0; i < rowsCount; i += 1) {\n    const row = data.rows[i];\n    const currentChunk = Math.floor(i * (averageChildren ** maxDepth - 1) / rowsCount) + 1;\n    const currentDepth = Math.floor(Math.log(currentChunk) / Math.log(averageChildren));\n    if (!rowsByTreeDepth[currentDepth]) {\n      rowsByTreeDepth[currentDepth] = {\n        rows: {},\n        rowIndexes: []\n      };\n    }\n    rowsByTreeDepth[currentDepth].rows[i] = {\n      value: row,\n      parentIndex: null\n    };\n    rowsByTreeDepth[currentDepth].rowIndexes.push(i);\n  }\n  Object.entries(rowsByTreeDepth).forEach(([depthStr, {\n    rows\n  }]) => {\n    const depth = Number(depthStr);\n    Object.values(rows).forEach(row => {\n      const path = [];\n      let previousRow = null;\n      for (let k = depth; k >= 0; k -= 1) {\n        let rowTemp;\n        if (k === depth) {\n          if (depth > 0) {\n            row.parentIndex = Number(randomArrayItem(rowsByTreeDepth[depth - 1].rowIndexes));\n          }\n          rowTemp = row;\n        } else {\n          rowTemp = rowsByTreeDepth[k].rows[previousRow.parentIndex];\n        }\n        path.unshift(rowTemp.value[groupingField]);\n        previousRow = rowTemp;\n      }\n      row.value.path = path;\n    });\n  });\n  return _extends({}, data, {\n    groupingColDef: {\n      headerName: groupingCol.headerName ?? groupingCol.field,\n      width: 250\n    },\n    getTreeDataPath: row => row.path,\n    treeData: true\n  });\n};", "import * as React from 'react';\nimport { getBasicGridData } from \"../services/index.js\";\nexport const useBasicDemoData = (nbRows, nbCols) => {\n  return React.useMemo(() => getBasicGridData(nbRows, nbCols), [nbRows, nbCols]);\n};", "const currencyFormatter = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n});\nconst COLUMNS = [{\n  field: 'title',\n  headerName: 'Title',\n  width: 200,\n  groupable: false\n}, {\n  field: 'gross',\n  headerName: 'Gross',\n  type: 'number',\n  width: 150,\n  groupable: false,\n  valueFormatter: value => {\n    if (!value) {\n      return '';\n    }\n    return currencyFormatter.format(value);\n  }\n}, {\n  field: 'company',\n  headerName: 'Company',\n  width: 200\n}, {\n  field: 'director',\n  headerName: 'Director',\n  width: 200\n}, {\n  field: 'year',\n  headerName: 'Year',\n  type: 'number',\n  valueFormatter: value => typeof value === 'number' ? `${value}` : '',\n  availableAggregationFunctions: ['max', 'min']\n}, {\n  field: 'cinematicUniverse',\n  headerName: 'Cinematic Universe',\n  width: 220\n}];\nconst ROWS = [{\n  id: 0,\n  title: 'Avatar',\n  gross: 2847246203,\n  budget: 237000000,\n  director: 'James Cameron',\n  company: '20th Century Fox',\n  year: 2009,\n  imdbRating: 7.9,\n  composer: {\n    name: 'James Horner'\n  }\n}, {\n  id: 1,\n  title: 'Avengers: Endgame',\n  gross: 2797501328,\n  budget: 356000000,\n  director: 'Anthony & Joe Russo',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 8.4,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Alan Silvestri'\n  }\n}, {\n  id: 2,\n  title: 'Titanic',\n  gross: 2187425379,\n  budget: 200000000,\n  director: 'James Cameron',\n  company: '20th Century Fox',\n  year: 1997,\n  imdbRating: 7.9,\n  composer: {\n    name: 'James Horner'\n  }\n}, {\n  id: 3,\n  title: 'Star Wars: The Force Awakens',\n  gross: 2068223624,\n  budget: 306000000,\n  director: 'J. J. Abrams',\n  company: 'Disney Studios',\n  year: 2015,\n  imdbRating: 7.9,\n  cinematicUniverse: 'Star Wars',\n  composer: {\n    name: 'John Williams'\n  }\n}, {\n  id: 4,\n  title: 'Avengers: Infinity War',\n  gross: 2048359754,\n  budget: 321000000,\n  director: 'Anthony & Joe Russo',\n  company: 'Disney Studios',\n  year: 2018,\n  imdbRating: 8.5,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Alan Silvestri'\n  }\n}, {\n  id: 5,\n  title: 'Spider-Man: No Way Home',\n  gross: 1892768346,\n  budget: 200000000,\n  director: 'Jon Watts',\n  company: 'Disney Studios',\n  year: 2021,\n  imdbRating: 8.3,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 6,\n  title: 'Jurassic World',\n  gross: 1671713208,\n  budget: 150000000,\n  director: 'Colin Trevorrow',\n  company: 'Universal Pictures',\n  year: 2015,\n  imdbRating: 7.0,\n  cinematicUniverse: 'Jurassic Park',\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 7,\n  title: 'The Lion King',\n  gross: 1656943394,\n  budget: 260000000,\n  director: 'Jon Favreau',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.9,\n  composer: {\n    name: 'Hans Zimmer'\n  }\n}, {\n  id: 8,\n  title: 'The Avengers',\n  gross: 1518812988,\n  budget: 220000000,\n  director: 'Joss Whedon',\n  company: 'Disney Studios',\n  year: 2012,\n  imdbRating: 8.1,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Alan Silvestri'\n  }\n}, {\n  id: 9,\n  title: 'Furious 7',\n  gross: 1516045911,\n  budget: 190000000,\n  director: 'James Wan',\n  company: 'Universal Pictures',\n  year: 2015,\n  imdbRating: 7.2,\n  cinematicUniverse: 'Fast & Furious',\n  composer: {\n    name: 'Brian Tyler'\n  }\n}, {\n  id: 10,\n  title: 'Frozen II',\n  gross: 1450026933,\n  budget: 150000000,\n  director: 'Chris Buck & Jennifer Lee',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.8,\n  cinematicUniverse: 'Frozen',\n  composer: {\n    name: 'Christophe Beck'\n  }\n}, {\n  id: 11,\n  title: 'Avengers: Age of Ultron',\n  gross: 1402804868,\n  budget: 280000000,\n  director: 'Joss Whedon',\n  company: 'Disney Studios',\n  year: 2015,\n  imdbRating: 7.3,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Danny Elfman'\n  }\n}, {\n  id: 12,\n  title: 'Black Panther',\n  gross: 1347280838,\n  budget: 200000000,\n  director: 'Ryan Coogler',\n  company: 'Disney Studios',\n  year: 2018,\n  imdbRating: 7.3,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Ludwig Göransson'\n  }\n}, {\n  id: 13,\n  title: 'Harry Potter and the Deathly Hallows – Part 2',\n  gross: 1342025430,\n  budget: 125000000,\n  director: 'David Yates',\n  company: 'Warner Bros. Pictures',\n  year: 2011,\n  imdbRating: 8.2,\n  cinematicUniverse: 'Harry Potter',\n  composer: {\n    name: 'Alexandre Desplat'\n  }\n}, {\n  id: 14,\n  title: 'Star Wars: The Last Jedi',\n  gross: 1332539889,\n  budget: 317000000,\n  director: 'Rian Johnson',\n  company: 'Disney Studios',\n  year: 2017,\n  imdbRating: 6.9,\n  cinematicUniverse: 'Star Wars',\n  composer: {\n    name: 'John Williams'\n  }\n}, {\n  id: 15,\n  title: 'Jurassic World: Fallen Kingdom',\n  gross: 1309484461,\n  budget: 170000000,\n  director: 'J. A. Bayona',\n  company: 'Universal Pictures',\n  year: 2018,\n  cinematicUniverse: 'Jurassic Park',\n  imdbRating: 6.2,\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 16,\n  title: 'Frozen',\n  gross: 1290000000,\n  budget: 150000000,\n  director: 'Chris Buck & Jennifer Lee',\n  company: 'Disney Studios',\n  year: 2013,\n  imdbRating: 7.5,\n  cinematicUniverse: 'Frozen',\n  composer: {\n    name: 'Christophe Beck'\n  }\n}, {\n  id: 17,\n  title: 'Beauty and the Beast',\n  gross: 1263521136,\n  budget: 160000000,\n  director: 'Bill Condon',\n  company: 'Disney Studios',\n  year: 2017,\n  imdbRating: 7.1,\n  composer: {\n    name: 'Alan Menken'\n  }\n}, {\n  id: 18,\n  title: 'Incredibles 2',\n  gross: 1242805359,\n  budget: 200000000,\n  director: 'Brad Bird',\n  company: 'Disney Studios',\n  year: 2018,\n  imdbRating: 7.6,\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 19,\n  title: 'The Fate of the Furious',\n  gross: 1238764765,\n  budget: 250000000,\n  director: 'F. Gary Gray',\n  company: 'Universal Pictures',\n  year: 2017,\n  imdbRating: 6.6,\n  cinematicUniverse: 'Fast & Furious',\n  composer: {\n    name: 'Brian Tyler'\n  }\n}, {\n  id: 20,\n  title: 'Iron Man 3',\n  gross: 1214811252,\n  budget: 200000000,\n  director: 'Shane Black',\n  company: 'Disney Studios',\n  year: 2013,\n  imdbRating: 7.2,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Brian Tyler'\n  }\n}, {\n  id: 21,\n  title: 'Minions',\n  gross: 1159398397,\n  budget: 74000000,\n  director: 'Pierre Coffin & Kyle Balda',\n  company: 'Universal Pictures',\n  year: 2015,\n  imdbRating: 6.4,\n  composer: {\n    name: 'Heitor Pereira'\n  }\n}, {\n  id: 22,\n  title: 'Captain America: Civil War',\n  gross: 1153329473,\n  budget: 250000000,\n  director: 'Anthony & Joe Russo',\n  company: 'Disney Studios',\n  year: 2016,\n  imdbRating: 7.8,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Henry Jackman'\n  }\n}, {\n  id: 23,\n  title: 'Aquaman',\n  gross: 1148485886,\n  budget: 160000000,\n  director: 'James Wan',\n  company: 'Warner Bros. Pictures',\n  year: 2018,\n  imdbRating: 6.8,\n  cinematicUniverse: 'DC Cinematic Universe',\n  composer: {\n    name: 'Rupert Gregson-Williams'\n  }\n}, {\n  id: 24,\n  title: 'The Lord of the Rings: The Return of the King',\n  gross: 1146030912,\n  budget: 94000000,\n  director: 'Peter Jackson',\n  company: 'New Line Cinema',\n  year: 2003,\n  imdbRating: 9.0,\n  cinematicUniverse: 'The Lord of the Rings',\n  composer: {\n    name: 'Howard Shore'\n  }\n}, {\n  id: 25,\n  title: 'Spider-Man: Far From Home',\n  gross: 1131927996,\n  budget: 160000000,\n  director: 'Jon Watts',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 7.4,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Michael Giacchino'\n  }\n}, {\n  id: 26,\n  title: 'Captain Marvel',\n  gross: 1128274794,\n  budget: 152000000,\n  director: 'Anna Boden & Ryan Fleck',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.8,\n  cinematicUniverse: 'Marvel Cinematic Universe',\n  composer: {\n    name: 'Pinar Toprak'\n  }\n}, {\n  id: 27,\n  title: 'Transformers: Dark of the Moon',\n  gross: 1123794079,\n  budget: 195000000,\n  director: 'Michael Bay',\n  company: 'Paramount Pictures',\n  year: 2011,\n  imdbRating: 6.2,\n  cinematicUniverse: 'Transformers',\n  composer: {\n    name: 'Steve Jablonsky'\n  }\n}, {\n  id: 28,\n  title: 'Skyfall',\n  gross: 1108561013,\n  budget: 200000000,\n  director: 'Sam Mendes',\n  company: '20th Century Fox',\n  year: 2012,\n  imdbRating: 7.8,\n  cinematicUniverse: 'James Bond',\n  composer: {\n    name: 'Thomas Newman'\n  }\n}, {\n  id: 29,\n  title: 'Transformers: Age of Extinction',\n  gross: 1104054072,\n  budget: 210000000,\n  director: 'Michael Bay',\n  company: 'Paramount Pictures',\n  year: 2014,\n  imdbRating: 5.6,\n  cinematicUniverse: 'Transformers',\n  composer: {\n    name: 'Steve Jablonsky'\n  }\n}, {\n  id: 30,\n  title: 'The Dark Knight Rises',\n  gross: 1081142612,\n  budget: 250000000,\n  director: 'Christopher Nolan',\n  company: 'Warner Bros. Pictures',\n  year: 2012,\n  imdbRating: 8.4,\n  cinematicUniverse: 'Batman',\n  composer: {\n    name: 'Hans Zimmer'\n  }\n}, {\n  id: 31,\n  title: 'Joker',\n  gross: 1074251311,\n  budget: 55000000,\n  director: 'Todd Phillips',\n  company: 'Warner Bros. Pictures',\n  year: 2019,\n  imdbRating: 8.4,\n  cinematicUniverse: 'Batman',\n  composer: {\n    name: 'Hildur Guðnadóttir'\n  }\n}, {\n  id: 32,\n  title: 'Star Wars: The Rise of Skywalker',\n  gross: 1074144248,\n  budget: 275000000,\n  director: 'J. J. Abrams',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 6.5,\n  cinematicUniverse: 'Star Wars',\n  composer: {\n    name: 'John Williams'\n  }\n}, {\n  id: 33,\n  title: 'Toy Story 4',\n  gross: 1073394593,\n  budget: 200000000,\n  director: 'Josh Cooley',\n  company: 'Disney Studios',\n  year: 2019,\n  imdbRating: 7.7,\n  cinematicUniverse: 'Toy Story',\n  composer: {\n    name: 'Randy Newman'\n  }\n}, {\n  id: 34,\n  title: 'Toy Story 3',\n  gross: 1066969703,\n  budget: 200000000,\n  director: 'Lee Unkrich',\n  company: 'Disney Studios',\n  year: 2010,\n  imdbRating: 8.3,\n  cinematicUniverse: 'Toy Story',\n  composer: {\n    name: 'Randy Newman'\n  }\n}];\nexport const getMovieColumns = () => COLUMNS;\nexport const getMovieRows = () => ROWS;\nexport const useMovieData = () => {\n  return {\n    rows: ROWS,\n    columns: COLUMNS\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { getGridDefaultColumnTypes } from '@mui/x-data-grid-pro';\nimport { isDeepEqual } from '@mui/x-data-grid/internals';\nimport { useDemoData, getColumnsFromOptions, getInitialState } from \"./useDemoData.js\";\nimport { DEFAULT_SERVER_OPTIONS, loadServerRows } from \"./serverUtils.js\";\nconst DEFAULT_DATASET_OPTIONS = {\n  dataSet: 'Commodity',\n  rowLength: 100,\n  maxColumns: 6\n};\nexport const createFakeServer = (dataSetOptions, serverOptions) => {\n  const dataSetOptionsWithDefault = _extends({}, DEFAULT_DATASET_OPTIONS, dataSetOptions);\n  const serverOptionsWithDefault = _extends({}, DEFAULT_SERVER_OPTIONS, serverOptions);\n  const columns = getColumnsFromOptions(dataSetOptionsWithDefault);\n  const initialState = getInitialState(dataSetOptionsWithDefault, columns);\n  const defaultColDef = getGridDefaultColumnTypes();\n  const columnsWithDefaultColDef = columns.map(column => _extends({}, defaultColDef[column.type || 'string'], column));\n  const useQuery = queryOptions => {\n    const {\n      data: {\n        rows\n      },\n      loading: dataGenerationIsLoading\n    } = useDemoData(dataSetOptionsWithDefault);\n    const queryOptionsRef = React.useRef(queryOptions);\n    const [response, setResponse] = React.useState({\n      pageInfo: {},\n      rows: []\n    });\n    const [isLoading, setIsLoading] = React.useState(dataGenerationIsLoading);\n    React.useEffect(() => {\n      if (dataGenerationIsLoading) {\n        // dataset is not ready\n        return () => {};\n      }\n      queryOptionsRef.current = queryOptions;\n      let active = true;\n      setIsLoading(true);\n      setResponse(prev => Object.keys(prev.pageInfo).length === 0 ? prev : _extends({}, prev, {\n        pageInfo: {}\n      }));\n      (async function fetchData() {\n        const {\n          returnedRows,\n          nextCursor,\n          totalRowCount,\n          hasNextPage\n        } = await loadServerRows(rows, queryOptions, serverOptionsWithDefault, columnsWithDefaultColDef);\n        if (!active) {\n          return;\n        }\n        const newRep = {\n          rows: returnedRows,\n          pageInfo: {\n            totalRowCount,\n            nextCursor,\n            hasNextPage,\n            pageSize: returnedRows.length\n          }\n        };\n        setResponse(prev => isDeepEqual(prev, newRep) ? prev : newRep);\n        setIsLoading(false);\n      })();\n      return () => {\n        active = false;\n      };\n    }, [dataGenerationIsLoading, queryOptions, rows]);\n\n    // We use queryOptions pointer to be sure that isLoading===true as soon as the options change\n    const effectShouldStart = queryOptionsRef.current !== queryOptions;\n    return _extends({\n      isLoading: isLoading || effectShouldStart\n    }, response);\n  };\n  return {\n    columns,\n    columnsWithDefaultColDef,\n    initialState,\n    useQuery\n  };\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '@mui/x-data-grid-pro';\nimport { randomInt } from \"../services/random-generator.js\";\nexport const disableDelay = typeof DISABLE_CHANCE_RANDOM !== 'undefined' && DISABLE_CHANCE_RANDOM;\nexport const DEFAULT_SERVER_OPTIONS = {\n  minDelay: disableDelay ? 0 : 100,\n  maxDelay: disableDelay ? 0 : 300,\n  useCursorPagination: true\n};\nconst apiRef = {};\nconst simplifiedValueGetter = (field, colDef) => row => {\n  return colDef.valueGetter?.(row[row.id], row, colDef, apiRef) || row[field];\n};\nconst getRowComparator = (sortModel, columnsWithDefaultColDef) => {\n  if (!sortModel) {\n    const comparator = () => 0;\n    return comparator;\n  }\n  const sortOperators = sortModel.map(sortItem => {\n    const columnField = sortItem.field;\n    const colDef = columnsWithDefaultColDef.find(({\n      field\n    }) => field === columnField);\n    return _extends({}, sortItem, {\n      valueGetter: simplifiedValueGetter(columnField, colDef),\n      sortComparator: colDef.sortComparator\n    });\n  });\n  const comparator = (row1, row2) => sortOperators.reduce((acc, {\n    valueGetter,\n    sort,\n    sortComparator\n  }) => {\n    if (acc !== 0) {\n      return acc;\n    }\n    const v1 = valueGetter(row1);\n    const v2 = valueGetter(row2);\n    return sort === 'desc' ? -1 * sortComparator(v1, v2) : sortComparator(v1, v2);\n  }, 0);\n  return comparator;\n};\nconst buildQuickFilterApplier = (filterModel, columns) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const appliersPerField = [];\n  const stubApiRef = {\n    current: {\n      getRowFormattedValue: (row, c) => {\n        const field = c.field;\n        return row[field];\n      }\n    }\n  };\n  columns.forEach(column => {\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          return {\n            fn: getApplyQuickFilterFn(quickFilterValue, column, stubApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        const value = row[field];\n        if (applier.fn === null) {\n          continue;\n        }\n        const isMatching = applier.fn(value, row, column, stubApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-labels */\n\n    return result;\n  };\n};\nconst getQuicklyFilteredRows = (rows, filterModel, columnsWithDefaultColDef) => {\n  if (filterModel === undefined || filterModel.quickFilterValues?.length === 0) {\n    return rows;\n  }\n  const isRowMatchingQuickFilter = buildQuickFilterApplier(filterModel, columnsWithDefaultColDef);\n  if (isRowMatchingQuickFilter) {\n    return rows.filter(row => {\n      const result = isRowMatchingQuickFilter(row);\n      return filterModel.quickFilterLogicOperator === GridLogicOperator.And ? Object.values(result).every(Boolean) : Object.values(result).some(Boolean);\n    });\n  }\n  return rows;\n};\nconst getFilteredRows = (rows, filterModel, columnsWithDefaultColDef) => {\n  if (filterModel === undefined || filterModel.items.length === 0) {\n    return rows;\n  }\n  const valueGetters = filterModel.items.map(({\n    field\n  }) => simplifiedValueGetter(field, columnsWithDefaultColDef.find(column => column.field === field)));\n  const filterFunctions = filterModel.items.map(filterItem => {\n    const {\n      field,\n      operator\n    } = filterItem;\n    const colDef = columnsWithDefaultColDef.find(column => column.field === field);\n    if (!colDef.filterOperators) {\n      throw new Error(`MUI: No filter operator found for column '${field}'.`);\n    }\n    const filterOperator = colDef.filterOperators.find(({\n      value\n    }) => operator === value);\n    let parsedValue = filterItem.value;\n    if (colDef.valueParser) {\n      const parser = colDef.valueParser;\n      parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, {}, colDef, apiRef)) : parser(filterItem.value, {}, colDef, apiRef);\n    }\n    return filterOperator.getApplyFilterFn({\n      filterItem,\n      value: parsedValue\n    }, colDef);\n  });\n  if (filterModel.logicOperator === GridLogicOperator.Or) {\n    return rows.filter(row => filterModel.items.some((_, index) => {\n      const value = valueGetters[index](row);\n      return filterFunctions[index] === null ? true : filterFunctions[index](value);\n    }));\n  }\n  return rows.filter(row => filterModel.items.every((_, index) => {\n    const value = valueGetters[index](row);\n    return filterFunctions[index] === null ? true : filterFunctions[index](value);\n  }));\n};\n\n/**\n * Simulates server data loading\n */\nexport const loadServerRows = (rows, queryOptions, serverOptions, columnsWithDefaultColDef) => {\n  const {\n    minDelay = 100,\n    maxDelay = 300,\n    useCursorPagination\n  } = serverOptions;\n  if (maxDelay < minDelay) {\n    throw new Error('serverOptions.minDelay is larger than serverOptions.maxDelay ');\n  }\n  const delay = randomInt(minDelay, maxDelay);\n  const {\n    cursor,\n    page = 0,\n    pageSize\n  } = queryOptions;\n  let nextCursor;\n  let firstRowIndex;\n  let lastRowIndex;\n  let filteredRows = getFilteredRows(rows, queryOptions.filterModel, columnsWithDefaultColDef);\n  const rowComparator = getRowComparator(queryOptions.sortModel, columnsWithDefaultColDef);\n  filteredRows = [...filteredRows].sort(rowComparator);\n  const totalRowCount = filteredRows.length;\n  if (!pageSize) {\n    firstRowIndex = 0;\n    lastRowIndex = filteredRows.length;\n  } else if (useCursorPagination) {\n    firstRowIndex = cursor ? filteredRows.findIndex(({\n      id\n    }) => id === cursor) : 0;\n    firstRowIndex = Math.max(firstRowIndex, 0); // if cursor not found return 0\n    lastRowIndex = firstRowIndex + pageSize;\n    nextCursor = lastRowIndex >= filteredRows.length ? undefined : filteredRows[lastRowIndex].id;\n  } else {\n    firstRowIndex = page * pageSize;\n    lastRowIndex = (page + 1) * pageSize;\n  }\n  const hasNextPage = lastRowIndex < filteredRows.length - 1;\n  const response = {\n    returnedRows: filteredRows.slice(firstRowIndex, lastRowIndex),\n    hasNextPage,\n    nextCursor,\n    totalRowCount\n  };\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(response);\n    }, delay); // simulate network latency\n  });\n};\nconst findTreeDataRowChildren = (allRows, parentPath, pathKey = 'path', depth = 1, rowQualifier) => {\n  const parentDepth = parentPath.length;\n  const children = [];\n  for (let i = 0; i < allRows.length; i += 1) {\n    const row = allRows[i];\n    const rowPath = row[pathKey];\n    if (!rowPath) {\n      continue;\n    }\n    if ((depth < 0 && rowPath.length > parentDepth || rowPath.length === parentDepth + depth) && parentPath.every((value, index) => value === rowPath[index])) {\n      if (!rowQualifier || rowQualifier(row)) {\n        children.push(row);\n      }\n    }\n  }\n  return children;\n};\nconst getTreeDataFilteredRows = (rows, filterModel, columnsWithDefaultColDef) => {\n  let filteredRows = [...rows];\n  if (filterModel && filterModel.quickFilterValues?.length > 0) {\n    filteredRows = getQuicklyFilteredRows(rows, filterModel, columnsWithDefaultColDef);\n  }\n  if ((filterModel?.items.length ?? 0) > 0) {\n    filteredRows = getFilteredRows(filteredRows, filterModel, columnsWithDefaultColDef);\n  }\n  if (filteredRows.length === rows.length || filteredRows.length === 0) {\n    return filteredRows;\n  }\n  const pathsToIndexesMap = new Map();\n  rows.forEach((row, index) => {\n    pathsToIndexesMap.set(row.path.join(','), index);\n  });\n  const includedPaths = new Set();\n  filteredRows.forEach(row => {\n    includedPaths.add(row.path.join(','));\n  });\n  const missingChildren = [];\n\n  // include missing children of filtered rows\n  filteredRows.forEach(row => {\n    const path = row.path;\n    if (path) {\n      const children = findTreeDataRowChildren(rows, path, 'path', -1);\n      children.forEach(child => {\n        const subPath = child.path.join(',');\n        if (!includedPaths.has(subPath)) {\n          missingChildren.push(child);\n        }\n      });\n    }\n  });\n  filteredRows = missingChildren.concat(filteredRows);\n  const missingParents = [];\n\n  // include missing parents of filtered rows\n  filteredRows.forEach(row => {\n    const path = row.path;\n    if (path) {\n      includedPaths.add(path.join(','));\n      for (let i = 0; i < path.length - 1; i += 1) {\n        const subPath = path.slice(0, i + 1).join(',');\n        if (!includedPaths.has(subPath)) {\n          const index = pathsToIndexesMap.get(subPath);\n          if (index !== undefined) {\n            missingParents.push(rows[index]);\n            includedPaths.add(subPath);\n          }\n        }\n      }\n    }\n  });\n  return missingParents.concat(filteredRows);\n};\n\n/**\n * Simulates server data for tree-data feature\n */\nexport const processTreeDataRows = (rows, queryOptions, serverOptions, columnsWithDefaultColDef) => {\n  const {\n    minDelay = 100,\n    maxDelay = 300\n  } = serverOptions;\n  const pathKey = 'path';\n  // TODO: Support filtering and cursor based pagination\n  if (maxDelay < minDelay) {\n    throw new Error('serverOptions.minDelay is larger than serverOptions.maxDelay ');\n  }\n  if (queryOptions.groupKeys == null) {\n    throw new Error('serverOptions.groupKeys must be defined to compute tree data ');\n  }\n  const delay = randomInt(minDelay, maxDelay);\n\n  // apply plain filtering\n  const filteredRows = getTreeDataFilteredRows(rows, queryOptions.filterModel, columnsWithDefaultColDef);\n\n  // get root row count\n  const rootRowCount = findTreeDataRowChildren(filteredRows, []).length;\n\n  // find direct children referring to the `parentPath`\n  const childRows = findTreeDataRowChildren(filteredRows, queryOptions.groupKeys);\n  let childRowsWithDescendantCounts = childRows.map(row => {\n    const descendants = findTreeDataRowChildren(filteredRows, row[pathKey], pathKey, -1);\n    const descendantCount = descendants.length;\n    return _extends({}, row, {\n      descendantCount\n    });\n  });\n  if (queryOptions.sortModel) {\n    // apply sorting\n    const rowComparator = getRowComparator(queryOptions.sortModel, columnsWithDefaultColDef);\n    childRowsWithDescendantCounts = [...childRowsWithDescendantCounts].sort(rowComparator);\n  }\n  if (queryOptions.paginationModel && queryOptions.groupKeys.length === 0) {\n    // Only paginate root rows, grid should refetch root rows when `paginationModel` updates\n    const {\n      pageSize,\n      page\n    } = queryOptions.paginationModel;\n    if (pageSize < childRowsWithDescendantCounts.length) {\n      childRowsWithDescendantCounts = childRowsWithDescendantCounts.slice(page * pageSize, (page + 1) * pageSize);\n    }\n  }\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        rows: childRowsWithDescendantCounts,\n        rootRowCount\n      });\n    }, delay); // simulate network latency\n  });\n};\n\n/**\n * Simulates server data for row grouping feature\n */\nexport const processRowGroupingRows = (rows, queryOptions, serverOptions, columnsWithDefaultColDef) => {\n  const {\n    minDelay = 100,\n    maxDelay = 300\n  } = serverOptions;\n  const pathKey = 'path';\n  if (maxDelay < minDelay) {\n    throw new Error('serverOptions.minDelay is larger than serverOptions.maxDelay ');\n  }\n  if (queryOptions.groupKeys == null) {\n    throw new Error('serverOptions.groupKeys must be defined to compute row grouping data');\n  }\n  if (queryOptions.groupFields == null) {\n    throw new Error('serverOptions.groupFields must be defined to compute row grouping data');\n  }\n  const delay = randomInt(minDelay, maxDelay);\n  const pathsToAutogenerate = new Set();\n  let rowsWithPaths = rows;\n  const rowsWithMissingGroups = [];\n\n  // add paths and generate parent rows based on `groupFields`\n  const groupFields = queryOptions.groupFields;\n  if (groupFields.length > 0) {\n    rowsWithPaths = rows.reduce((acc, row) => {\n      const partialPath = groupFields.map(field => String(row[field]));\n      for (let index = 0; index < partialPath.length; index += 1) {\n        const value = partialPath[index];\n        if (value === undefined) {\n          if (index === 0) {\n            rowsWithMissingGroups.push(_extends({}, row, {\n              group: false\n            }));\n          }\n          return acc;\n        }\n        const parentPath = partialPath.slice(0, index + 1);\n        const strigifiedPath = parentPath.join(',');\n        if (!pathsToAutogenerate.has(strigifiedPath)) {\n          pathsToAutogenerate.add(strigifiedPath);\n        }\n      }\n      acc.push(_extends({}, row, {\n        path: [...partialPath, '']\n      }));\n      return acc;\n    }, []);\n  } else {\n    rowsWithPaths = rows.map(row => _extends({}, row, {\n      path: ['']\n    }));\n  }\n  const autogeneratedRows = Array.from(pathsToAutogenerate).map(path => {\n    const pathArray = path.split(',');\n    return {\n      id: `auto-generated-parent-${pathArray.join('-')}`,\n      path: pathArray.slice(0, pathArray.length),\n      group: pathArray.slice(-1)[0]\n    };\n  });\n\n  // apply plain filtering\n  const filteredRows = getTreeDataFilteredRows([...autogeneratedRows, ...rowsWithPaths, ...rowsWithMissingGroups], queryOptions.filterModel, columnsWithDefaultColDef);\n\n  // get root row count\n  const rootRows = findTreeDataRowChildren(filteredRows, []);\n  const rootRowCount = rootRows.length;\n  let filteredRowsWithMissingGroups = [];\n  let childRows = rootRows;\n  if (queryOptions.groupKeys.length === 0) {\n    filteredRowsWithMissingGroups = filteredRows.filter(({\n      group\n    }) => group === false);\n  } else {\n    childRows = findTreeDataRowChildren(filteredRows, queryOptions.groupKeys);\n  }\n  let childRowsWithDescendantCounts = childRows.map(row => {\n    const descendants = findTreeDataRowChildren(filteredRows, row[pathKey], pathKey, -1, ({\n      id\n    }) => typeof id !== 'string' || !id.startsWith('auto-generated-parent-'));\n    const descendantCount = descendants.length;\n    return _extends({}, row, {\n      descendantCount\n    });\n  });\n  if (queryOptions.sortModel) {\n    const rowComparator = getRowComparator(queryOptions.sortModel, columnsWithDefaultColDef);\n    const sortedMissingGroups = [...filteredRowsWithMissingGroups].sort(rowComparator);\n    const sortedChildRows = [...childRowsWithDescendantCounts].sort(rowComparator);\n    childRowsWithDescendantCounts = [...sortedMissingGroups, ...sortedChildRows];\n  }\n  if (queryOptions.paginationModel && queryOptions.groupKeys.length === 0) {\n    // Only paginate root rows, grid should refetch root rows when `paginationModel` updates\n    const {\n      pageSize,\n      page\n    } = queryOptions.paginationModel;\n    if (pageSize < childRowsWithDescendantCounts.length) {\n      childRowsWithDescendantCounts = childRowsWithDescendantCounts.slice(page * pageSize, (page + 1) * pageSize);\n    }\n  }\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({\n        rows: childRowsWithDescendantCounts,\n        rootRowCount\n      });\n    }, delay); // simulate network latency\n  });\n};", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { LRUCache } from 'lru-cache';\nimport { getGridDefaultColumnTypes } from '@mui/x-data-grid-pro';\nimport { extrapolateSeed, deepFreeze } from \"./useDemoData.js\";\nimport { getCommodityColumns } from \"../columns/commodities.columns.js\";\nimport { getEmployeeColumns } from \"../columns/employees.columns.js\";\nimport { getRealGridData } from \"../services/real-data-service.js\";\nimport { addTreeDataOptionsToDemoData } from \"../services/tree-data-generator.js\";\nimport { loadServerRows, processTreeDataRows, processRowGroupingRows, DEFAULT_SERVER_OPTIONS } from \"./serverUtils.js\";\nimport { randomInt } from \"../services/index.js\";\nimport { getMovieRows, getMovieColumns } from \"./useMovieData.js\";\nconst dataCache = new LRUCache({\n  max: 10,\n  ttl: 60 * 5 * 1e3 // 5 minutes\n});\nexport const BASE_URL = 'https://mui.com/x/api/data-grid';\nconst GET_DEFAULT_DATASET_OPTIONS = isRowGrouping => ({\n  dataSet: isRowGrouping ? 'Movies' : 'Commodity',\n  rowLength: isRowGrouping ? getMovieRows().length : 100,\n  maxColumns: 6\n});\nconst getColumnsFromOptions = options => {\n  let columns;\n  switch (options.dataSet) {\n    case 'Commodity':\n      columns = getCommodityColumns(options.editable);\n      break;\n    case 'Employee':\n      columns = getEmployeeColumns();\n      break;\n    case 'Movies':\n      columns = getMovieColumns();\n      break;\n    default:\n      throw new Error('Unknown dataset');\n  }\n  if (options.visibleFields) {\n    columns = columns.map(col => options.visibleFields?.includes(col.field) ? col : _extends({}, col, {\n      hide: true\n    }));\n  }\n  if (options.maxColumns) {\n    columns = columns.slice(0, options.maxColumns);\n  }\n  return columns;\n};\nfunction decodeParams(url) {\n  const params = new URL(url).searchParams;\n  const decodedParams = {};\n  const array = Array.from(params.entries());\n  for (const [key, value] of array) {\n    try {\n      decodedParams[key] = JSON.parse(value);\n    } catch {\n      decodedParams[key] = value;\n    }\n  }\n  return decodedParams;\n}\nconst getInitialState = (columns, groupingField) => {\n  const columnVisibilityModel = {};\n  columns.forEach(col => {\n    if (col.hide) {\n      columnVisibilityModel[col.field] = false;\n    }\n  });\n  if (groupingField) {\n    columnVisibilityModel[groupingField] = false;\n  }\n  return {\n    columns: {\n      columnVisibilityModel\n    }\n  };\n};\nconst defaultColDef = getGridDefaultColumnTypes();\nfunction sendEmptyResponse() {\n  return new Promise(resolve => {\n    resolve({\n      rows: [],\n      rowCount: 0\n    });\n  });\n}\nexport const useMockServer = (dataSetOptions, serverOptions, shouldRequestsFail) => {\n  const [data, setData] = React.useState();\n  const [index, setIndex] = React.useState(0);\n  const shouldRequestsFailRef = React.useRef(shouldRequestsFail ?? false);\n  React.useEffect(() => {\n    if (shouldRequestsFail !== undefined) {\n      shouldRequestsFailRef.current = shouldRequestsFail;\n    }\n  }, [shouldRequestsFail]);\n  const isRowGrouping = dataSetOptions?.rowGrouping ?? false;\n  const options = _extends({}, GET_DEFAULT_DATASET_OPTIONS(isRowGrouping), dataSetOptions);\n  const isTreeData = options.treeData?.groupingField != null;\n  const columns = React.useMemo(() => {\n    return getColumnsFromOptions({\n      dataSet: options.dataSet,\n      editable: options.editable,\n      maxColumns: options.maxColumns,\n      visibleFields: options.visibleFields\n    });\n  }, [options.dataSet, options.editable, options.maxColumns, options.visibleFields]);\n  const initialState = React.useMemo(() => getInitialState(columns, options.treeData?.groupingField), [columns, options.treeData?.groupingField]);\n  const columnsWithDefaultColDef = React.useMemo(() => columns.map(column => _extends({}, defaultColDef[column.type || 'string'], column)), [columns]);\n  const getGroupKey = React.useMemo(() => {\n    if (isTreeData) {\n      return row => row[options.treeData.groupingField];\n    }\n    return undefined;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.treeData?.groupingField, isTreeData]);\n  const getChildrenCount = React.useMemo(() => {\n    if (isTreeData) {\n      return row => row.descendantCount;\n    }\n    return undefined;\n  }, [isTreeData]);\n  React.useEffect(() => {\n    const cacheKey = `${options.dataSet}-${options.rowLength}-${index}-${options.maxColumns}`;\n\n    // Cache to allow fast switch between the JavaScript and TypeScript version\n    // of the demos.\n    if (dataCache.has(cacheKey)) {\n      const newData = dataCache.get(cacheKey);\n      setData(newData);\n      return undefined;\n    }\n    if (options.dataSet === 'Movies') {\n      const rowsData = {\n        rows: getMovieRows(),\n        columns\n      };\n      setData(rowsData);\n      dataCache.set(cacheKey, rowsData);\n      return undefined;\n    }\n    let active = true;\n    (async () => {\n      let rowData;\n      const rowLength = options.rowLength;\n      if (rowLength > 1000) {\n        rowData = await getRealGridData(1000, columns);\n        rowData = await extrapolateSeed(rowLength, rowData);\n      } else {\n        rowData = await getRealGridData(rowLength, columns);\n      }\n      if (!active) {\n        return;\n      }\n      if (isTreeData) {\n        rowData = addTreeDataOptionsToDemoData(rowData, {\n          maxDepth: options.treeData?.maxDepth,\n          groupingField: options.treeData?.groupingField,\n          averageChildren: options.treeData?.averageChildren\n        });\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        deepFreeze(rowData);\n      }\n      dataCache.set(cacheKey, rowData);\n      setData(rowData);\n    })();\n    return () => {\n      active = false;\n    };\n  }, [columns, isTreeData, options.rowLength, options.treeData?.maxDepth, options.treeData?.groupingField, options.treeData?.averageChildren, options.dataSet, options.maxColumns, index]);\n  const fetchRows = React.useCallback(async requestUrl => {\n    if (!requestUrl || !data?.rows) {\n      return sendEmptyResponse();\n    }\n    const params = decodeParams(requestUrl);\n    const verbose = serverOptions?.verbose ?? true;\n    // eslint-disable-next-line no-console\n    const print = console.info;\n    if (verbose) {\n      print('MUI X: DATASOURCE REQUEST', params);\n    }\n    let getRowsResponse;\n    const serverOptionsWithDefault = {\n      minDelay: serverOptions?.minDelay ?? DEFAULT_SERVER_OPTIONS.minDelay,\n      maxDelay: serverOptions?.maxDelay ?? DEFAULT_SERVER_OPTIONS.maxDelay,\n      useCursorPagination: serverOptions?.useCursorPagination ?? DEFAULT_SERVER_OPTIONS.useCursorPagination\n    };\n    if (shouldRequestsFailRef.current) {\n      const {\n        minDelay,\n        maxDelay\n      } = serverOptionsWithDefault;\n      const delay = randomInt(minDelay, maxDelay);\n      return new Promise((_, reject) => {\n        if (verbose) {\n          print('MUI X: DATASOURCE REQUEST FAILURE', params);\n        }\n        setTimeout(() => reject(new Error('Could not fetch the data')), delay);\n      });\n    }\n    if (isTreeData) {\n      const {\n        rows,\n        rootRowCount\n      } = await processTreeDataRows(data?.rows ?? [], params, serverOptionsWithDefault, columnsWithDefaultColDef);\n      getRowsResponse = {\n        rows: rows.slice().map(row => _extends({}, row, {\n          path: undefined\n        })),\n        rowCount: rootRowCount\n      };\n    } else if (isRowGrouping) {\n      const {\n        rows,\n        rootRowCount\n      } = await processRowGroupingRows(data?.rows ?? [], params, serverOptionsWithDefault, columnsWithDefaultColDef);\n      getRowsResponse = {\n        rows: rows.slice().map(row => _extends({}, row, {\n          path: undefined\n        })),\n        rowCount: rootRowCount\n      };\n    } else {\n      const {\n        returnedRows,\n        nextCursor,\n        totalRowCount\n      } = await loadServerRows(data?.rows ?? [], _extends({}, params, params.paginationModel), serverOptionsWithDefault, columnsWithDefaultColDef);\n      getRowsResponse = {\n        rows: returnedRows,\n        rowCount: totalRowCount,\n        pageInfo: {\n          nextCursor\n        }\n      };\n    }\n    return new Promise(resolve => {\n      if (verbose) {\n        print('MUI X: DATASOURCE RESPONSE', params, getRowsResponse);\n      }\n      resolve(getRowsResponse);\n    });\n  }, [data, serverOptions?.verbose, serverOptions?.minDelay, serverOptions?.maxDelay, serverOptions?.useCursorPagination, isTreeData, columnsWithDefaultColDef, isRowGrouping]);\n  return {\n    columns: columnsWithDefaultColDef,\n    initialState: options.dataSet === 'Movies' ? {} : initialState,\n    getGroupKey,\n    getChildrenCount,\n    fetchRows,\n    loadNewData: () => {\n      setIndex(oldIndex => oldIndex + 1);\n    },\n    isReady: Boolean(data?.rows?.length)\n  };\n};"],
  "mappings": "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,WAAU,WAAU,SAAQ,WAAU,WAAU,WAAU,YAAW,aAAY,YAAW,WAAU,QAAO,WAAU,QAAO,UAAS,WAAU,WAAU,QAAO,WAAU,WAAU,WAAU,WAAU,UAAS,QAAO,UAAS,UAAS,aAAY,WAAU,YAAW,UAAS,SAAQ,UAAS,YAAW,WAAU,QAAO,SAAQ,SAAQ,SAAQ,SAAQ,WAAU,UAAS,YAAW,aAAY,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,WAAU,aAAY,UAAS,QAAO,YAAW,WAAU,UAAS,UAAS,SAAQ,UAAS,YAAW,YAAW,YAAW,WAAU,UAAS,WAAU,SAAQ,YAAW,UAAS,WAAU,SAAQ,SAAQ,SAAQ,YAAW,WAAU,WAAU,UAAS,WAAU,SAAQ,WAAU,QAAO,WAAU,WAAU,aAAY,aAAY,UAAS,QAAO,WAAU,WAAU,WAAU,YAAW,aAAY,WAAU,UAAS,WAAU,YAAW,WAAU,eAAc,WAAU,WAAU,UAAS,cAAa,cAAa,YAAW,aAAY,SAAQ,SAAQ,UAAS,YAAW,UAAS,SAAQ,SAAQ,WAAU,UAAS,UAAS,UAAS,WAAU,WAAU,WAAU,UAAS,WAAU,YAAW,SAAQ,YAAW,WAAU,UAAS,UAAS,WAAU,YAAW,UAAS,YAAW,UAAS,WAAU,QAAO,UAAS,WAAU,SAAQ,UAAS,aAAY,YAAW,WAAU,cAAa,YAAW,UAAS,WAAU,YAAW,WAAU,YAAW,UAAS,YAAW,UAAS,WAAU,YAAW,UAAS,OAAM,YAAW,YAAW,SAAQ,UAAS,SAAQ,UAAS,WAAU,YAAW,YAAW,WAAU,aAAY,WAAU,YAAW,YAAW,aAAY,WAAU,UAAS,WAAU,YAAW,UAAS,WAAU,SAAQ,WAAU,eAAc,cAAa,aAAY,YAAW,aAAY,eAAc,cAAa,eAAc,YAAW,UAAS,YAAW,YAAW,WAAU,YAAW,QAAO,aAAY,YAAW,cAAa,YAAW,WAAU,YAAW,WAAU,SAAQ,UAAS,UAAS,SAAQ,WAAU,SAAQ,UAAS,UAAS,aAAY,WAAU,aAAY,UAAS,YAAW,UAAS,UAAS,WAAU,aAAY,QAAO,UAAS,UAAS,SAAQ,WAAU,YAAW,cAAa,YAAW,QAAO,UAAS,UAAS,WAAU,UAAS,SAAQ,UAAS,UAAS,UAAS,YAAW,YAAW,UAAS,UAAS,WAAU,SAAQ,YAAW,SAAQ,aAAY,UAAS,UAAS,UAAS,WAAU,YAAW,WAAU,aAAY,aAAY,WAAU,WAAU,YAAW,cAAa,YAAW,YAAW,cAAa,UAAS,YAAW,WAAU,WAAU,YAAW,SAAQ,WAAU,QAAO,WAAU,UAAS,WAAU,UAAS,QAAO,WAAU,UAAS,YAAW,WAAU,UAAS,UAAS,WAAU,WAAU,WAAU,YAAW,WAAU,UAAS,UAAS,aAAY,aAAY,YAAW,WAAU,YAAW,YAAW,UAAS,OAAM,aAAY,WAAU,OAAM,SAAQ,YAAW,UAAS,WAAU,UAAS,SAAQ,WAAU,WAAU,SAAQ,WAAU,aAAY,WAAU,aAAY,UAAS,UAAS,UAAS,YAAW,WAAU,WAAU,WAAU,UAAS,SAAQ,QAAO,WAAU,WAAU,WAAU,UAAS,WAAU,UAAS,OAAM,WAAU,QAAO,SAAQ,SAAQ,YAAW,UAAS,SAAQ,YAAW,YAAW,QAAO,YAAW,SAAQ,UAAS,SAAQ,UAAS,WAAU,UAAS,WAAU,UAAS,WAAU,QAAO,WAAU,WAAU,OAAM,QAAO,WAAU,UAAS,WAAU,UAAS,QAAO,UAAS,WAAU,YAAW,YAAW,SAAQ,QAAO,OAAM,SAAQ,UAAS,YAAW,WAAU,WAAU,QAAO,UAAS,WAAU,QAAO,WAAU,UAAS,YAAW,UAAS,aAAY,WAAU,UAAS,YAAW,YAAW,WAAU,YAAW,UAAS,WAAU,YAAW,WAAU,UAAS,cAAa,UAAS,WAAU,YAAW,SAAQ,UAAS,WAAU,WAAU,UAAS,SAAQ,UAAS,UAAS,aAAY,YAAW,WAAU,UAAS,UAAS,aAAY,WAAU,OAAM,QAAO,WAAU,WAAU,YAAW,UAAS,UAAS,QAAO,QAAO,WAAU,QAAO,UAAS,WAAU,WAAU,UAAS,WAAU,WAAU,QAAO,SAAQ,YAAW,YAAW,aAAY,YAAW,aAAY,OAAM,UAAS,YAAW,WAAU,WAAU,SAAQ,WAAU,WAAU,SAAQ,UAAS,QAAO,UAAS,QAAO,WAAU,WAAU,UAAS,QAAO,YAAW,YAAW,SAAQ,UAAS,UAAS,WAAU,SAAQ,QAAO,SAAQ,WAAU,WAAU,UAAS,SAAQ,YAAW,gBAAe,aAAY,YAAW,SAAQ,WAAU,WAAU,YAAW,aAAY,WAAU,SAAQ,UAAS,SAAQ,aAAY,YAAW,WAAU,WAAU,aAAY,YAAW,UAAS,UAAS,YAAW,YAAW,aAAY,eAAc,YAAW,WAAU,WAAU,UAAS,YAAW,YAAW,UAAS,UAAS,aAAY,UAAS,WAAU,UAAS,OAAM,UAAS,UAAS,YAAW,UAAS,UAAS,WAAU,UAAS,aAAY,WAAU,UAAS,aAAY,YAAW,UAAS,WAAU,SAAQ,YAAW,UAAS,WAAU,aAAY,UAAS,YAAW,QAAO,YAAW,SAAQ,UAAU;AAAA,UAC1gK;AAAA,UAEA,UAAU;AAAA,YACN,MAAM,CAAC,QAAQ,QAAQ,aAAa,UAAU,YAAY,OAAO,SAAS,UAAU,SAAS,SAAS,SAAS,QAAQ,YAAY,QAAQ,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,UAAU,UAAU,YAAY,SAAS,UAAU,SAAS,UAAU,QAAQ,aAAa,WAAW,OAAO,UAAU,SAAS,UAAU,UAAU,SAAS,QAAQ,UAAU,OAAO,WAAW,QAAQ,QAAQ,QAAQ,UAAU,SAAS,SAAS,UAAU,aAAa,QAAQ,QAAQ,aAAa,SAAS,SAAS,QAAQ,OAAO,SAAS,WAAW,UAAU,SAAS,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,SAAS,SAAS,QAAQ,OAAO,QAAQ,WAAW,SAAS,YAAY,SAAS,SAAS,SAAS,QAAQ,SAAS,UAAU,QAAQ,SAAS,WAAW,SAAS,QAAQ,UAAU,UAAU,UAAU,SAAS,aAAa,WAAW,QAAQ,SAAS,SAAS,UAAU,UAAU,QAAQ,YAAY,SAAS,WAAW,SAAS,WAAW,UAAU,UAAU,aAAa,SAAS,OAAO,UAAU,QAAQ,WAAW,WAAW,WAAW,OAAO,WAAW,SAAS,QAAQ,UAAU,SAAS,QAAQ,WAAW,OAAO,UAAU,UAAU,OAAO,SAAS,WAAW,WAAW,OAAO,UAAU,SAAS,SAAS,UAAU,WAAW,QAAQ,SAAS,UAAU,UAAU,WAAW,UAAU,QAAQ,QAAQ,SAAS,SAAS,UAAU,SAAS,YAAY,YAAY,QAAQ,YAAY,QAAQ,SAAS,aAAa,YAAY,UAAU,YAAY,SAAS,QAAQ,UAAU,UAAU,UAAU,UAAU,WAAW,YAAY,SAAS,SAAS,OAAO,SAAS,UAAU,QAAQ,WAAW,aAAa,QAAQ,QAAQ,QAAQ,SAAS,YAAY,SAAS,QAAQ,UAAU,UAAU,UAAU,SAAS,OAAO,UAAU,YAAY,aAAa,SAAS,SAAS,OAAO,WAAW,SAAS,WAAW,WAAW,UAAU,SAAS,WAAW,UAAU,SAAS,SAAS,WAAW,aAAa,QAAQ,YAAY,UAAU,WAAW,YAAY,WAAW,UAAU,QAAQ,QAAQ,QAAQ,UAAU,UAAU,YAAY,QAAQ,UAAU,UAAU,UAAU,QAAQ,QAAQ,UAAU,WAAW,cAAc,QAAQ,WAAW,QAAQ,UAAU,WAAW,SAAS,UAAU,WAAW,QAAQ,UAAU,WAAW,WAAW,UAAU,UAAU,SAAS,QAAQ,UAAU,WAAW,SAAS,SAAS,UAAU,WAAW,UAAU,WAAW,WAAW,SAAS;AAAA;AAAA,YAEx2E,MAAM,CAAC,OAAO,WAAW,cAAc,WAAW,SAAS,UAAU,QAAQ,cAAc,YAAY,UAAU,cAAc,aAAa,WAAW,QAAQ,WAAW,UAAU,WAAW,YAAY,aAAa,UAAU,SAAS,WAAW,SAAS,YAAY,WAAW,YAAY,YAAY,SAAS,WAAW,UAAU,UAAU,SAAS,WAAW,YAAY,YAAY,WAAW,UAAU,WAAW,QAAQ,aAAa,SAAS,YAAY,SAAS,cAAc,YAAY,QAAQ,OAAO,YAAY,YAAY,YAAY,YAAY,SAAS,UAAU,aAAa,aAAa,QAAQ,SAAS,SAAS,UAAU,QAAQ,WAAW,WAAW,YAAY,UAAU,YAAY,YAAY,cAAc,UAAU,aAAa,SAAS,OAAO,UAAU,QAAQ,WAAW,SAAS,QAAQ,YAAY,WAAW,SAAS,OAAO,WAAW,SAAS,SAAS,WAAW,QAAQ,SAAS,QAAQ,SAAS,WAAW,SAAS,SAAS,WAAW,YAAY,SAAS,WAAW,QAAQ,YAAY,cAAc,SAAS,kBAAkB,gBAAgB,eAAe,aAAa,gBAAgB,UAAU,UAAU,SAAS,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,YAAY,SAAS,aAAa,SAAS,QAAQ,SAAS,YAAY,SAAS,WAAW,aAAa,WAAW,UAAU,QAAQ,QAAQ,WAAW,QAAQ,WAAW,WAAW,YAAY,WAAW,UAAU,QAAQ,UAAU,WAAW,UAAU,UAAU,aAAa,SAAS,SAAS,YAAY,WAAW,UAAU,QAAQ,WAAW,SAAS,aAAa,WAAW,SAAS,WAAW,SAAS,QAAQ,YAAY,SAAS,SAAS,YAAY,UAAU;AAAA;AAAA,YAExqD,MAAM,CAAC,OAAO,WAAW,QAAQ,UAAU,SAAS,OAAO,SAAS,SAAS,QAAQ,QAAQ,QAAQ,YAAY,aAAa,WAAW,SAAS,UAAU,SAAS,WAAW,UAAU,SAAS,WAAW,YAAY,WAAW,aAAa,WAAW,YAAY,UAAU,SAAS,QAAQ,SAAS,SAAS,QAAQ,SAAS,QAAQ,SAAS,WAAW,UAAU,SAAS,OAAO,SAAS,SAAS,SAAS,WAAW,OAAO,SAAS,SAAS,WAAW,UAAU,SAAS,SAAS,OAAO,QAAQ,UAAU,QAAQ,UAAU,YAAY,WAAW,WAAW,WAAW,YAAY,WAAW,WAAW,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,OAAO,QAAQ,SAAS,QAAQ,UAAU,SAAS,UAAU,SAAS,QAAQ,WAAW,SAAS,UAAU,UAAU,SAAS,SAAS,SAAS,WAAW,SAAS,aAAa,WAAW,WAAW,WAAW,SAAS,WAAW,YAAY,UAAU,UAAU,SAAS,WAAW,UAAU,QAAQ,WAAW,UAAU,YAAY,SAAS,WAAW,UAAU,OAAO,UAAU,QAAQ,WAAW,QAAQ,WAAW,UAAU,SAAS,QAAQ,UAAU,UAAU,SAAS,UAAU,SAAS,WAAW,UAAU,QAAQ,SAAS,UAAU,WAAW,WAAW,UAAU,QAAQ,YAAY,SAAS,WAAW,UAAU,KAAK;AAAA;AAAA,YAEvwC,MAAM,CAAC,SAAQ,QAAO,aAAY,WAAU,WAAU,WAAU,YAAW,aAAY,YAAW,YAAW,SAAQ,UAAS,WAAU,aAAY,WAAU,UAAS,YAAW,aAAY,YAAW,UAAS,YAAW,SAAQ,UAAS,aAAY,SAAQ,aAAY,QAAO,UAAS,SAAQ,UAAS,YAAW,WAAU,UAAS,UAAS,WAAU,aAAY,SAAQ,eAAc,WAAU,SAAQ,WAAU,WAAU,SAAQ,QAAO,SAAQ,UAAS,UAAS,cAAa,UAAS,YAAW,YAAW,UAAS,YAAW,SAAQ,YAAW,aAAY,aAAY,SAAQ,aAAY,UAAS,aAAY,UAAS,SAAQ,SAAQ,aAAY,WAAU,WAAU,UAAS,WAAU,aAAY,UAAS,YAAW,aAAY,aAAY,UAAS,aAAY,QAAO,WAAU,UAAS,SAAQ,cAAa,WAAU,aAAY,YAAW,YAAW,cAAa,YAAW,WAAU,YAAW,aAAY,YAAW,YAAW,WAAU,YAAW,UAAS,UAAS,UAAS,SAAQ,WAAU,WAAU,WAAU,WAAU,aAAY,WAAU,UAAS,WAAU,SAAQ,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,aAAY,cAAa,WAAU,WAAU,UAAS,UAAS,WAAU,aAAY,UAAS,QAAO,UAAS,QAAO,UAAS,aAAY,QAAO,WAAU,YAAW,UAAS,UAAS,WAAU,WAAU,aAAY,SAAQ,UAAS,UAAS,UAAS,SAAQ,WAAU,SAAQ,aAAY,YAAW,YAAW,WAAU,aAAY,aAAY,cAAa,UAAS,YAAW,SAAQ,WAAU,SAAQ,YAAW,YAAW,SAAQ,cAAa,YAAW,WAAU,YAAW,UAAS,YAAW,aAAY,aAAY,UAAS,WAAU,aAAY,UAAS,WAAU,YAAW,YAAW,aAAY,SAAQ,cAAa,cAAa,aAAY,UAAS,SAAQ,UAAS,YAAW,YAAW,YAAW,cAAa,QAAO,QAAO,YAAW,UAAS,cAAa,aAAY,WAAU,YAAW,aAAY,WAAU,YAAW,UAAS,UAAS,UAAS,UAAS,YAAW,UAAS,SAAQ,aAAY,aAAY,WAAU,YAAW,SAAQ,SAAQ,SAAQ,YAAW,UAAS,QAAO,WAAU,aAAY,SAAQ,QAAO,UAAS,UAAS,QAAO,WAAU,YAAW,gBAAe,aAAY,UAAS,QAAO,cAAa,WAAU,aAAY,UAAS,WAAU,WAAU,WAAU,WAAU,aAAY,WAAU,cAAa,OAAM,OAAM,WAAU,SAAQ,WAAU,YAAW,WAAU,YAAW,UAAS,SAAQ,SAAQ,YAAW,UAAS,WAAU,UAAS,WAAU,aAAY,YAAW,aAAY,UAAS,WAAU,aAAY,aAAY,YAAW,YAAW,YAAW,UAAS,aAAY,cAAa,eAAc,WAAU,WAAU,UAAS,WAAU,aAAY,WAAU,YAAW,aAAY,YAAW,YAAW,YAAW,QAAO,SAAQ,SAAQ,QAAO,WAAU,YAAW,UAAS,UAAS,WAAU,YAAW,cAAa,QAAO,UAAS,UAAS,YAAW,UAAS,aAAY,UAAS,SAAQ,SAAQ,SAAQ,YAAW,WAAU,QAAO,SAAQ,SAAQ,SAAQ,SAAQ,aAAY,YAAW,WAAU,YAAW,aAAY,WAAU,OAAM,QAAO,UAAS,QAAO,YAAW,YAAW,SAAQ,YAAW,WAAU,YAAW,SAAQ,SAAQ,UAAS,aAAY,UAAS,aAAY,YAAW,SAAQ,aAAY,UAAS,cAAa,YAAW,SAAQ,UAAS,SAAQ,UAAS,UAAS,WAAU,UAAS,WAAU,YAAW,QAAO,WAAU,cAAa,UAAS,WAAU,WAAU,eAAc,aAAY,WAAU,UAAS,aAAY,YAAW,UAAS,SAAQ,WAAU,WAAU,UAAS,UAAS,UAAS,UAAS,YAAW,UAAS,aAAY,QAAO,QAAO,UAAS,UAAS,UAAS,SAAQ,SAAQ,UAAS,UAAS,WAAU,YAAW,WAAU,WAAU,UAAS,UAAS,WAAU,aAAY,SAAQ,YAAW,WAAU,aAAY,UAAS,WAAU,UAAS,WAAU,YAAW,WAAU,cAAa,cAAa,aAAY,aAAY,aAAY,YAAW,aAAY,YAAW,UAAS,WAAU,aAAY,UAAS,aAAY,YAAW,WAAU,UAAS,YAAW,QAAO,QAAO,QAAO,WAAU,UAAS,WAAU,QAAO,YAAW,UAAS,UAAS,UAAS,YAAW,SAAQ,YAAW,YAAW,WAAU,UAAS,QAAO,WAAU,UAAS,UAAS,UAAS,aAAY,WAAU,WAAU,UAAS,WAAU,SAAQ,YAAW,WAAU,YAAW,UAAS,aAAY,WAAU,aAAY,YAAW,aAAY,YAAW,YAAW,YAAW,WAAU,WAAU,WAAU,WAAU,UAAS,UAAS,SAAQ,QAAO,KAAK;AAAA,UACt9I;AAAA,QACJ;AAAA,QAEA,WAAW;AAAA,UACP,MAAM,CAAC,SAAS,WAAW,YAAY,SAAS,SAAS,SAAS,UAAU,UAAU,SAAS,UAAU,YAAY,UAAU,WAAW,SAAS,UAAU,UAAU,YAAY,UAAU,YAAY,YAAY,SAAS,aAAa,SAAS,OAAO,UAAU,QAAQ,SAAS,SAAS,aAAa,QAAQ,UAAU,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,YAAY,UAAU,UAAU,YAAY,SAAS,WAAW,UAAU,YAAY,YAAY,UAAU,SAAS,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,QAAQ,QAAQ,UAAU,QAAQ,UAAU,UAAU,UAAU,UAAU,cAAc,OAAO,UAAU,QAAQ,UAAU,YAAY,QAAQ,WAAW,SAAS,UAAU,UAAU,SAAS,WAAW,SAAS,WAAW,QAAQ,UAAU,QAAQ,aAAa,WAAW,WAAW,SAAS,UAAU,QAAQ,aAAa,UAAU,UAAU,cAAc,UAAU,WAAW,UAAU,YAAY,UAAU,aAAa,WAAW,WAAW,QAAQ,SAAS,SAAS,QAAQ,YAAY,UAAU,YAAY,WAAW,SAAS,QAAQ,QAAQ,UAAU,SAAS,YAAY,UAAU,SAAS,YAAY,UAAU,YAAY,QAAQ,YAAY,SAAS,SAAS,UAAU,WAAW,SAAS,QAAQ,WAAW,WAAW,UAAU,UAAU,UAAU,SAAS,YAAY,SAAS,QAAQ,SAAS,WAAW,WAAW,UAAU,SAAS,SAAS,SAAS,SAAS,UAAU,QAAQ,UAAU,QAAQ,aAAa,QAAQ,SAAS,WAAW,UAAU,SAAS,WAAW,SAAS,UAAU,YAAY,QAAQ,SAAS,WAAW,QAAQ,WAAW,UAAU,WAAW,WAAW,YAAY,SAAS,UAAU,SAAS,YAAY,UAAU,UAAU,UAAU,OAAO,WAAW,SAAS,WAAW,UAAU,UAAU,QAAQ,cAAc,WAAW,QAAQ,WAAW,QAAQ,UAAU,OAAO,SAAS,aAAa,aAAa,UAAU,UAAU,YAAY,WAAW,UAAU,QAAQ,UAAU,UAAU,UAAU,YAAY,UAAU,UAAU,aAAa,QAAQ,WAAW,QAAQ,WAAW,YAAY,WAAW,WAAW,UAAU,cAAc,YAAY,cAAc,YAAY,SAAS,SAAS,UAAU,SAAS,UAAU,WAAW,YAAY,UAAU,aAAa,SAAS,UAAU,UAAU,UAAU,WAAW,UAAU,UAAU,UAAU,QAAQ,OAAO,UAAU,SAAS,QAAQ,WAAW,WAAW,UAAU,SAAS,UAAU,WAAW,SAAS,UAAU,OAAO,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,QAAQ,YAAY,WAAW,OAAO,SAAS,WAAW,QAAQ,QAAQ,WAAW,UAAU,QAAQ,YAAY,QAAQ,YAAY,WAAW,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,UAAU,UAAU,WAAW,YAAY,SAAS,SAAS,SAAS,aAAa,YAAY,QAAQ,WAAW,YAAY,SAAS,SAAS,QAAQ,UAAU,QAAQ,QAAQ,UAAU,UAAU,YAAY,UAAU,QAAQ,UAAU,SAAS,UAAU,YAAY,UAAU,SAAS,QAAQ,UAAU,SAAS,UAAU,WAAW,UAAU,UAAU,QAAQ,SAAS,QAAQ,UAAU,YAAY,SAAS,WAAW,SAAS,SAAS,UAAU,SAAS,aAAa,WAAW,UAAU,SAAS,SAAS,UAAU,UAAU,YAAY,SAAS,WAAW,YAAY,UAAU,WAAW,WAAW,UAAU,UAAU,aAAa,WAAW,UAAU,QAAQ,SAAS,UAAU,QAAQ,QAAQ,QAAQ,YAAY,UAAU,SAAS,UAAU,WAAW,WAAW,QAAQ,UAAU,WAAW,SAAS,UAAU,WAAW,WAAW,UAAU,QAAQ,SAAS,WAAW,UAAU,SAAS,UAAU,cAAc,YAAY,UAAU,WAAW,UAAU,QAAQ,WAAW,UAAU,UAAU,WAAW,UAAU,WAAW,WAAW,aAAa,SAAS,UAAU,YAAY,UAAU,QAAQ,UAAU,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,QAAQ,SAAS,SAAS,SAAS,WAAW,QAAQ,SAAS,WAAW,QAAQ,YAAY,YAAY,WAAW,WAAW,YAAY,SAAS,SAAS,SAAS,cAAc,UAAU,SAAS,WAAW,YAAY,QAAQ,SAAS,QAAQ,YAAY,SAAS,WAAW,SAAS,UAAU,SAAS,WAAW,YAAY,WAAW,WAAW,eAAe,SAAS,SAAS,UAAU,WAAW,cAAc,aAAa,UAAU,YAAY,SAAS,YAAY,OAAO,WAAW,SAAS,aAAa,YAAY,SAAS,SAAS,SAAS,SAAS,QAAQ,QAAQ,SAAS,SAAS,QAAQ,aAAa,QAAQ,UAAU,UAAU,UAAU,WAAW,UAAU,QAAQ,WAAW,UAAU,SAAS,YAAY,UAAU,UAAU,YAAY,UAAU,QAAQ,QAAQ,cAAc,SAAS,SAAS,UAAU,UAAU,UAAU,aAAa,WAAW,QAAQ,SAAS,aAAa,SAAS,YAAY,WAAW,QAAQ,UAAU,WAAW,WAAW,WAAW,aAAa,QAAQ,WAAW,QAAQ;AAAA;AAAA,UAEz7J,MAAM,CAAC,UAAU,YAAY,YAAY,WAAW,SAAS,UAAU,YAAY,WAAW,UAAU,UAAU,WAAW,YAAY,SAAS,aAAa,cAAc,UAAU,YAAY,YAAY,UAAU,YAAY,aAAa,YAAY,SAAS,UAAU,YAAY,WAAW,WAAW,YAAY,SAAS,aAAa,SAAS,YAAY,YAAY,SAAS,WAAW,cAAc,SAAS,WAAW,aAAa,SAAS,WAAW,WAAW,SAAS,UAAU,cAAc,WAAW,QAAQ,YAAY,YAAY,cAAc,YAAY,YAAY,SAAS,YAAY,cAAc,cAAc,SAAS,cAAc,aAAa,UAAU,UAAU,WAAW,aAAa,cAAc,WAAW,aAAa,aAAa,cAAc,WAAW,UAAU,SAAS,YAAY,aAAa,cAAc,SAAS,WAAW,aAAa,UAAU,WAAW,YAAY,WAAW,SAAS,WAAW,YAAY,WAAW,aAAa,WAAW,QAAQ,UAAU,SAAS,WAAW,aAAa,eAAe,gBAAgB,YAAY,cAAc,SAAS,WAAW,YAAY,SAAS,WAAW,SAAS,SAAS,WAAW,SAAS,WAAW,YAAY,aAAa,cAAc,WAAW,aAAa,UAAU,WAAW,WAAW,QAAQ,YAAY,SAAS,WAAW,SAAS,QAAQ,UAAU,YAAY,SAAS,UAAU,aAAa,YAAY,WAAW,YAAY,cAAc,SAAS,WAAW,WAAW,QAAQ,UAAU,UAAU,WAAW,UAAU,YAAY,YAAY,SAAS,YAAY,UAAU,UAAU,UAAU,YAAY,UAAU,WAAW,SAAS,YAAY,WAAW,UAAU,UAAU,YAAY,SAAS,YAAY,YAAY,YAAY,SAAS,SAAS,WAAW,WAAW,SAAS,eAAe,YAAY,WAAW,SAAS,WAAW,UAAU,YAAY,WAAW,YAAY,QAAQ,YAAY,UAAU,aAAa,WAAW,eAAe,WAAW,SAAS,YAAY,UAAU,YAAY,SAAS,gBAAgB,YAAY,YAAY,YAAY,WAAW,WAAW,YAAY,UAAU,eAAe,YAAY,cAAc,WAAW,YAAY,UAAU,WAAW,WAAW,WAAW,WAAW,YAAY,SAAS,UAAU,WAAW,UAAU,aAAa,SAAS,UAAU,YAAY,UAAU,WAAW,UAAU,cAAc,cAAc,YAAY,eAAe,YAAY,WAAW,YAAY,eAAe,aAAa,aAAa,YAAY,UAAU,cAAc,cAAc,eAAe,cAAc,UAAU,YAAY,WAAW,OAAO,UAAU,SAAS,WAAW,YAAY,QAAQ,SAAS,UAAU,UAAU,UAAU,aAAa,WAAW,aAAa,SAAS,YAAY,QAAQ,SAAS,WAAW,aAAa,eAAe,eAAe,aAAa,UAAU,YAAY,YAAY,aAAa,UAAU,YAAY,SAAS,WAAW,SAAS,YAAY,UAAU,WAAW,eAAe,cAAc,SAAS,YAAY,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,QAAQ,WAAW,UAAU,SAAS,YAAY,WAAW,SAAS,WAAW,UAAU,UAAU,YAAY,YAAY,UAAU,WAAW,QAAQ,WAAW,WAAW,SAAS,aAAa,YAAY,YAAY,SAAS,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,SAAS,WAAW,QAAQ,SAAS,cAAc,cAAc,SAAS,UAAU,aAAa,UAAU,SAAS,WAAW,cAAc,gBAAgB,WAAW,YAAY,SAAS,YAAY,UAAU,SAAS,WAAW,cAAc,WAAW,YAAY,WAAW,aAAa,aAAa,WAAW,kBAAkB,mBAAmB,OAAO,aAAa,UAAU,YAAY,cAAc,QAAQ,QAAQ,SAAS,SAAS,UAAU,WAAW,QAAQ,WAAW,SAAS,WAAW,UAAU,YAAY,eAAe,UAAU,YAAY,aAAa,YAAY,aAAa,WAAW,YAAY,SAAS,WAAW,UAAU,SAAS,YAAY,WAAW,WAAW,WAAW,WAAW,WAAW,aAAa,YAAY,WAAW,WAAW,WAAW,QAAQ,cAAc,YAAY,SAAS,WAAW,WAAW,UAAU,WAAW,WAAW,QAAQ,OAAO,YAAY,WAAW,WAAW,WAAW,YAAY,SAAS,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,aAAa,QAAQ,cAAc,SAAS,cAAc,WAAW,SAAS,WAAW,SAAS,WAAW,cAAc,WAAW,WAAW,YAAY,SAAS,SAAS,WAAW,WAAW,SAAS,eAAe,cAAc,gBAAgB,WAAW,aAAa,UAAU,YAAY,aAAa,UAAU,cAAc,SAAS,WAAW,UAAU,UAAU,WAAW,WAAW,YAAY,SAAS,QAAQ,cAAc,aAAa,aAAa,WAAW,WAAW,YAAY,YAAY,SAAS,SAAS,WAAW,eAAe,WAAW,YAAY,cAAc,SAAS,aAAa,SAAS,SAAS,WAAW,WAAW,WAAW,QAAQ,UAAU,SAAS,SAAS,aAAa,UAAU,cAAc,YAAY,SAAS,aAAa,aAAa,UAAU,YAAY,YAAY,aAAa,aAAa,SAAS,YAAY,aAAa,UAAU,eAAe,eAAe,eAAe,cAAc,cAAc,YAAY,UAAU,YAAY,UAAU,YAAY,WAAW,QAAQ,SAAS,YAAY,UAAU,UAAU,YAAY,YAAY,SAAS,WAAW,UAAU,YAAY,UAAU,aAAa,aAAa,WAAW,aAAa,UAAU,UAAU,UAAU,YAAY,SAAS,YAAY,MAAM,SAAS,MAAM,SAAS,YAAY,WAAW,aAAa,OAAO,WAAW,OAAO,SAAS,WAAW,UAAU,QAAQ,UAAU,QAAQ,eAAe,aAAa,UAAU,WAAW,aAAa,SAAS,SAAS,YAAY,YAAY,SAAS,SAAS,SAAS,MAAM,QAAQ,OAAO,UAAU,SAAS,QAAQ,QAAQ,YAAY,cAAc,YAAY,SAAS,SAAS,WAAW,aAAa,UAAU,SAAS,MAAM,YAAY,aAAa,UAAU,QAAQ,UAAU,aAAa,UAAU,SAAS,WAAW,aAAa,UAAU,WAAW,YAAY,SAAS,YAAY,WAAW,aAAa,aAAa,SAAS,WAAW,WAAW,YAAY,WAAW,YAAY,SAAS,WAAW,YAAY,YAAY,WAAW,YAAY,YAAY,aAAa,UAAU,aAAa,cAAc,WAAW,YAAY,YAAY,QAAQ,WAAW,WAAW,WAAW,YAAY,aAAa,UAAU,UAAU,YAAY,WAAW,YAAY,cAAc,WAAW,WAAW,SAAS,QAAQ,UAAU,UAAU,UAAU,aAAa,UAAU,YAAY,aAAa,aAAa,YAAY,aAAa,WAAW,SAAS,YAAY,UAAU,YAAY,SAAS,WAAW,aAAa,WAAW,WAAW,YAAY,UAAU,WAAW,SAAS,UAAU,QAAQ,QAAQ,WAAW,cAAc,SAAS,WAAW,WAAW,WAAW,UAAU,aAAa,UAAU,WAAW,aAAa,cAAc,YAAY,cAAc,UAAU,WAAW,UAAU,UAAU,cAAc,YAAY,aAAa,eAAe,SAAS,cAAc,WAAW,WAAW,aAAa,WAAW,WAAW,YAAY,QAAQ,UAAU,UAAU,WAAW,UAAU,YAAY,WAAW,SAAS,WAAW,YAAY,SAAS,WAAW,YAAY,SAAS,WAAW,WAAW,UAAU,UAAU,YAAY,WAAW,YAAY,QAAQ,QAAQ,SAAS,YAAY,WAAW,aAAa,QAAQ,UAAU,aAAa,YAAY,WAAW,SAAS,QAAQ,UAAU,SAAS,YAAY,QAAQ,WAAW,aAAa,WAAW,UAAU,YAAY,aAAa,YAAY,QAAQ,QAAQ,UAAU,UAAU,UAAU,YAAY,WAAW,SAAS,WAAW,YAAY,UAAU,aAAa,WAAW,YAAY,WAAW,aAAa,WAAW,YAAY,cAAc,WAAW,WAAW,YAAY,SAAS,WAAW,QAAQ,UAAU,WAAW,WAAW,UAAU,UAAU,SAAS,WAAW,YAAY,WAAW,aAAa,YAAY,cAAc,QAAQ,UAAU,WAAW,WAAW,SAAS,YAAY,SAAS,WAAW,YAAY,WAAW,WAAW,aAAa,SAAS,UAAU,YAAY,YAAY,YAAY,UAAU,WAAW,YAAY,cAAc,eAAe,YAAY,cAAc,SAAS,WAAW,WAAW,YAAY,QAAQ,SAAS,SAAS,WAAW,YAAY,SAAS,UAAU,aAAa,WAAW,SAAS,YAAY,cAAc,QAAQ,aAAa,YAAY,SAAS,cAAc,WAAW,YAAY,WAAW,SAAS,WAAW,YAAY,QAAQ,YAAY,UAAU,UAAU,aAAa,SAAS,QAAQ,aAAa,aAAa,YAAY,WAAW,aAAa,UAAU,WA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,WAAU,SAAQ,aAAY,YAAW,SAAQ,QAAO,UAAS,cAAa,UAAS,WAAU,QAAO,QAAO,UAAS,UAAS,OAAM,YAAW,QAAO,YAAW,YAAW,WAAU,SAAQ,SAAQ,SAAQ,SAAQ,aAAY,UAAS,WAAU,UAAS,QAAO,UAAS,QAAO,SAAQ,OAAM,QAAO,WAAU,YAAW,YAAW,QAAO,UAAS,UAAS,SAAQ,UAAS,UAAS,SAAQ,UAAS,WAAU,UAAS,UAAS,WAAU,WAAU,UAAS,SAAQ,UAAS,UAAS,WAAU,SAAQ,YAAW,SAAQ,QAAO,UAAS,UAAS,WAAU,WAAU,WAAU,YAAW,YAAW,SAAQ,OAAM,QAAO,UAAS,OAAM,UAAS,QAAO,YAAW,QAAO,YAAW,WAAU,WAAU,QAAO,UAAS,QAAO,UAAS,WAAU,SAAQ,QAAO,SAAQ,SAAQ,QAAO,SAAQ,SAAQ,aAAY,WAAU,QAAO,SAAQ,QAAO,UAAS,UAAS,WAAU,WAAU,UAAS,WAAU,QAAO,QAAO,QAAO,SAAQ,SAAQ,QAAO,SAAQ,WAAU,SAAQ,SAAQ,QAAO,WAAU,WAAU,WAAU,UAAS,aAAY,UAAS,UAAS,QAAO,WAAU,cAAa,QAAO,WAAU,QAAO,QAAO,QAAO,SAAQ,SAAQ,aAAY,SAAQ,WAAU,UAAS,UAAS,SAAQ,aAAY,YAAW,QAAO,SAAQ,QAAO,WAAU,UAAS,YAAW,YAAW,SAAQ,UAAS,YAAW,SAAQ,WAAU,UAAS,UAAS,WAAU,YAAW,UAAS,WAAU,WAAU,QAAO,YAAW,YAAW,WAAU,WAAU,SAAQ,SAAQ,WAAU,UAAS,WAAU,YAAW,UAAS,SAAQ,WAAU,UAAS,UAAS,cAAa,QAAO,SAAQ,OAAM,aAAY,WAAU,UAAS,WAAU,QAAO,SAAQ,aAAY,cAAa,WAAU,UAAS,WAAU,WAAU,UAAS,UAAS,UAAS,UAAS,UAAS,YAAW,aAAY,QAAO,SAAQ,WAAU,YAAW,SAAQ,UAAS,SAAQ,WAAU,UAAS,YAAW,WAAU,cAAa,SAAQ,WAAU,UAAS,QAAO,WAAU,QAAO,aAAY,YAAW,QAAO,QAAO,SAAQ,aAAY,QAAO,UAAS,UAAS,YAAW,UAAS,SAAQ,UAAS,aAAY,UAAS,SAAQ,UAAS,WAAU,UAAS,SAAQ,YAAW,WAAU,WAAU,WAAU,aAAY,QAAO,UAAS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A,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,WAAW;AACbbb,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,GAAG;AAAA,EACD,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT,G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",
  "names": ["Chance", "i", "k", "random", "chance", "self", "arr", "alpha", "colorValue", "range", "birthday", "gender", "cf", "data", "_jsx", "React", "import_jsx_runtime", "Country", "_jsxs", "_jsx", "React", "React", "import_jsx_runtime", "styled_default", "DemoLink", "_jsx", "import_jsx_runtime", "_jsx", "React", "import_jsx_runtime", "Incoterm", "_jsxs", "_jsx", "React", "import_jsx_runtime", "styled_default", "Pnl", "_jsx", "React", "import_jsx_runtime", "styled_default", "Value", "ProgressBar", "_jsxs", "_jsx", "React", "import_jsx_runtime", "RatingValue", "_jsxs", "_jsx", "React", "import_jsx_runtime", "styled_default", "_jsx", "React", "import_jsx_runtime", "Value", "styled_default", "TotalPrice", "_jsx", "React", "i", "LICENSE_STATUS", "releaseInfo", "React", "React", "releaseInfo", "React", "import_jsx_runtime", "releaseInfo", "_jsx", "React", "import_jsx_runtime", "React", "useGridRootProps", "useGridApiContext", "import_jsx_runtime", "_a", "useGridRootProps", "apiRef", "useGridApiContext", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "side", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "React", "apiRef", "import_jsx_runtime", "useUtilityClasses", "_a", "useGridRootProps", "apiRef", "useGridApiContext", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "useUtilityClasses", "apiRef", "useGridRootProps", "_jsxs", "_jsx", "PropTypes", "_jsx", "React", "import_jsx_runtime", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "_a", "useGridRootProps", "apiRef", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "React", "import_jsx_runtime", "sx", "_a", "useGridRootProps", "_jsx", "import_jsx_runtime", "_excluded", "useUtilityClasses", "apiRef", "useGridRootProps", "_a", "_b", "_jsxs", "_jsx", "PropTypes", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "_jsx", "i", "PropTypes", "apiRef", "React", "import_jsx_runtime", "apiRef", "_jsx", "_a", "i", "React", "import_prop_types", "React", "import_prop_types", "React", "import_jsx_runtime", "apiRef", "_a", "_b", "_jsx", "React", "useUtilityClasses", "apiRef", "_a", "React", "apiRef", "React", "TreeDataStrategy", "apiRef", "i", "_a", "_b", "i", "i", "i", "import_jsx_runtime", "_excluded", "setStrategyAvailability", "_jsx", "React", "i", "React", "useGridPrivateApiContext", "import_jsx_runtime", "useUtilityClasses", "_a", "apiRef", "useGridPrivateApiContext", "useGridRootProps", "_jsx", "_b", "_jsxs", "import_jsx_runtime", "_excluded", "setStrategyAvailability", "_jsx", "_a", "_b", "React", "apiRef", "_a", "i", "React", "apiRef", "i", "React", "_a", "_b", "apiRef", "React", "React", "Direction", "useUtilityClasses", "apiRef", "React", "useUtilityClasses", "React", "apiRef", "_a", "_b", "React", "i", "React", "_a", "_b", "apiRef", "React", "apiRef", "_a", "_b", "React", "RequestStatus", "i", "apiRef", "_a", "_b", "apiRef", "React", "React", "import_jsx_runtime", "GridProColumnMenu", "_jsx", "React", "import_prop_types", "React", "import_jsx_runtime", "_excluded", "useUtilityClasses", "useGridColumnHeaders", "apiRef", "useGridRootProps", "_a", "i", "_jsx", "_jsxs", "import_jsx_runtime", "_excluded", "styled_default", "GridColumnHeaders", "useGridColumnHeaders", "_jsxs", "_jsx", "PropTypes", "React", "React", "React", "import_jsx_runtime", "styled_default", "apiRef", "useGridPrivateApiContext", "useGridRootProps", "_jsx", "import_jsx_runtime", "useUtilityClasses", "useGridRootProps", "apiRef", "useGridPrivateApiContext", "_jsx", "React", "import_jsx_runtime", "useUtilityClasses", "apiRef", "_jsx", "releaseInfo", "useGridAriaAttributes", "useGridRootProps", "React", "useGridRowAriaAttributes", "apiRef", "useGridPrivateApiContext", "useGridRootProps", "import_jsx_runtime", "useGridAriaAttributes", "useGridRowAriaAttributes", "_jsx", "_a", "DataGridPro", "PropTypes", "React", "apiRef", "apiRef", "i", "apiRef", "_a", "_b", "React", "React", "React", "useGridRootProps", "import_jsx_runtime", "_excluded", "styled_default", "useUtilityClasses", "useGridRootProps", "_jsx", "React", "useGridApiContext", "import_jsx_runtime", "_excluded", "styled_default", "useUtilityClasses", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "import_jsx_runtime", "_excluded", "apiRef", "_a", "_b", "_jsx", "_excluded", "apiRef", "_a", "React", "RowGroupingStrategy", "apiRef", "i", "_a", "apiRef", "_a", "_b", "React", "React", "React", "import_jsx_runtime", "useGridRootProps", "sx", "_jsx", "React", "import_jsx_runtime", "useUtilityClasses", "_a", "useGridRootProps", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "useUtilityClasses", "_a", "apiRef", "useGridRootProps", "_jsx", "_b", "useGridApiContext", "_jsxs", "React", "import_jsx_runtime", "useGridRootProps", "_jsx", "import_jsx_runtime", "_excluded", "_excluded2", "apiRef", "_jsx", "apiRef", "React", "apiRef", "_a", "_b", "i", "React", "_a", "i", "apiRef", "React", "import_prop_types", "import_jsx_runtime", "_excluded", "apiRef", "useGridApiContext", "_jsx", "PropTypes", "React", "import_jsx_runtime", "_jsx", "React", "import_prop_types", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "_a", "_jsxs", "_jsx", "PropTypes", "React", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "useGridRootProps", "_jsxs", "_jsx", "import_jsx_runtime", "_jsx", "import_jsx_runtime", "_excluded", "apiRef", "i", "_a", "_jsx", "React", "_a", "apiRef", "useEventCallback_default", "_b", "document", "React", "_a", "apiRef", "i", "apiRef", "React", "i", "materialSlots", "material_default", "material_default", "defaultSlots", "getReleaseInfo", "releaseInfo", "useGridPrivateApiContext", "useGridAriaAttributes", "_a", "useGridRootProps", "apiRef", "useGridPrivateApiContext", "useGridRowAriaAttributes", "apiRef", "useGridPrivateApiContext", "import_jsx_runtime", "configuration", "useGridAriaAttributes", "useGridRowAriaAttributes", "releaseInfo", "getReleaseInfo", "watermark", "_jsx", "_a", "PropTypes", "DataGridPremium", "React", "import_jsx_runtime", "styled_default", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "styled_default", "_jsx", "apiRef", "useGridApiContext", "React", "import_jsx_runtime", "useGridRootProps", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "_jsx", "_jsxs", "React", "import_jsx_runtime", "apiRef", "useGridApiContext", "_jsxs", "_jsx", "React", "import_jsx_runtime", "StyledAutocomplete", "styled_default", "apiRef", "useGridApiContext", "_jsx", "_createElement", "chance", "i", "React", "_a", "_b", "k", "i", "v", "bf", "i", "k", "_a", "_b", "_c", "React", "currencyFormatter", "React", "_a", "comparator", "i", "defaultColDef", "React", "dataCache", "getColumnsFromOptions", "_a", "getInitialState", "_b", "_c"]
}
